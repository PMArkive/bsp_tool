[1m============================= test session starts =============================[0m
platform win32 -- Python 3.10.0, pytest-7.2.2, pluggy-1.0.0 -- C:\Users\Jared\Documents\GitHub\bsp_tool\venv\Scripts\python.exe
cachedir: .pytest_cache
rootdir: C:\Users\Jared\Documents\GitHub\bsp_tool
plugins: cov-4.0.0
[1mcollecting ... [0mcollected 233 items

tests/test_bsp.py::test_load_bsp[./-tests/maps-map_dirs0] [32mPASSED[0m[32m         [  0%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-gesource-map_dirs1] [32mPASSED[0m[32m [  0%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-half-life 2 riot act-map_dirs2] [32mPASSED[0m[32m [  1%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-TFTS-map_dirs3] [32mPASSED[0m[32m [  1%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-episodeone-map_dirs4] [32mPASSED[0m[32m [  2%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-RunThinkShootLiveVille2-map_dirs5] [32mPASSED[0m[32m [  2%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-cromulentville2-map_dirs6] [32mPASSED[0m[32m [  3%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-companionpiece2-map_dirs7] [32mPASSED[0m[32m [  3%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-eyecandy-map_dirs8] [32mPASSED[0m[32m [  3%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-backontrack-map_dirs9] [32mPASSED[0m[32m [  4%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-tworooms-map_dirs10] [32mPASSED[0m[32m [  4%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-fusionville2-map_dirs11] [32mPASSED[0m[32m [  5%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-tunetwo-map_dirs12] [32mPASSED[0m[32m [  5%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-lvl2-map_dirs13] [32mPASSED[0m[32m [  6%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-thewrapuptwo-map_dirs14] [32mPASSED[0m[32m [  6%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-halloweenhorror4-map_dirs15] [32mPASSED[0m[32m [  6%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-halflifeeternal-map_dirs16] [32mPASSED[0m[32m [  7%][0m
tests/test_bsp.py::test_load_bsp[C:/Program Files (x86)/Steam/steamapps/sourcemods-thelayout-map_dirs17] [32mPASSED[0m[32m [  7%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Cry of Fear-map_dirs18] [32mPASSED[0m[32m [  8%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Half-Life/cstrike-map_dirs19] [32mPASSED[0m[32m [  8%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Half-Life/czero-map_dirs20] [32mPASSED[0m[32m [  9%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Half-Life/czeror-map_dirs21] [32mPASSED[0m[32m [  9%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Half-Life/dmc-map_dirs22] [32mPASSED[0m[32m [  9%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Half-Life/dod-map_dirs23] [32mPASSED[0m[32m [ 10%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Half-Life/gearbox-map_dirs24] [32mPASSED[0m[32m [ 10%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Half-Life/ns-map_dirs25] [32mPASSED[0m[32m [ 11%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Half-Life/ricochet-map_dirs26] [32mPASSED[0m[32m [ 11%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Half-Life/tfc-map_dirs27] [32mPASSED[0m[32m [ 12%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Half-Life/valve-map_dirs28] [32mPASSED[0m[32m [ 12%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Halfquake Trilogy-map_dirs29] [32mPASSED[0m[32m [ 12%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Sven Co-op-map_dirs30] [32mPASSED[0m[32m [ 13%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Alien Swarm-map_dirs31] [32mPASSED[0m[32m [ 13%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Alien Swarm Reactive Drop-map_dirs32] [32mPASSED[0m[32m [ 14%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Blade Symphony-map_dirs33] [32mPASSED[0m[32m [ 14%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Contagion-map_dirs34] [32mPASSED[0m[33m [ 15%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35] [32mPASSED[0m[33m [ 15%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-counter-strike source-map_dirs36] [32mPASSED[0m[33m [ 15%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-day of defeat source-map_dirs37] [32mPASSED[0m[33m [ 16%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-dayofinfamy-map_dirs38] [32mPASSED[0m[33m [ 16%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Dino D-Day-map_dirs39] [32mPASSED[0m[33m [ 17%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Double Action-map_dirs40] [32mPASSED[0m[33m [ 17%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-EntropyZero2-map_dirs41] [32mPASSED[0m[33m [ 18%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-EYE Divine Cybermancy Demo-map_dirs42] [32mPASSED[0m[33m [ 18%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Fistful of Frags-map_dirs43] [32mPASSED[0m[33m [ 18%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Fortress Forever-map_dirs44] [32mPASSED[0m[33m [ 19%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-G String-map_dirs45] [32mPASSED[0m[33m [ 19%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-GarrysMod-map_dirs46] [32mPASSED[0m[33m [ 20%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Half-Life 1 Source Deathmatch-map_dirs47] [32mPASSED[0m[33m [ 20%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-half-life 2/ep2-map_dirs48] [32mPASSED[0m[33m [ 21%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-half-life 2/episodic-map_dirs49] [32mPASSED[0m[33m [ 21%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-half-life 2/hl1-map_dirs50] [32mPASSED[0m[33m [ 21%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-half-life 2/hl2-map_dirs51] [32mPASSED[0m[33m [ 22%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-half-life 2/lostcoast-map_dirs52] [32mPASSED[0m[33m [ 22%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-half-life 2 deathmatch-map_dirs53] [32mPASSED[0m[33m [ 23%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Half-Life 2 Update-map_dirs54] [32mPASSED[0m[33m [ 23%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Half-Life 2 VR-map_dirs55] [32mPASSED[0m[33m [ 24%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-insurgency2-map_dirs56] [32mPASSED[0m[33m [ 24%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57] [32mPASSED[0m[33m [ 24%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-left 4 dead-map_dirs58] [32mPASSED[0m[33m [ 25%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Left 4 Dead 2-map_dirs59] [32mPASSED[0m[33m [ 25%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-MINERVA-map_dirs60] [32mPASSED[0m[33m [ 26%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Momentum Mod Playtest-map_dirs61] [32mPASSED[0m[33m [ 26%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-NEOTOKYO-map_dirs62] [32mPASSED[0m[33m [ 27%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-nmrih-map_dirs63] [32mPASSED[0m[33m [ 27%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Portal-map_dirs64] [32mPASSED[0m[33m [ 27%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Portal 2-map_dirs65] [32mPASSED[0m[33m [ 28%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Portal Reloaded-map_dirs66] [32mPASSED[0m[33m [ 28%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-SourceFilmmaker-map_dirs67] [31mFAILED[0m[31m [ 29%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Synergy-map_dirs68] [32mPASSED[0m[31m [ 29%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Team Fortress 2-map_dirs69] [32mPASSED[0m[31m [ 30%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Transmissions Element 120-map_dirs70] [32mPASSED[0m[31m [ 30%][0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Vampire The Masquerade - Bloodlines-map_dirs71] [32mPASSED[0m[31m [ 30%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-DarkPlaces-map_dirs72] [32mPASSED[0m[31m    [ 31%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Quake-map_dirs73] [32mPASSED[0m[31m         [ 31%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Quake/rerelease-map_dirs74] [32mPASSED[0m[31m [ 32%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Alkaline-map_dirs75] [32mPASSED[0m[31m      [ 32%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Quake/2psb-map_dirs76] [32mPASSED[0m[31m    [ 33%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Quake/rerelease/dopa-map_dirs77] [32mPASSED[0m[31m [ 33%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Anachronox-map_dirs78] [32mPASSED[0m[31m    [ 33%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Daikatana-map_dirs79] [32mPASSED[0m[31m     [ 34%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-DDayNormandy-map_dirs80] [31mFAILED[0m[31m  [ 34%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-HereticII-map_dirs81] [32mPASSED[0m[31m     [ 35%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Hexen2-map_dirs82] [32mPASSED[0m[31m        [ 35%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Nexuiz-map_dirs83] [32mPASSED[0m[31m        [ 36%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-RTCW-map_dirs84] [32mPASSED[0m[31m          [ 36%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-SiN-map_dirs85] [32mPASSED[0m[31m           [ 36%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-SoF-map_dirs86] [32mPASSED[0m[31m           [ 37%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-SoF2-map_dirs87] [32mPASSED[0m[31m          [ 37%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-StarTrekEliteForce-map_dirs88] [32mPASSED[0m[31m [ 38%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-QuakeII-map_dirs89] [32mPASSED[0m[31m       [ 38%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-QuakeIII-map_dirs90] [32mPASSED[0m[31m      [ 39%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Dreamcast/QuakeIII-map_dirs91] [32mPASSED[0m[31m [ 39%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-QuakeLive-map_dirs92] [32mPASSED[0m[31m     [ 39%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-WolfET-map_dirs93] [32mPASSED[0m[31m        [ 40%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-WRATH-map_dirs94] [32mPASSED[0m[31m         [ 40%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Xonotic-map_dirs95] [32mPASSED[0m[31m       [ 41%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Warsow-map_dirs96] [32mPASSED[0m[31m        [ 41%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-CoD1-map_dirs97] [32mPASSED[0m[31m          [ 42%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-CoD2-map_dirs98] [32mPASSED[0m[31m          [ 42%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-CoD4-map_dirs99] [32mPASSED[0m[31m          [ 42%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Nightfire-map_dirs100] [32mPASSED[0m[31m    [ 43%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Dreamcast/Paranoia-map_dirs101] [32mPASSED[0m[31m [ 43%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102] [32mPASSED[0m[31m    [ 44%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-BloodyGoodTime-map_dirs103] [32mPASSED[0m[31m [ 44%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Contagion-map_dirs104] [32mPASSED[0m[31m    [ 45%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-CSMalvinas-map_dirs105] [32mPASSED[0m[31m   [ 45%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-CSS/Bocuma747_SurfMaps-map_dirs106] [32mPASSED[0m[31m [ 45%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-CSS/OiuSURF_SurfMaps-map_dirs107] [32mPASSED[0m[31m [ 46%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-CSO2-map_dirs108] [32mPASSED[0m[31m         [ 46%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109] [32mPASSED[0m[31m [ 47%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/multiplayer-map_dirs110] [32mPASSED[0m[31m [ 47%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-HL2DM/patbytes-map_dirs111] [32mPASSED[0m[31m [ 48%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Infra-map_dirs112] [32mPASSED[0m[31m        [ 48%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-MeruBasu-map_dirs113] [32mPASSED[0m[31m     [ 48%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-MomentumMod-map_dirs114] [32mPASSED[0m[31m  [ 49%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-SiNEpisodes-map_dirs115] [32mPASSED[0m[31m  [ 49%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-TacticalIntervention-map_dirs116] [32mPASSED[0m[31m [ 50%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-TeamFortressQuake-map_dirs117] [32mPASSED[0m[31m [ 50%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-TheShip-map_dirs118] [32mPASSED[0m[31m      [ 51%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Vindictus-map_dirs119] [31mFAILED[0m[31m    [ 51%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Xbox/Half-Life2-map_dirs120] [32mPASSED[0m[31m [ 51%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121] [32mPASSED[0m[31m    [ 52%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122] [32mPASSED[0m[31m [ 52%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall2-map_dirs123] [31mFAILED[0m[31m   [ 53%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-ApexLegends-map_dirs124] [31mFAILED[0m[31m  [ 53%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-ApexLegends/season3-map_dirs125] [31mFAILED[0m[31m [ 54%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-ApexLegends/season10-map_dirs126] [31mFAILED[0m[31m [ 54%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-ApexLegends/season11-map_dirs127] [31mFAILED[0m[31m [ 54%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-ApexLegends/season12-map_dirs128] [31mFAILED[0m[31m [ 55%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-ApexLegends/season13-map_dirs129] [31mFAILED[0m[31m [ 55%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-ApexLegends/season14-map_dirs130] [31mFAILED[0m[31m [ 56%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-ApexLegends/season15-map_dirs131] [31mFAILED[0m[31m [ 56%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-ApexLegends/season16-map_dirs132] [31mFAILED[0m[31m [ 57%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-ApexLegends/switch-map_dirs133] [31mFAILED[0m[31m [ 57%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-FAKK2-map_dirs134] [32mPASSED[0m[31m        [ 57%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-Alice-map_dirs135] [32mPASSED[0m[31m        [ 58%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-MoHAA/demo-map_dirs136] [32mPASSED[0m[31m   [ 58%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-MoHAA/main-map_dirs137] [32mPASSED[0m[31m   [ 59%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-MoHAA/mainta-map_dirs138] [32mPASSED[0m[31m [ 59%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-MoHAA/maintt-map_dirs139] [32mPASSED[0m[31m [ 60%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-StarTrekEliteForceII-map_dirs140] [32mPASSED[0m[31m [ 60%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-StarWarsJediKnight-map_dirs141] [32mPASSED[0m[31m [ 60%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod-StarWarsJediKnightII-map_dirs142] [32mPASSED[0m[31m [ 61%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod/PS4-Titanfall2-map_dirs143] [31mFAILED[0m[31m [ 61%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod/PS4-Titanfall2_tech_test-map_dirs144] [31mFAILED[0m[31m [ 62%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod/X360-Left4Dead-map_dirs145] [31mFAILED[0m[31m [ 62%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod/X360-Left4Dead2-map_dirs146] [32mPASSED[0m[31m [ 63%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod/X360-OrangeBox-map_dirs147] [32mPASSED[0m[31m [ 63%][0m
tests/test_bsp.py::test_load_bsp[E:/Mod/X360-Portal2-map_dirs148] [31mFAILED[0m[31m [ 63%][0m
tests/test_bsplump.py::TestRawBspLump::test_its_raw [32mPASSED[0m[31m               [ 64%][0m
tests/test_bsplump.py::TestRawBspLump::test_list_conversion [32mPASSED[0m[31m       [ 64%][0m
tests/test_bsplump.py::TestRawBspLump::test_indexing [32mPASSED[0m[31m              [ 65%][0m
tests/test_bsplump.py::TestBspLump::test_list_conversion [32mPASSED[0m[31m          [ 65%][0m
tests/test_bsplump.py::TestBspLump::test_indexing [32mPASSED[0m[31m                 [ 66%][0m
tests/test_bsplump.py::TestBspLump::test_del [32mPASSED[0m[31m                      [ 66%][0m
tests/test_bsplump.py::TestBspLump::test_setitem [32mPASSED[0m[31m                  [ 66%][0m
tests/test_bsplump.py::TestBasicBspLump::test_its_basic [32mPASSED[0m[31m           [ 67%][0m
tests/test_bsplump.py::TestBasicBspLump::test_list_conversion [32mPASSED[0m[31m     [ 67%][0m
tests/test_bsplump.py::TestBasicBspLump::test_indexing [32mPASSED[0m[31m            [ 68%][0m
tests/test_d3d_bsp.py::test_no_errors[d3dbsp0] [32mPASSED[0m[31m                    [ 68%][0m
tests/test_d3d_bsp.py::test_no_errors[d3dbsp1] [32mPASSED[0m[31m                    [ 69%][0m
tests/test_d3d_bsp.py::test_no_errors[d3dbsp2] [32mPASSED[0m[31m                    [ 69%][0m
tests/test_d3d_bsp.py::test_no_errors[d3dbsp3] [32mPASSED[0m[31m                    [ 69%][0m
tests/test_d3d_bsp.py::test_entites_loaded[d3dbsp0] [32mPASSED[0m[31m               [ 70%][0m
tests/test_d3d_bsp.py::test_entites_loaded[d3dbsp1] [32mPASSED[0m[31m               [ 70%][0m
tests/test_d3d_bsp.py::test_entites_loaded[d3dbsp2] [32mPASSED[0m[31m               [ 71%][0m
tests/test_d3d_bsp.py::test_entites_loaded[d3dbsp3] [32mPASSED[0m[31m               [ 71%][0m
tests/test_idtech_bsp.py::test_no_errors[bsp0] [32mPASSED[0m[31m                    [ 72%][0m
tests/test_idtech_bsp.py::test_entities_loaded[bsp0] [32mPASSED[0m[31m              [ 72%][0m
tests/test_idtech_bsp.py::test_face_struct[bsp0] [32mPASSED[0m[31m                  [ 72%][0m
tests/test_valve_bsp.py::test_no_errors[bsp0] [32mPASSED[0m[31m                     [ 73%][0m
tests/test_valve_bsp.py::test_no_errors[bsp1] [32mPASSED[0m[31m                     [ 73%][0m
tests/test_valve_bsp.py::test_no_errors[bsp2] [32mPASSED[0m[31m                     [ 74%][0m
tests/test_valve_bsp.py::test_no_errors[bsp3] [32mPASSED[0m[31m                     [ 74%][0m
tests/test_valve_bsp.py::test_entities_loaded[bsp0] [32mPASSED[0m[31m               [ 75%][0m
tests/test_valve_bsp.py::test_entities_loaded[bsp1] [32mPASSED[0m[31m               [ 75%][0m
tests/test_valve_bsp.py::test_entities_loaded[bsp2] [32mPASSED[0m[31m               [ 75%][0m
tests/test_valve_bsp.py::test_entities_loaded[bsp3] [32mPASSED[0m[31m               [ 76%][0m
tests/branches/test_base.py::TestStruct::test_init [32mPASSED[0m[31m                [ 76%][0m
tests/branches/test_base.py::TestStruct::test_unpack [32mPASSED[0m[31m              [ 77%][0m
tests/branches/test_base.py::TestStruct::test_pack [32mPASSED[0m[31m                [ 77%][0m
tests/branches/test_base.py::TestMappedArray::test_init [32mPASSED[0m[31m           [ 78%][0m
tests/branches/test_base.py::TestMappedArray::test_attr_format_collision [32mPASSED[0m[31m [ 78%][0m
tests/branches/test_base.py::TestMappedArray::test_as_cpp [32mPASSED[0m[31m         [ 78%][0m
tests/branches/test_base.py::TestBitField::test_init [32mPASSED[0m[31m              [ 79%][0m
tests/branches/test_base.py::TestBitField::test_overflow [32mPASSED[0m[31m          [ 79%][0m
tests/branches/test_base.py::test_dict_subgroup [32mPASSED[0m[31m                   [ 80%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.id_software.qfusion] [32mPASSED[0m[31m [ 80%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.id_software.quake] [32mPASSED[0m[31m [ 81%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.id_software.quake2] [32mPASSED[0m[31m [ 81%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.id_software.quake3] [32mPASSED[0m[31m [ 81%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.id_software.remake_quake] [32mPASSED[0m[31m [ 82%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.id_software.remake_quake_old] [32mPASSED[0m[31m [ 82%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.infinity_ward.call_of_duty1] [32mPASSED[0m[31m [ 83%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.infinity_ward.call_of_duty2] [32mPASSED[0m[31m [ 83%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.infinity_ward.modern_warfare] [32mPASSED[0m[31m [ 84%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.ion_storm.daikatana] [32mPASSED[0m[31m [ 84%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.gearbox.blue_shift] [32mPASSED[0m[31m [ 84%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.gearbox.nightfire] [32mPASSED[0m[31m [ 85%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.raven.hexen2] [32mPASSED[0m[31m [ 85%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.raven.soldier_of_fortune] [32mPASSED[0m[31m [ 86%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.raven.soldier_of_fortune2] [32mPASSED[0m[31m [ 86%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.ritual.fakk2] [32mPASSED[0m[31m [ 87%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.ritual.mohaa] [32mPASSED[0m[31m [ 87%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.ritual.mohaa_bt] [32mPASSED[0m[31m [ 87%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.ritual.mohaa_demo] [32mPASSED[0m[31m [ 88%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.ritual.sin] [32mPASSED[0m[31m [ 88%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.ritual.star_trek_elite_force2] [32mPASSED[0m[31m [ 89%][0m
tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.valve.goldsrc] [32mPASSED[0m[31m [ 89%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.arkane.dark_messiah_mp] [32mPASSED[0m[31m [ 90%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.arkane.dark_messiah_sp] [32mPASSED[0m[31m [ 90%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.nexon.cso2] [32mPASSED[0m[31m [ 90%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.nexon.cso2_2018] [32mPASSED[0m[31m [ 91%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.nexon.vindictus] [32mPASSED[0m[31m [ 91%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.respawn.apex_legends] [32mPASSED[0m[31m [ 92%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.respawn.titanfall] [32mPASSED[0m[31m [ 92%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.respawn.titanfall_x360] [32mPASSED[0m[31m [ 93%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.respawn.titanfall2] [32mPASSED[0m[31m [ 93%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.troika.vampire] [32mPASSED[0m[31m [ 93%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.valve.alien_swarm] [32mPASSED[0m[31m [ 94%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.valve.left4dead] [32mPASSED[0m[31m [ 94%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.valve.left4dead2] [32mPASSED[0m[31m [ 95%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.valve.orange_box] [32mPASSED[0m[31m [ 95%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.valve.orange_box_x360] [32mPASSED[0m[31m [ 96%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.valve.sdk_2013] [32mPASSED[0m[31m [ 96%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.valve.sdk_2013_x360] [32mPASSED[0m[31m [ 96%][0m
tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.valve.source] [32mPASSED[0m[31m [ 97%][0m
tests/branches/id_software/test_quake.py::TestMethods::test_vertices_of_face[bsp0] [32mPASSED[0m[31m [ 97%][0m
tests/branches/id_software/test_quake.py::TestMethods::test_lightmap_of_face[bsp0] [32mPASSED[0m[31m [ 98%][0m
tests/branches/valve/test_source.py::TestMethods::test_vertices_of_displacement[bsp0] [32mPASSED[0m[31m [ 98%][0m
tests/branches/valve/test_source.py::TestMethods::test_vertices_of_displacement[bsp1] [32mPASSED[0m[31m [ 99%][0m
tests/branches/valve/test_source.py::TestMethods::test_vertices_of_displacement[bsp2] [32mPASSED[0m[31m [ 99%][0m
tests/branches/valve/test_source.py::TestMethods::test_vertices_of_displacement[bsp3] [32mPASSED[0m[31m [100%][0m

================================== FAILURES ===================================
[31m[1m_ test_load_bsp[D:/SteamLibrary/steamapps/common-SourceFilmmaker-map_dirs67] __[0m

group_path = 'D:/SteamLibrary/steamapps/common', game_name = 'SourceFilmmaker'
map_dirs = ['game/tf/maps']

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 7 out of 71 .bsps failed[0m
[1m[31mE         ('ValveBsp', 'bsp_tool.branches.valve.sdk_2013', 21)[0m
[1m[31mE         sprp v10[0m
[1m[31mE       assert {'game/tf/maps/ctf_foundry.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'game/tf/maps/ctf_gorge.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 12')})"), 'game/tf/maps/koth_lakeside_event.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'game/tf/maps/pl_cactuscanyon.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 24')})"), 'game/tf/maps/pl_upward.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'game/tf/maps/rd_asteroid.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'game/tf/maps/sd_doomsday_event.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 28')})")} == {}[0m
[1m[31mE         Left contains 7 more items:[0m
[1m[31mE         {'game/tf/maps/ctf_foundry.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'game/tf/maps/ctf_gorge.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          'game/tf/maps/koth_lakeside_event.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'game/tf/maps/pl_cactuscanyon.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          'game/tf/maps/pl_upward.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'game/tf/maps/rd_asteroid.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'game/tf/maps/sd_doomsday_event.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 28')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  'game/tf/maps/ctf_foundry.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'game/tf/maps/ctf_gorge.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  'game/tf/maps/koth_lakeside_event.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'game/tf/maps/pl_cactuscanyon.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  'game/tf/maps/pl_upward.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'game/tf/maps/rd_asteroid.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'game/tf/maps/sd_doomsday_event.bsp': AssertionError("sprp v10\nassert 1 == 0\n +  where 1 = len({'sprp v10': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m________________ test_load_bsp[E:/Mod-DDayNormandy-map_dirs80] ________________[0m

group_path = 'E:/Mod', game_name = 'DDayNormandy'
map_dirs = ['D-Day_ Normandy/dday/maps', 'DDaynormandymaps-mappack/dday/maps']

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 2 out of 719 .bsps failed[0m
[1m[31mE         ('IdTechBsp', 'bsp_tool.branches.id_software.quake2', 38)[0m
[1m[31mE         ENTITIES[0m
[1m[31mE       assert {'DDaynormandymaps-mappack/dday/maps/mtownbh.bsp': AssertionError('ENTITIES\nassert 1 == 0\n +  where 1 = len({\'ENTITIES\': RuntimeError(\'Unexpected line in entities: L18: b\\\'"nextmap" \\\\\\\'battle2bh"\\\'\')})'), 'DDaynormandymaps-mappack/dday/maps/railyardbhv2.bsp': AssertionError('ENTITIES\nassert 1 == 0\n +  where 1 = len({\'ENTITIES\': RuntimeError("Unexpected line in entities: L0: b\'; worldspawn\'")})')} == {}[0m
[1m[31mE         Left contains 2 more items:[0m
[1m[31mE         {'DDaynormandymaps-mappack/dday/maps/mtownbh.bsp': AssertionError('ENTITIES\nassert 1 == 0\n +  where 1 = len({\'ENTITIES\': RuntimeError(\'Unexpected line in entities: L18: b\\\'"nextmap" \\\\\\\'battle2bh"\\\'\')})'),[0m
[1m[31mE          'DDaynormandymaps-mappack/dday/maps/railyardbhv2.bsp': AssertionError('ENTITIES\nassert 1 == 0\n +  where 1 = len({\'ENTITIES\': RuntimeError("Unexpected line in entities: L0: b\'; worldspawn\'")})')}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  'DDaynormandymaps-mappack/dday/maps/mtownbh.bsp': AssertionError('ENTITIES\nassert 1 == 0\n +  where 1 = len({\'ENTITIES\': RuntimeError(\'Unexpected line in entities: L18: b\\\'"nextmap" \\\\\\\'battle2bh"\\\'\')})'),[0m
[1m[31mE         +  'DDaynormandymaps-mappack/dday/maps/railyardbhv2.bsp': AssertionError('ENTITIES\nassert 1 == 0\n +  where 1 = len({\'ENTITIES\': RuntimeError("Unexpected line in entities: L0: b\'; worldspawn\'")})'),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m_________________ test_load_bsp[E:/Mod-Vindictus-map_dirs119] _________________[0m

group_path = 'E:/Mod', game_name = 'Vindictus', map_dirs = ['maps']

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 300 out of 474 .bsps failed[0m
[1m[31mE         ('ValveBsp', 'bsp_tool.branches.nexon.vindictus', 20)[0m
[1m[31mE         sprp v6[0m
[1m[31mE       assert {'maps/01c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"), 'maps/01e_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/01f_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"), 'maps/01g_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/01j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/01xe.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/01_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/01_boss_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/01_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/01_mboss_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/02c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/02d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"), 'maps/02i.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/02j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/02k.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/02_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/02_mboss_cut.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"), 'maps/03e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/03f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/03j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/03_mboss_alice.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/04b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/04e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/04f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"), 'maps/05e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/05f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/05g.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/05l.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/05_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/06d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/06f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/06h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/06i.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/06j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/06_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/07a_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"), 'maps/07b_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/07c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/07d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/07d_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/07e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"), 'maps/07e_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/07f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/07f_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/07g_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"), 'maps/07h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/07i.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/07i_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/07j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/07j_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/07_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"), 'maps/07_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"), 'maps/08a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/08c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/08e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"), 'maps/08f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"), 'maps/08g.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/08g_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"), 'maps/08h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/08_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/08_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"), 'maps/09a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/09b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/09b_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/09c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/09d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/09_boss_special.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/09_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/10_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/11a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/11c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/11c_special.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/11d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"), 'maps/12a_ds.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/12b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/12b_ds.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/12c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/12c_ds.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/13a_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/13a_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/13b_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/13c_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/13c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/13d_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/13d_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/13f_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/13f_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/13g.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/13g_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/13g_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/13h_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"), 'maps/13_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/13_mboss_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/13_mboss_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/14a_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"), 'maps/14a_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/14b_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/14b_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/14c_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/14c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/14d_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/14d_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/14e_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/14e_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/14f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/14f_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/14f_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/14g.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/14g_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/14_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/14_boss_return.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/14_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/14_mboss_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/15a_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/15b_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"), 'maps/15b_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/15c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"), 'maps/15c_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"), 'maps/15d_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/15d_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/15e_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/15f_new_dusk.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"), 'maps/15g_new_dusk.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/15i_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/15i_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/15j_new_dusk.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/15j_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/15k_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"), 'maps/15k_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"), 'maps/15m.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/15n.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"), 'maps/15_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/16a_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"), 'maps/16a_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/16b_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/16c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"), 'maps/16c_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/16d_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/16d_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/16e_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/16e_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"), 'maps/16f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/16f_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/16f_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/16f_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/16g_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/16g_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/16h_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/16h_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/16i_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"), 'maps/16i_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"), 'maps/16j_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"), 'maps/16j_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"), 'maps/16k_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/16k_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/16l_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/16l_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"), 'maps/16m_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"), 'maps/16m_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/16n_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/16n_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/16o_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/16p.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/16_boss_a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/16_boss_b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"), 'maps/17a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/17b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"), 'maps/17d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/3_02.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"), 'maps/3_03.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"), 'maps/3_04.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"), 'maps/3_05_story.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/3_06.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"), 'maps/3_07.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/3_08.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/3_09.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/3_10.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/3_12.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/3_13.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"), 'maps/3_13_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/3_14.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/3_14_ex.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/3_15.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"), 'maps/3_16.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/3_18.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"), 'maps/3_19.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/3_19_ex.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/3_20a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/3_20b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/3_20c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"), 'maps/3_20d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/3_20e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"), 'maps/3_20f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/3_20g.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/3_20h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/3_20k.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/3_21.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"), 'maps/3_22a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/3_22b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/3_22c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/3_22c_return.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/3_22d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/3_22d_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/3_22f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/3_22h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/3_22h_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/3_23.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/3_25.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/3_25_ending.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/3_25_screenshot.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/3_26a_1.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"), 'maps/3_26b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/3_26c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/3_26d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"), 'maps/3_26e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/3_26f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/3_26g_04.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/3_26h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/3_26i.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/3_26j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/3_26k.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/3_26l.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/3_26l_ds.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/3_26l_ending.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/3_27b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/3_29.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"), 'maps/3_31.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/3_game_start.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/bel_teaser.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/bel_teaser_light.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/create_character.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/event_halloween_a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/event_halloween_b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/event_halloween_dream.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/event_newyear_2014.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"), 'maps/event_newyear_2015.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"), 'maps/event_xmas14_b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/event_xmas_a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/event_xmas_b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/f01_cart_ex.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/f01_start.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/game_create_character.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/game_create_character_arisha.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/game_create_character_hagie.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/game_create_character_lynn.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/game_create_character_vin.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/game_create_character_vin_arisha.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/game_create_character_vin_hagie.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/game_create_character_vin_lynn.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/game_start.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/game_start_neamhain_kalok.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/game_start_vin.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/h01.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/h03.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/h03_cut.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/lobby_event.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/lobby_fishingcraft.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/lobby_fishingcraft_halloween.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/lobby_fishingcraft_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/lobby_fishingcraft_sunset.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/lobby_fishingcraft_winter.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/lobby_multiplayer.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"), 'maps/lobby_multiplayer_berbe.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/lobby_multiplayer_berbe_hall.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/lobby_multiplayer_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/lobby_multiplayer_morvan.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/lobby_multiplayer_morvan_s.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"), 'maps/lobby_multiplayer_rochest.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"), 'maps/lobby_multiplayer_rochest_s.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/lobby_multiplayer_spring.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"), 'maps/minigame.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/minigame_wall.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/nolwenn.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"), 'maps/p03.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/p04.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"), 'maps/p05.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/p06.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/p06_blacklight.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"), 'maps/p06_halloween.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"), 'maps/p07.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/pve_competition.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"), 'maps/s3_00.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"), 'maps/s3_game_start.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"), 'maps/s3_lobby_multiplayer.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/s3_lobby_multiplayer_rochest.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"), 'maps/s3_lobby_multiplayer_rochest_w.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"), 'maps/s3_lobby_multiplayer_winter.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/sc_mini01.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"), 'maps/sc_mini02.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"), 'maps/sc_mini03.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"), 'maps/start_2018_children_089b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/start_2018_foolsday_089b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/start_2018_spring_089b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/start_2018_summer_089b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"), 'maps/start_2020_lethor.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"), 'maps/Storysector_talk.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"), 'maps/t05_school.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"), 'maps/teaser_lethor.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"), 'maps/w_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"), 'maps/w_boss02.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})")} == {}[0m
[1m[31mE         Left contains 300 more items:[0m
[1m[31mE         {'maps/01_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/01_boss_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/01_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/01_mboss_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/01c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE          'maps/01e_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/01f_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE          'maps/01g_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/01j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/01xe.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/02_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/02_mboss_cut.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE          'maps/02c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/02d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"),[0m
[1m[31mE          'maps/02i.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/02j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/02k.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/03_mboss_alice.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/03e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/03f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/03j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/04b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/04e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/04f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE          'maps/05_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/05e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/05f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/05g.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/05l.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/06_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/06d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/06f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/06h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/06i.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/06j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/07_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE          'maps/07_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE          'maps/07a_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE          'maps/07b_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/07c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/07d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/07d_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/07e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE          'maps/07e_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/07f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/07f_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/07g_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE          'maps/07h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/07i.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/07i_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/07j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/07j_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/08_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/08_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE          'maps/08a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/08c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/08e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE          'maps/08f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE          'maps/08g.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/08g_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE          'maps/08h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/09_boss_special.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/09_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/09a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/09b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/09b_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/09c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/09d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/10_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/11a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/11c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/11c_special.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/11d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE          'maps/12a_ds.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/12b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/12b_ds.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/12c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/12c_ds.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/13_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/13_mboss_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/13_mboss_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/13a_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/13a_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/13b_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/13c_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/13c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/13d_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/13d_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/13f_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/13f_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/13g.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/13g_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/13g_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/13h_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE          'maps/14_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/14_boss_return.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/14_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/14_mboss_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/14a_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE          'maps/14a_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/14b_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/14b_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/14c_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/14c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/14d_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/14d_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/14e_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/14e_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/14f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/14f_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/14f_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/14g.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/14g_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/15_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/15a_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/15b_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"),[0m
[1m[31mE          'maps/15b_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/15c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE          'maps/15c_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE          'maps/15d_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/15d_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/15e_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/15f_new_dusk.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE          'maps/15g_new_dusk.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/15i_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/15i_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/15j_new_dusk.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/15j_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/15k_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE          'maps/15k_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE          'maps/15m.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/15n.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE          'maps/16_boss_a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/16_boss_b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"),[0m
[1m[31mE          'maps/16a_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE          'maps/16a_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/16b_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/16c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE          'maps/16c_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/16d_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/16d_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/16e_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/16e_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE          'maps/16f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/16f_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/16f_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/16f_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/16g_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/16g_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/16h_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/16h_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/16i_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE          'maps/16i_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE          'maps/16j_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE          'maps/16j_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE          'maps/16k_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/16k_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/16l_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/16l_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"),[0m
[1m[31mE          'maps/16m_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE          'maps/16m_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/16n_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/16n_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/16o_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/16p.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/17a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/17b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE          'maps/17d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/3_02.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE          'maps/3_03.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE          'maps/3_04.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE          'maps/3_05_story.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/3_06.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE          'maps/3_07.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/3_08.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/3_09.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/3_10.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/3_12.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/3_13.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE          'maps/3_13_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/3_14.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/3_14_ex.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/3_15.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE          'maps/3_16.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/3_18.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE          'maps/3_19.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/3_19_ex.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/3_20a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/3_20b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/3_20c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE          'maps/3_20d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/3_20e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE          'maps/3_20f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/3_20g.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/3_20h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/3_20k.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/3_21.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE          'maps/3_22a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/3_22b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/3_22c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/3_22c_return.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/3_22d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/3_22d_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/3_22f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/3_22h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/3_22h_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/3_23.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/3_25.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/3_25_ending.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/3_25_screenshot.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/3_26a_1.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE          'maps/3_26b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/3_26c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/3_26d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"),[0m
[1m[31mE          'maps/3_26e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/3_26f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/3_26g_04.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/3_26h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/3_26i.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/3_26j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/3_26k.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/3_26l.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/3_26l_ds.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/3_26l_ending.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/3_27b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/3_29.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE          'maps/3_31.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/3_game_start.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/Storysector_talk.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/bel_teaser.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/bel_teaser_light.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/create_character.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/event_halloween_a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/event_halloween_b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/event_halloween_dream.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/event_newyear_2014.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE          'maps/event_newyear_2015.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE          'maps/event_xmas14_b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/event_xmas_a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/event_xmas_b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/f01_cart_ex.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/f01_start.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/game_create_character.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/game_create_character_arisha.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/game_create_character_hagie.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/game_create_character_lynn.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/game_create_character_vin.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/game_create_character_vin_arisha.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/game_create_character_vin_hagie.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/game_create_character_vin_lynn.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/game_start.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/game_start_neamhain_kalok.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/game_start_vin.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/h01.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/h03.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/h03_cut.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/lobby_event.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/lobby_fishingcraft.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/lobby_fishingcraft_halloween.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/lobby_fishingcraft_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/lobby_fishingcraft_sunset.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/lobby_fishingcraft_winter.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/lobby_multiplayer.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE          'maps/lobby_multiplayer_berbe.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/lobby_multiplayer_berbe_hall.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/lobby_multiplayer_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/lobby_multiplayer_morvan.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/lobby_multiplayer_morvan_s.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE          'maps/lobby_multiplayer_rochest.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE          'maps/lobby_multiplayer_rochest_s.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/lobby_multiplayer_spring.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE          'maps/minigame.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/minigame_wall.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/nolwenn.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE          'maps/p03.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/p04.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE          'maps/p05.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/p06.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/p06_blacklight.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE          'maps/p06_halloween.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE          'maps/p07.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/pve_competition.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE          'maps/s3_00.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"),[0m
[1m[31mE          'maps/s3_game_start.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE          'maps/s3_lobby_multiplayer.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/s3_lobby_multiplayer_rochest.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE          'maps/s3_lobby_multiplayer_rochest_w.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE          'maps/s3_lobby_multiplayer_winter.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/sc_mini01.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE          'maps/sc_mini02.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE          'maps/sc_mini03.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"),[0m
[1m[31mE          'maps/start_2018_children_089b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/start_2018_foolsday_089b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/start_2018_spring_089b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE          'maps/start_2018_summer_089b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE          'maps/start_2020_lethor.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE          'maps/t05_school.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"),[0m
[1m[31mE          'maps/teaser_lethor.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE          'maps/w_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE          'maps/w_boss02.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  'maps/01_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/01_boss_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/01_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/01_mboss_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/01c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE         +  'maps/01e_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/01f_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE         +  'maps/01g_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/01j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/01xe.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/02_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/02_mboss_cut.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE         +  'maps/02c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/02d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"),[0m
[1m[31mE         +  'maps/02i.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/02j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/02k.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/03_mboss_alice.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/03e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/03f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/03j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/04b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/04e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/04f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE         +  'maps/05_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/05e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/05f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/05g.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/05l.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/06_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/06d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/06f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/06h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/06i.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/06j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/07_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE         +  'maps/07_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE         +  'maps/07a_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE         +  'maps/07b_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/07c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/07d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/07d_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/07e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE         +  'maps/07e_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/07f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/07f_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/07g_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE         +  'maps/07h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/07i.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/07i_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/07j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/07j_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/08_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/08_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE         +  'maps/08a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/08c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/08e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE         +  'maps/08f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE         +  'maps/08g.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/08g_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE         +  'maps/08h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/09_boss_special.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/09_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/09a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/09b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/09b_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/09c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/09d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/10_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/11a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/11c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/11c_special.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/11d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE         +  'maps/12a_ds.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/12b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/12b_ds.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/12c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/12c_ds.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/13_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/13_mboss_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/13_mboss_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/13a_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/13a_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/13b_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/13c_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/13c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/13d_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/13d_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/13f_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/13f_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/13g.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/13g_farming.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/13g_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/13h_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE         +  'maps/14_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/14_boss_return.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/14_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/14_mboss_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/14a_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE         +  'maps/14a_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/14b_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/14b_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/14c_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/14c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/14d_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/14d_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/14e_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/14e_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/14f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/14f_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/14f_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/14g.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/14g_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/15_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/15a_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/15b_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"),[0m
[1m[31mE         +  'maps/15b_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/15c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE         +  'maps/15c_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE         +  'maps/15d_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/15d_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/15e_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/15f_new_dusk.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE         +  'maps/15g_new_dusk.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/15i_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/15i_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/15j_new_dusk.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/15j_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/15k_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE         +  'maps/15k_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE         +  'maps/15m.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/15n.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE         +  'maps/16_boss_a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/16_boss_b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"),[0m
[1m[31mE         +  'maps/16a_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE         +  'maps/16a_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/16b_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/16c_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE         +  'maps/16c_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/16d_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/16d_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/16e_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/16e_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE         +  'maps/16f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/16f_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/16f_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/16f_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/16g_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/16g_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/16h_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/16h_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/16i_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE         +  'maps/16i_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE         +  'maps/16j_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE         +  'maps/16j_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE         +  'maps/16k_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/16k_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/16l_new_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/16l_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"),[0m
[1m[31mE         +  'maps/16m_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE         +  'maps/16m_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/16n_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/16n_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/16o_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/16p.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/17a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/17b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE         +  'maps/17d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/3_02.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE         +  'maps/3_03.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE         +  'maps/3_04.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE         +  'maps/3_05_story.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/3_06.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE         +  'maps/3_07.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/3_08.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/3_09.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/3_10.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/3_12.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/3_13.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE         +  'maps/3_13_new.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/3_14.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/3_14_ex.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/3_15.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE         +  'maps/3_16.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/3_18.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE         +  'maps/3_19.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/3_19_ex.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/3_20a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/3_20b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/3_20c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE         +  'maps/3_20d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/3_20e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE         +  'maps/3_20f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/3_20g.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/3_20h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/3_20k.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/3_21.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE         +  'maps/3_22a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/3_22b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/3_22c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/3_22c_return.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/3_22d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/3_22d_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/3_22f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/3_22h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/3_22h_mboss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/3_23.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/3_25.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/3_25_ending.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/3_25_screenshot.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/3_26a_1.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE         +  'maps/3_26b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/3_26c.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/3_26d.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"),[0m
[1m[31mE         +  'maps/3_26e.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/3_26f.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/3_26g_04.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/3_26h.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/3_26i.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/3_26j.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/3_26k.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/3_26l.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/3_26l_ds.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/3_26l_ending.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/3_27b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/3_29.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE         +  'maps/3_31.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/3_game_start.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/Storysector_talk.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/bel_teaser.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/bel_teaser_light.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/create_character.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/event_halloween_a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/event_halloween_b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/event_halloween_dream.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/event_newyear_2014.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE         +  'maps/event_newyear_2015.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE         +  'maps/event_xmas14_b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/event_xmas_a.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/event_xmas_b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/f01_cart_ex.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/f01_start.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/game_create_character.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/game_create_character_arisha.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/game_create_character_hagie.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/game_create_character_lynn.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/game_create_character_vin.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/game_create_character_vin_arisha.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/game_create_character_vin_hagie.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/game_create_character_vin_lynn.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/game_start.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/game_start_neamhain_kalok.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/game_start_vin.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/h01.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/h03.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/h03_cut.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/lobby_event.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/lobby_fishingcraft.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/lobby_fishingcraft_halloween.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/lobby_fishingcraft_night.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/lobby_fishingcraft_sunset.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/lobby_fishingcraft_winter.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/lobby_multiplayer.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE         +  'maps/lobby_multiplayer_berbe.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/lobby_multiplayer_berbe_hall.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/lobby_multiplayer_guild.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/lobby_multiplayer_morvan.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/lobby_multiplayer_morvan_s.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 48')})"),[0m
[1m[31mE         +  'maps/lobby_multiplayer_rochest.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE         +  'maps/lobby_multiplayer_rochest_s.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/lobby_multiplayer_spring.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE         +  'maps/minigame.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/minigame_wall.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/nolwenn.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 36')})"),[0m
[1m[31mE         +  'maps/p03.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/p04.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE         +  'maps/p05.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/p06.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/p06_blacklight.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 20')})"),[0m
[1m[31mE         +  'maps/p06_halloween.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 0')})"),[0m
[1m[31mE         +  'maps/p07.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/pve_competition.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 56')})"),[0m
[1m[31mE         +  'maps/s3_00.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"),[0m
[1m[31mE         +  'maps/s3_game_start.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 40')})"),[0m
[1m[31mE         +  'maps/s3_lobby_multiplayer.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/s3_lobby_multiplayer_rochest.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE         +  'maps/s3_lobby_multiplayer_rochest_w.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 4')})"),[0m
[1m[31mE         +  'maps/s3_lobby_multiplayer_winter.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/sc_mini01.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 44')})"),[0m
[1m[31mE         +  'maps/sc_mini02.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 32')})"),[0m
[1m[31mE         +  'maps/sc_mini03.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"),[0m
[1m[31mE         +  'maps/start_2018_children_089b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/start_2018_foolsday_089b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/start_2018_spring_089b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 60')})"),[0m
[1m[31mE         +  'maps/start_2018_summer_089b.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 28')})"),[0m
[1m[31mE         +  'maps/start_2020_lethor.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 16')})"),[0m
[1m[31mE         +  'maps/t05_school.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 52')})"),[0m
[1m[31mE         +  'maps/teaser_lethor.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 12')})"),[0m
[1m[31mE         +  'maps/w_boss.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 24')})"),[0m
[1m[31mE         +  'maps/w_boss02.bsp': AssertionError("sprp v6\nassert 1 == 0\n +  where 1 = len({'sprp v6': AssertionError('Not enough bytes! Expected 64 got 8')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m________________ test_load_bsp[E:/Mod-Titanfall2-map_dirs123] _________________[0m

group_path = 'E:/Mod', game_name = 'Titanfall2'
map_dirs = ['maps', 'depot/r2dlc3/game/r2/maps', 'depot/r2dlc4/game/r2/maps', 'depot/r2dlc5/game/r2/maps', 'depot/r2dlc6/game/r2/maps', 'depot/r2dlc7/game/r2/maps', ...]

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 99 out of 102 .bsps failed[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.titanfall2', 37)[0m
[1m[31mE         external.GAME_LUMP.sprp v13[0m
[1m[31mE         sprp v13[0m
[1m[31mE       assert {'maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"), 'maps/mp_colony02.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'maps/mp_crashsite3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 4'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 4')})"), 'maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'maps/mp_eden.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})"), 'maps/mp_forwardbase_kodai.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"), 'maps/mp_glitch.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"), 'maps/mp_grave.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"), 'maps/mp_homestead.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"), 'maps/mp_lf_deck.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})"), 'maps/mp_lf_meadow.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'maps/mp_lf_stacks.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"), 'maps/mp_lf_township.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'maps/mp_lf_traffic.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'maps/mp_lf_uma.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"), 'maps/mp_relic02.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'maps/mp_rise.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 0')})"), 'maps/mp_thaw.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'maps/mp_wargames.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'maps/sp_beacon.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"), 'maps/sp_beacon_spoke0.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"), 'maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'maps/sp_boomtown_start.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"), 'maps/sp_crashsite.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 40'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 40')})"), 'maps/sp_hub_timeshift.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"), 'maps/sp_sewers1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 20')})"), 'maps/sp_skyway_v1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'maps/sp_tday.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"), 'maps/sp_timeshift_spoke02.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})"), 'maps/sp_training.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})"), 'depot/r2dlc3/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc3/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'depot/r2dlc3/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'depot/r2dlc3/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"), 'depot/r2dlc3/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'depot/r2dlc3/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'depot/r2dlc4/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc4/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'depot/r2dlc4/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'depot/r2dlc4/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"), 'depot/r2dlc4/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'depot/r2dlc4/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'depot/r2dlc5/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc5/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'depot/r2dlc5/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'depot/r2dlc5/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"), 'depot/r2dlc5/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'depot/r2dlc5/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'depot/r2dlc6/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc6/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'depot/r2dlc6/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'depot/r2dlc6/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"), 'depot/r2dlc6/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'depot/r2dlc6/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'depot/r2dlc7/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc7/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'depot/r2dlc7/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'depot/r2dlc7/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"), 'depot/r2dlc7/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'depot/r2dlc7/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'depot/r2dlc8/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc8/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'depot/r2dlc8/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'depot/r2dlc8/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"), 'depot/r2dlc8/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'depot/r2dlc8/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'depot/r2dlc9/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc9/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'depot/r2dlc9/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'depot/r2dlc9/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"), 'depot/r2dlc9/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'depot/r2dlc9/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'depot/r2dlc10/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc10/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'depot/r2dlc10/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'depot/r2dlc10/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"), 'depot/r2dlc10/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'depot/r2dlc10/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'depot/r2dlc11/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc11/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'depot/r2dlc11/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'depot/r2dlc11/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"), 'depot/r2dlc11/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'depot/r2dlc11/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'depot/r2pcprecert/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"), 'depot/r2pcprecert/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'depot/r2pcprecert/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'depot/r2pcprecert/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'depot/r2pcprecert/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'depot/r2staging/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 0')})"), 'depot/r2staging/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'depot/r2staging/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'depot/r2staging/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"), 'depot/r2staging/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'depot/r2staging/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})")} == {}[0m
[1m[31mE         Left contains 99 more items:[0m
[1m[31mE         {'depot/r2dlc10/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc10/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'depot/r2dlc10/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'depot/r2dlc10/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          'depot/r2dlc10/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'depot/r2dlc10/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'depot/r2dlc11/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc11/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'depot/r2dlc11/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'depot/r2dlc11/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          'depot/r2dlc11/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'depot/r2dlc11/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'depot/r2dlc3/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc3/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'depot/r2dlc3/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'depot/r2dlc3/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          'depot/r2dlc3/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'depot/r2dlc3/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'depot/r2dlc4/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc4/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'depot/r2dlc4/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'depot/r2dlc4/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          'depot/r2dlc4/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'depot/r2dlc4/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'depot/r2dlc5/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc5/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'depot/r2dlc5/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'depot/r2dlc5/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          'depot/r2dlc5/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'depot/r2dlc5/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'depot/r2dlc6/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc6/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'depot/r2dlc6/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'depot/r2dlc6/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          'depot/r2dlc6/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'depot/r2dlc6/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'depot/r2dlc7/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc7/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'depot/r2dlc7/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'depot/r2dlc7/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          'depot/r2dlc7/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'depot/r2dlc7/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'depot/r2dlc8/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc8/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'depot/r2dlc8/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'depot/r2dlc8/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          'depot/r2dlc8/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'depot/r2dlc8/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'depot/r2dlc9/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc9/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'depot/r2dlc9/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'depot/r2dlc9/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          'depot/r2dlc9/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'depot/r2dlc9/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'depot/r2pcprecert/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          'depot/r2pcprecert/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'depot/r2pcprecert/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'depot/r2pcprecert/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'depot/r2pcprecert/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'depot/r2staging/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          'depot/r2staging/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'depot/r2staging/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'depot/r2staging/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          'depot/r2staging/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'depot/r2staging/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          'maps/mp_colony02.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'maps/mp_crashsite3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 4'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 4')})"),[0m
[1m[31mE          'maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'maps/mp_eden.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE          'maps/mp_forwardbase_kodai.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          'maps/mp_glitch.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          'maps/mp_grave.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          'maps/mp_homestead.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          'maps/mp_lf_deck.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          'maps/mp_lf_meadow.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'maps/mp_lf_stacks.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          'maps/mp_lf_township.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'maps/mp_lf_traffic.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'maps/mp_lf_uma.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          'maps/mp_relic02.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'maps/mp_rise.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          'maps/mp_thaw.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'maps/mp_wargames.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'maps/sp_beacon.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          'maps/sp_beacon_spoke0.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          'maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'maps/sp_boomtown_start.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          'maps/sp_crashsite.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 40'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          'maps/sp_hub_timeshift.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          'maps/sp_sewers1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE          'maps/sp_skyway_v1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'maps/sp_tday.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          'maps/sp_timeshift_spoke02.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          'maps/sp_training.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  'depot/r2dlc10/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc10/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'depot/r2dlc10/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'depot/r2dlc10/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  'depot/r2dlc10/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'depot/r2dlc10/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'depot/r2dlc11/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc11/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'depot/r2dlc11/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'depot/r2dlc11/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  'depot/r2dlc11/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'depot/r2dlc11/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'depot/r2dlc3/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc3/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'depot/r2dlc3/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'depot/r2dlc3/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  'depot/r2dlc3/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'depot/r2dlc3/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'depot/r2dlc4/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc4/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'depot/r2dlc4/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'depot/r2dlc4/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  'depot/r2dlc4/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'depot/r2dlc4/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'depot/r2dlc5/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc5/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'depot/r2dlc5/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'depot/r2dlc5/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  'depot/r2dlc5/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'depot/r2dlc5/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'depot/r2dlc6/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc6/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'depot/r2dlc6/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'depot/r2dlc6/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  'depot/r2dlc6/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'depot/r2dlc6/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'depot/r2dlc7/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc7/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'depot/r2dlc7/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'depot/r2dlc7/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  'depot/r2dlc7/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'depot/r2dlc7/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'depot/r2dlc8/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc8/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'depot/r2dlc8/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'depot/r2dlc8/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  'depot/r2dlc8/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'depot/r2dlc8/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'depot/r2dlc9/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc9/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'depot/r2dlc9/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'depot/r2dlc9/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  'depot/r2dlc9/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'depot/r2dlc9/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'depot/r2pcprecert/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  'depot/r2pcprecert/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'depot/r2pcprecert/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'depot/r2pcprecert/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'depot/r2pcprecert/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'depot/r2staging/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  'depot/r2staging/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'depot/r2staging/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'depot/r2staging/game/r2/maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  'depot/r2staging/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'depot/r2staging/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'maps/mp_coliseum_column.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  'maps/mp_colony02.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'maps/mp_crashsite3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 4'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 4')})"),[0m
[1m[31mE         +  'maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'maps/mp_eden.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE         +  'maps/mp_forwardbase_kodai.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  'maps/mp_glitch.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  'maps/mp_grave.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  'maps/mp_homestead.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  'maps/mp_lf_deck.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  'maps/mp_lf_meadow.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'maps/mp_lf_stacks.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  'maps/mp_lf_township.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'maps/mp_lf_traffic.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'maps/mp_lf_uma.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  'maps/mp_relic02.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'maps/mp_rise.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  'maps/mp_thaw.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'maps/mp_wargames.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'maps/sp_beacon.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  'maps/sp_beacon_spoke0.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  'maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'maps/sp_boomtown_start.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  'maps/sp_crashsite.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 40'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  'maps/sp_hub_timeshift.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  'maps/sp_sewers1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE         +  'maps/sp_skyway_v1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'maps/sp_tday.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  'maps/sp_timeshift_spoke02.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  'maps/sp_training.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m________________ test_load_bsp[E:/Mod-ApexLegends-map_dirs124] ________________[0m

group_path = 'E:/Mod', game_name = 'ApexLegends'
map_dirs = ['maps', 'season2/maps', 'season4/depot/r5launch/game/r2/maps', 'season4/depot/r5staging/game/r2/maps', 'season4/maps', 'season5/maps', ...]

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 40 out of 40 .bsps failed[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', 47)[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', 48)[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', 49)[0m
[1m[31mE         external.GAME_LUMP.sprp v49[0m
[1m[31mE         sprp v49[0m
[1m[31mE         external.GAME_LUMP.sprp v48[0m
[1m[31mE         external.GAME_LUMP.sprp v47[0m
[1m[31mE         sprp v48[0m
[1m[31mE         sprp v47[0m
[1m[31mE       assert {'maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 64')})"), 'maps/mp_rr_canyonlands_mu2.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'maps/mp_rr_canyonlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 52')})"), 'maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 60')})"), 'maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"), 'maps/mp_rr_desertlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 16'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 16')})"), 'maps/mp_rr_desertlands_mu2.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'maps/mp_rr_olympus.bsp': AssertionError("sprp v48, external.GAME_LUMP.sprp v48\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v48': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v48': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'maps/mp_rr_olympus_mu1.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 60')})"), 'season2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 40'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 40')})"), 'season4/depot/r5launch/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 4'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 4')})"), 'season4/depot/r5launch/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'season4/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"), 'season4/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"), 'season4/depot/r5launch/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"), 'season4/depot/r5launch/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"), 'season4/depot/r5launch/game/r2/maps/mp_rr_desertlands_holiday.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'season4/depot/r5launch/game/r2/maps/mp_rr_desertlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 12')})"), 'season4/depot/r5staging/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'season4/depot/r5staging/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"), 'season4/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"), 'season4/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'season4/depot/r5staging/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"), 'season4/depot/r5staging/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'season4/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 4'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 4')})"), 'season4/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'season4/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"), 'season4/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"), 'season4/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"), 'season4/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"), 'season4/maps/mp_rr_desertlands_holiday.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'season4/maps/mp_rr_desertlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 12')})"), 'season5/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'season5/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 32')})"), 'season5/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 60')})"), 'season8/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 64')})"), 'season9/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'season9/maps/mp_rr_aqueduct.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), 'season9/maps/mp_rr_arena_phase_runner.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 40'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 40')})"), 'season9/maps/mp_rr_party_crasher.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})")} == {}[0m
[1m[31mE         Left contains 40 more items:[0m
[1m[31mE         {'maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          'maps/mp_rr_canyonlands_mu2.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'maps/mp_rr_canyonlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          'maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          'maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          'maps/mp_rr_desertlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 16'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE          'maps/mp_rr_desertlands_mu2.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'maps/mp_rr_olympus.bsp': AssertionError("sprp v48, external.GAME_LUMP.sprp v48\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v48': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v48': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'maps/mp_rr_olympus_mu1.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          'season2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 40'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          'season4/depot/r5launch/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 4'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 4')})"),[0m
[1m[31mE          'season4/depot/r5launch/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'season4/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE          'season4/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          'season4/depot/r5launch/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          'season4/depot/r5launch/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          'season4/depot/r5launch/game/r2/maps/mp_rr_desertlands_holiday.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'season4/depot/r5launch/game/r2/maps/mp_rr_desertlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          'season4/depot/r5staging/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'season4/depot/r5staging/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          'season4/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          'season4/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'season4/depot/r5staging/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          'season4/depot/r5staging/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'season4/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 4'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 4')})"),[0m
[1m[31mE          'season4/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'season4/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE          'season4/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          'season4/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          'season4/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          'season4/maps/mp_rr_desertlands_holiday.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'season4/maps/mp_rr_desertlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          'season5/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'season5/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE          'season5/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          'season8/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          'season9/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'season9/maps/mp_rr_aqueduct.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          'season9/maps/mp_rr_arena_phase_runner.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 40'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          'season9/maps/mp_rr_party_crasher.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  'maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  'maps/mp_rr_canyonlands_mu2.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'maps/mp_rr_canyonlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  'maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  'maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  'maps/mp_rr_desertlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 16'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE         +  'maps/mp_rr_desertlands_mu2.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'maps/mp_rr_olympus.bsp': AssertionError("sprp v48, external.GAME_LUMP.sprp v48\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v48': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v48': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'maps/mp_rr_olympus_mu1.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  'season2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 40'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  'season4/depot/r5launch/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 4'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 4')})"),[0m
[1m[31mE         +  'season4/depot/r5launch/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'season4/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE         +  'season4/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  'season4/depot/r5launch/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  'season4/depot/r5launch/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  'season4/depot/r5launch/game/r2/maps/mp_rr_desertlands_holiday.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'season4/depot/r5launch/game/r2/maps/mp_rr_desertlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  'season4/depot/r5staging/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'season4/depot/r5staging/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  'season4/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  'season4/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'season4/depot/r5staging/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  'season4/depot/r5staging/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'season4/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 4'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 4')})"),[0m
[1m[31mE         +  'season4/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'season4/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE         +  'season4/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  'season4/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  'season4/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  'season4/maps/mp_rr_desertlands_holiday.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'season4/maps/mp_rr_desertlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  'season5/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'season5/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE         +  'season5/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  'season8/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  'season9/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'season9/maps/mp_rr_aqueduct.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  'season9/maps/mp_rr_arena_phase_runner.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 40'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  'season9/maps/mp_rr_party_crasher.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m____________ test_load_bsp[E:/Mod-ApexLegends/season3-map_dirs125] ____________[0m

group_path = 'E:/Mod', game_name = 'ApexLegends/season3'
map_dirs = ['30oct19/maps', '30oct19/depot/r5launch/game/r2/maps', '30oct19/depot/r5staging/game/r2/maps', '3dec19/maps', '3dec19/depot/r5launch/game/r2/maps', '3dec19/depot/r5staging/game/r2/maps']

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 40 out of 40 .bsps failed[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', 47)[0m
[1m[31mE         sprp v47[0m
[1m[31mE         external.GAME_LUMP.sprp v47[0m
[1m[31mE       assert {'30oct19/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"), '30oct19/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"), '30oct19/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"), '30oct19/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 48')})"), '30oct19/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"), '30oct19/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"), '30oct19/depot/r5launch/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"), '30oct19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"), '30oct19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"), '30oct19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 48')})"), '30oct19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"), '30oct19/depot/r5launch/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"), '30oct19/depot/r5staging/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"), '30oct19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"), '30oct19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"), '30oct19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 48')})"), '30oct19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"), '30oct19/depot/r5staging/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"), '3dec19/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"), '3dec19/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"), '3dec19/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"), '3dec19/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"), '3dec19/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"), '3dec19/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 52')})"), '3dec19/maps/mp_rr_desertlands_64k_x_64k_tt.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"), '3dec19/maps/mp_rr_desertlands_holiday.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"), '3dec19/depot/r5launch/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"), '3dec19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"), '3dec19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"), '3dec19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"), '3dec19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"), '3dec19/depot/r5launch/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 52')})"), '3dec19/depot/r5launch/game/r2/maps/mp_rr_desertlands_64k_x_64k_tt.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"), '3dec19/depot/r5launch/game/r2/maps/mp_rr_desertlands_holiday.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"), '3dec19/depot/r5staging/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"), '3dec19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"), '3dec19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"), '3dec19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 48')})"), '3dec19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"), '3dec19/depot/r5staging/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})")} == {}[0m
[1m[31mE         Left contains 40 more items:[0m
[1m[31mE         {'30oct19/depot/r5launch/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          '30oct19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '30oct19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '30oct19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '30oct19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '30oct19/depot/r5launch/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '30oct19/depot/r5staging/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          '30oct19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '30oct19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '30oct19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '30oct19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '30oct19/depot/r5staging/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          '30oct19/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          '30oct19/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '30oct19/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '30oct19/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '30oct19/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '30oct19/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '3dec19/depot/r5launch/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE          '3dec19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '3dec19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE          '3dec19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          '3dec19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '3dec19/depot/r5launch/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '3dec19/depot/r5launch/game/r2/maps/mp_rr_desertlands_64k_x_64k_tt.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '3dec19/depot/r5launch/game/r2/maps/mp_rr_desertlands_holiday.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          '3dec19/depot/r5staging/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          '3dec19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '3dec19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '3dec19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '3dec19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '3dec19/depot/r5staging/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          '3dec19/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE          '3dec19/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '3dec19/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE          '3dec19/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          '3dec19/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '3dec19/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '3dec19/maps/mp_rr_desertlands_64k_x_64k_tt.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '3dec19/maps/mp_rr_desertlands_holiday.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  '30oct19/depot/r5launch/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  '30oct19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '30oct19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '30oct19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '30oct19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '30oct19/depot/r5launch/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '30oct19/depot/r5staging/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  '30oct19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '30oct19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '30oct19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '30oct19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '30oct19/depot/r5staging/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  '30oct19/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  '30oct19/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '30oct19/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '30oct19/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '30oct19/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '30oct19/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '3dec19/depot/r5launch/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE         +  '3dec19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '3dec19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE         +  '3dec19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  '3dec19/depot/r5launch/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '3dec19/depot/r5launch/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '3dec19/depot/r5launch/game/r2/maps/mp_rr_desertlands_64k_x_64k_tt.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '3dec19/depot/r5launch/game/r2/maps/mp_rr_desertlands_holiday.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  '3dec19/depot/r5staging/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  '3dec19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '3dec19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '3dec19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '3dec19/depot/r5staging/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '3dec19/depot/r5staging/game/r2/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  '3dec19/maps/mp_lobby.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE         +  '3dec19/maps/mp_rr_canyonlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '3dec19/maps/mp_rr_canyonlands_mu1.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE         +  '3dec19/maps/mp_rr_canyonlands_mu1_night.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  '3dec19/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '3dec19/maps/mp_rr_desertlands_64k_x_64k.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '3dec19/maps/mp_rr_desertlands_64k_x_64k_tt.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '3dec19/maps/mp_rr_desertlands_holiday.bsp': AssertionError("sprp v47, external.GAME_LUMP.sprp v47\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v47': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v47': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m___________ test_load_bsp[E:/Mod-ApexLegends/season10-map_dirs126] ____________[0m

group_path = 'E:/Mod', game_name = 'ApexLegends/season10'
map_dirs = ['3aug21/maps', '10aug21/maps', '10aug21/depot/r5-100/game/r2/maps', '14sep21/maps', '14sep21/depot/r5-100/game/r2/maps', '14sep21/depot/r5-101/game/r2/maps']

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 23 out of 23 .bsps failed[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', 49)[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', 50)[0m
[1m[31mE         sprp v50[0m
[1m[31mE         external.GAME_LUMP.sprp v49[0m
[1m[31mE         sprp v49[0m
[1m[31mE         external.GAME_LUMP.sprp v50[0m
[1m[31mE       assert {'3aug21/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"), '3aug21/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"), '10aug21/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"), '10aug21/maps/mp_rr_aqueduct.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), '10aug21/maps/mp_rr_arena_phase_runner.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 48')})"), '10aug21/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 52')})"), '10aug21/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 16'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 16')})"), '10aug21/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"), '10aug21/maps/mp_rr_olympus_mu1.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 56')})"), '10aug21/maps/mp_rr_party_crasher.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"), '10aug21/depot/r5-100/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"), '10aug21/depot/r5-100/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), '10aug21/depot/r5-100/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 48')})"), '10aug21/depot/r5-100/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 52')})"), '10aug21/depot/r5-100/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 16'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 16')})"), '10aug21/depot/r5-100/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"), '10aug21/depot/r5-100/game/r2/maps/mp_rr_olympus_mu1.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 56')})"), '10aug21/depot/r5-100/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"), '14sep21/maps/mp_rr_arena_skygarden.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '14sep21/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"), '14sep21/depot/r5-100/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"), '14sep21/depot/r5-101/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '14sep21/depot/r5-101/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})")} == {}[0m
[1m[31mE         Left contains 23 more items:[0m
[1m[31mE         {'10aug21/depot/r5-100/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '10aug21/depot/r5-100/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '10aug21/depot/r5-100/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '10aug21/depot/r5-100/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '10aug21/depot/r5-100/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 16'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE          '10aug21/depot/r5-100/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '10aug21/depot/r5-100/game/r2/maps/mp_rr_olympus_mu1.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          '10aug21/depot/r5-100/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '10aug21/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '10aug21/maps/mp_rr_aqueduct.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '10aug21/maps/mp_rr_arena_phase_runner.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '10aug21/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '10aug21/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 16'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE          '10aug21/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '10aug21/maps/mp_rr_olympus_mu1.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          '10aug21/maps/mp_rr_party_crasher.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '14sep21/depot/r5-100/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '14sep21/depot/r5-101/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '14sep21/depot/r5-101/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          '14sep21/maps/mp_rr_arena_skygarden.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '14sep21/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          '3aug21/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '3aug21/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  '10aug21/depot/r5-100/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '10aug21/depot/r5-100/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '10aug21/depot/r5-100/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '10aug21/depot/r5-100/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '10aug21/depot/r5-100/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 16'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE         +  '10aug21/depot/r5-100/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '10aug21/depot/r5-100/game/r2/maps/mp_rr_olympus_mu1.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  '10aug21/depot/r5-100/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '10aug21/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '10aug21/maps/mp_rr_aqueduct.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '10aug21/maps/mp_rr_arena_phase_runner.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '10aug21/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '10aug21/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 16'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE         +  '10aug21/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '10aug21/maps/mp_rr_olympus_mu1.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  '10aug21/maps/mp_rr_party_crasher.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '14sep21/depot/r5-100/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '14sep21/depot/r5-101/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '14sep21/depot/r5-101/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  '14sep21/maps/mp_rr_arena_skygarden.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '14sep21/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  '3aug21/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '3aug21/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m___________ test_load_bsp[E:/Mod-ApexLegends/season11-map_dirs127] ____________[0m

group_path = 'E:/Mod', game_name = 'ApexLegends/season11'
map_dirs = ['2nov21/maps', '2nov21/depot/r5-110/game/r2/maps', '6nov21/maps', '6nov21/depot/r5-110/game/r2/maps', '19nov21/maps', '19nov21/depot/r5-110/game/r2/maps', ...]

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 32 out of 32 .bsps failed[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', 49)[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', (49, 1))[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', (50, 1))[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', 50)[0m
[1m[31mE         sprp v50[0m
[1m[31mE         external.GAME_LUMP.sprp v50[0m
[1m[31mE         sprp v49[0m
[1m[31mE         external.GAME_LUMP.sprp v49[0m
[1m[31mE       assert {'2nov21/maps/mp_lobby.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"), '2nov21/depot/r5-110/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"), '6nov21/maps/mp_rr_tropic_island.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '6nov21/depot/r5-110/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '19nov21/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"), '19nov21/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), '19nov21/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"), '19nov21/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 48')})"), '19nov21/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '19nov21/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"), '19nov21/maps/mp_rr_desertlands_holiday.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"), '19nov21/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '19nov21/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"), '19nov21/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 48')})"), '19nov21/depot/r5-110/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"), '19nov21/depot/r5-110/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), '19nov21/depot/r5-110/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 48')})"), '19nov21/depot/r5-110/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '19nov21/depot/r5-110/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"), '19nov21/depot/r5-110/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '19nov21/depot/r5-110/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"), '19nov21/depot/r5-110/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '19nov21/depot/r5-111/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"), '19nov21/depot/r5-111/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), '19nov21/depot/r5-111/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"), '19nov21/depot/r5-111/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 48')})"), '19nov21/depot/r5-111/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '19nov21/depot/r5-111/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"), '19nov21/depot/r5-111/game/r2/maps/mp_rr_desertlands_holiday.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"), '19nov21/depot/r5-111/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '19nov21/depot/r5-111/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"), '19nov21/depot/r5-111/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 48')})")} == {}[0m
[1m[31mE         Left contains 32 more items:[0m
[1m[31mE         {'19nov21/depot/r5-110/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          '19nov21/depot/r5-110/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '19nov21/depot/r5-110/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '19nov21/depot/r5-110/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '19nov21/depot/r5-110/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE          '19nov21/depot/r5-110/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '19nov21/depot/r5-110/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '19nov21/depot/r5-110/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '19nov21/depot/r5-111/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          '19nov21/depot/r5-111/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '19nov21/depot/r5-111/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          '19nov21/depot/r5-111/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '19nov21/depot/r5-111/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '19nov21/depot/r5-111/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE          '19nov21/depot/r5-111/game/r2/maps/mp_rr_desertlands_holiday.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          '19nov21/depot/r5-111/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '19nov21/depot/r5-111/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '19nov21/depot/r5-111/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '19nov21/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          '19nov21/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '19nov21/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          '19nov21/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '19nov21/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '19nov21/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE          '19nov21/maps/mp_rr_desertlands_holiday.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          '19nov21/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '19nov21/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '19nov21/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '2nov21/depot/r5-110/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          '2nov21/maps/mp_lobby.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          '6nov21/depot/r5-110/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '6nov21/maps/mp_rr_tropic_island.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  '19nov21/depot/r5-110/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-110/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-110/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-110/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-110/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-110/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-110/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-110/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-111/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-111/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-111/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-111/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-111/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-111/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-111/game/r2/maps/mp_rr_desertlands_holiday.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-111/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-111/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '19nov21/depot/r5-111/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '19nov21/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  '19nov21/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '19nov21/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  '19nov21/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '19nov21/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '19nov21/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE         +  '19nov21/maps/mp_rr_desertlands_holiday.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  '19nov21/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '19nov21/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '19nov21/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '2nov21/depot/r5-110/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  '2nov21/maps/mp_lobby.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  '6nov21/depot/r5-110/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '6nov21/maps/mp_rr_tropic_island.bsp': AssertionError("sprp v50, external.GAME_LUMP.sprp v50\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m___________ test_load_bsp[E:/Mod-ApexLegends/season12-map_dirs128] ____________[0m

group_path = 'E:/Mod', game_name = 'ApexLegends/season12'
map_dirs = ['9feb22/maps', '9feb22/depot/r5-120/game/r2/maps', '29march22/maps', '29march22/depot/r5-120/game/r2/maps', '29march22/depot/r5-121/game/r2/maps']

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 54 out of 54 .bsps failed[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', (49, 1))[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', (50, 1))[0m
[1m[31mE         external.GAME_LUMP.sprp v50[0m
[1m[31mE         external.GAME_LUMP.sprp v49[0m
[1m[31mE       assert {'9feb22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '9feb22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), '9feb22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 12')})"), '9feb22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"), '9feb22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '9feb22/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"), '9feb22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"), '9feb22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '9feb22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 0')})"), '9feb22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"), '9feb22/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 20')})"), '9feb22/depot/r5-120/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '9feb22/depot/r5-120/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), '9feb22/depot/r5-120/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 12')})"), '9feb22/depot/r5-120/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"), '9feb22/depot/r5-120/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '9feb22/depot/r5-120/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"), '9feb22/depot/r5-120/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"), '9feb22/depot/r5-120/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '9feb22/depot/r5-120/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 0')})"), '9feb22/depot/r5-120/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"), '9feb22/depot/r5-120/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 20')})"), '29march22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '29march22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), '29march22/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '29march22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '29march22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"), '29march22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '29march22/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"), '29march22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '29march22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 32')})"), '29march22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '29march22/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 64')})"), '29march22/depot/r5-120/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '29march22/depot/r5-120/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), '29march22/depot/r5-120/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 12')})"), '29march22/depot/r5-120/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"), '29march22/depot/r5-120/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '29march22/depot/r5-120/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"), '29march22/depot/r5-120/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"), '29march22/depot/r5-120/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '29march22/depot/r5-120/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 0')})"), '29march22/depot/r5-120/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 20')})"), '29march22/depot/r5-121/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '29march22/depot/r5-121/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), '29march22/depot/r5-121/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '29march22/depot/r5-121/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '29march22/depot/r5-121/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"), '29march22/depot/r5-121/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '29march22/depot/r5-121/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"), '29march22/depot/r5-121/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '29march22/depot/r5-121/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 32')})"), '29march22/depot/r5-121/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '29march22/depot/r5-121/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 64')})")} == {}[0m
[1m[31mE         Left contains 54 more items:[0m
[1m[31mE         {'29march22/depot/r5-120/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '29march22/depot/r5-120/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '29march22/depot/r5-120/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '29march22/depot/r5-120/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '29march22/depot/r5-120/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '29march22/depot/r5-120/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '29march22/depot/r5-120/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE          '29march22/depot/r5-120/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '29march22/depot/r5-120/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '29march22/depot/r5-120/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE          '29march22/depot/r5-121/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '29march22/depot/r5-121/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '29march22/depot/r5-121/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '29march22/depot/r5-121/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '29march22/depot/r5-121/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '29march22/depot/r5-121/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '29march22/depot/r5-121/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '29march22/depot/r5-121/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '29march22/depot/r5-121/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE          '29march22/depot/r5-121/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '29march22/depot/r5-121/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '29march22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '29march22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '29march22/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '29march22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '29march22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '29march22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '29march22/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '29march22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '29march22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE          '29march22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '29march22/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '9feb22/depot/r5-120/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '9feb22/depot/r5-120/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '9feb22/depot/r5-120/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '9feb22/depot/r5-120/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '9feb22/depot/r5-120/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '9feb22/depot/r5-120/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '9feb22/depot/r5-120/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE          '9feb22/depot/r5-120/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '9feb22/depot/r5-120/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '9feb22/depot/r5-120/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '9feb22/depot/r5-120/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE          '9feb22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '9feb22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '9feb22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '9feb22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '9feb22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '9feb22/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '9feb22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE          '9feb22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '9feb22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '9feb22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '9feb22/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 20')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  '29march22/depot/r5-120/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '29march22/depot/r5-120/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '29march22/depot/r5-120/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '29march22/depot/r5-120/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '29march22/depot/r5-120/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '29march22/depot/r5-120/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '29march22/depot/r5-120/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE         +  '29march22/depot/r5-120/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '29march22/depot/r5-120/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '29march22/depot/r5-120/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE         +  '29march22/depot/r5-121/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '29march22/depot/r5-121/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '29march22/depot/r5-121/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '29march22/depot/r5-121/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '29march22/depot/r5-121/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '29march22/depot/r5-121/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '29march22/depot/r5-121/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '29march22/depot/r5-121/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '29march22/depot/r5-121/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE         +  '29march22/depot/r5-121/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '29march22/depot/r5-121/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '29march22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '29march22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '29march22/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '29march22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '29march22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '29march22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '29march22/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '29march22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '29march22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE         +  '29march22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '29march22/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '9feb22/depot/r5-120/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '9feb22/depot/r5-120/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '9feb22/depot/r5-120/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '9feb22/depot/r5-120/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '9feb22/depot/r5-120/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '9feb22/depot/r5-120/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '9feb22/depot/r5-120/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE         +  '9feb22/depot/r5-120/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '9feb22/depot/r5-120/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '9feb22/depot/r5-120/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '9feb22/depot/r5-120/game/r2/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE         +  '9feb22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '9feb22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '9feb22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '9feb22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '9feb22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '9feb22/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '9feb22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE         +  '9feb22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '9feb22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '9feb22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '9feb22/maps/mp_rr_tropic_island.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m___________ test_load_bsp[E:/Mod-ApexLegends/season13-map_dirs129] ____________[0m

group_path = 'E:/Mod', game_name = 'ApexLegends/season13'
map_dirs = ['10may22/maps', '10may22/depot/r5-130/game/r2/maps', '21jun22/maps', '21jun22/depot/r5-130/game/r2/maps', '21jun22/depot/r5-131/game/r2/maps']

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 54 out of 54 .bsps failed[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', (51, 1))[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', (49, 1))[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', (50, 1))[0m
[1m[31mE         external.GAME_LUMP.sprp v50[0m
[1m[31mE         external.GAME_LUMP.sprp v51[0m
[1m[31mE         external.GAME_LUMP.sprp v49[0m
[1m[31mE       assert {'10may22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"), '10may22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), '10may22/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '10may22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '10may22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '10may22/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"), '10may22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '10may22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"), '10may22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"), '10may22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"), '10may22/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"), '10may22/depot/r5-130/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"), '10may22/depot/r5-130/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), '10may22/depot/r5-130/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '10may22/depot/r5-130/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '10may22/depot/r5-130/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '10may22/depot/r5-130/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"), '10may22/depot/r5-130/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '10may22/depot/r5-130/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"), '10may22/depot/r5-130/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"), '10may22/depot/r5-130/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"), '10may22/depot/r5-130/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"), '21jun22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 16')})"), '21jun22/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '21jun22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '21jun22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"), '21jun22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '21jun22/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"), '21jun22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"), '21jun22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 4')})"), '21jun22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"), '21jun22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"), '21jun22/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"), '21jun22/depot/r5-130/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"), '21jun22/depot/r5-130/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '21jun22/depot/r5-130/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '21jun22/depot/r5-130/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '21jun22/depot/r5-130/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"), '21jun22/depot/r5-130/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '21jun22/depot/r5-130/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"), '21jun22/depot/r5-130/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"), '21jun22/depot/r5-130/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"), '21jun22/depot/r5-130/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"), '21jun22/depot/r5-131/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 16')})"), '21jun22/depot/r5-131/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '21jun22/depot/r5-131/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"), '21jun22/depot/r5-131/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"), '21jun22/depot/r5-131/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"), '21jun22/depot/r5-131/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"), '21jun22/depot/r5-131/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"), '21jun22/depot/r5-131/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 4')})"), '21jun22/depot/r5-131/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"), '21jun22/depot/r5-131/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"), '21jun22/depot/r5-131/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})")} == {}[0m
[1m[31mE         Left contains 54 more items:[0m
[1m[31mE         {'10may22/depot/r5-130/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          '10may22/depot/r5-130/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '10may22/depot/r5-130/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '10may22/depot/r5-130/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '10may22/depot/r5-130/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '10may22/depot/r5-130/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '10may22/depot/r5-130/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '10may22/depot/r5-130/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          '10may22/depot/r5-130/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '10may22/depot/r5-130/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '10may22/depot/r5-130/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '10may22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          '10may22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '10may22/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '10may22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '10may22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '10may22/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '10may22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '10may22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          '10may22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '10may22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '10may22/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '21jun22/depot/r5-130/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          '21jun22/depot/r5-130/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '21jun22/depot/r5-130/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '21jun22/depot/r5-130/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '21jun22/depot/r5-130/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '21jun22/depot/r5-130/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '21jun22/depot/r5-130/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          '21jun22/depot/r5-130/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '21jun22/depot/r5-130/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '21jun22/depot/r5-130/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '21jun22/depot/r5-131/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE          '21jun22/depot/r5-131/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '21jun22/depot/r5-131/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '21jun22/depot/r5-131/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '21jun22/depot/r5-131/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '21jun22/depot/r5-131/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '21jun22/depot/r5-131/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '21jun22/depot/r5-131/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 4')})"),[0m
[1m[31mE          '21jun22/depot/r5-131/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          '21jun22/depot/r5-131/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '21jun22/depot/r5-131/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          '21jun22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE          '21jun22/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '21jun22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '21jun22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '21jun22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '21jun22/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '21jun22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '21jun22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 4')})"),[0m
[1m[31mE          '21jun22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          '21jun22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '21jun22/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  '10may22/depot/r5-130/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  '10may22/depot/r5-130/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '10may22/depot/r5-130/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '10may22/depot/r5-130/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '10may22/depot/r5-130/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '10may22/depot/r5-130/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '10may22/depot/r5-130/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '10may22/depot/r5-130/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  '10may22/depot/r5-130/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '10may22/depot/r5-130/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '10may22/depot/r5-130/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '10may22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  '10may22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '10may22/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '10may22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '10may22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '10may22/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '10may22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '10may22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  '10may22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '10may22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '10may22/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-130/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-130/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-130/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-130/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-130/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-130/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-130/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-130/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-130/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-130/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-131/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-131/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-131/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-131/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-131/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-131/game/r2/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-131/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-131/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 4')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-131/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-131/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '21jun22/depot/r5-131/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  '21jun22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE         +  '21jun22/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '21jun22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '21jun22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '21jun22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '21jun22/maps/mp_rr_canyonlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '21jun22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '21jun22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 4')})"),[0m
[1m[31mE         +  '21jun22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  '21jun22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v49\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '21jun22/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m___________ test_load_bsp[E:/Mod-ApexLegends/season14-map_dirs130] ____________[0m

group_path = 'E:/Mod', game_name = 'ApexLegends/season14'
map_dirs = ['9aug22/maps', '9aug22/depot/r5-140/game/r2/maps', '20sep22/maps', '20sep22/depot/r5-140/game/r2/maps', '20sep22/depot/r5-141/game/r2/maps', '29sep22/maps', ...]

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 60 out of 60 .bsps failed[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', (51, 1))[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', (50, 1))[0m
[1m[31mE         external.GAME_LUMP.sprp v51[0m
[1m[31mE         external.GAME_LUMP.sprp v50[0m
[1m[31mE       assert {'9aug22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"), '9aug22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"), '9aug22/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '9aug22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"), '9aug22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"), '9aug22/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"), '9aug22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"), '9aug22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"), '9aug22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"), '9aug22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"), '9aug22/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"), '9aug22/depot/r5-140/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"), '9aug22/depot/r5-140/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"), '9aug22/depot/r5-140/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '9aug22/depot/r5-140/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"), '9aug22/depot/r5-140/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"), '9aug22/depot/r5-140/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"), '9aug22/depot/r5-140/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"), '9aug22/depot/r5-140/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"), '9aug22/depot/r5-140/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"), '9aug22/depot/r5-140/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"), '9aug22/depot/r5-140/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"), '20sep22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"), '20sep22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"), '20sep22/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '20sep22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"), '20sep22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"), '20sep22/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"), '20sep22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"), '20sep22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"), '20sep22/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"), '20sep22/maps/mp_rr_olympus_mu1_night.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"), '20sep22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"), '20sep22/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"), '20sep22/depot/r5-140/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"), '20sep22/depot/r5-140/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"), '20sep22/depot/r5-140/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '20sep22/depot/r5-140/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"), '20sep22/depot/r5-140/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"), '20sep22/depot/r5-140/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"), '20sep22/depot/r5-140/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"), '20sep22/depot/r5-140/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"), '20sep22/depot/r5-140/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"), '20sep22/depot/r5-141/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"), '20sep22/depot/r5-141/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"), '20sep22/depot/r5-141/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"), '20sep22/depot/r5-141/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"), '20sep22/depot/r5-141/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"), '20sep22/depot/r5-141/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"), '20sep22/depot/r5-141/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"), '20sep22/depot/r5-141/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"), '20sep22/depot/r5-141/game/r2/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"), '20sep22/depot/r5-141/game/r2/maps/mp_rr_olympus_mu1_night.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"), '20sep22/depot/r5-141/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"), '20sep22/depot/r5-141/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"), '29sep22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"), '29sep22/maps/mp_rr_olympus_mu1_night.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"), '29sep22/depot/r5-140/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"), '29sep22/depot/r5-141/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"), '29sep22/depot/r5-141/game/r2/maps/mp_rr_olympus_mu1_night.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})")} == {}[0m
[1m[31mE         Left contains 60 more items:[0m
[1m[31mE         {'20sep22/depot/r5-140/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '20sep22/depot/r5-140/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '20sep22/depot/r5-140/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '20sep22/depot/r5-140/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '20sep22/depot/r5-140/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '20sep22/depot/r5-140/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '20sep22/depot/r5-140/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '20sep22/depot/r5-140/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '20sep22/depot/r5-140/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          '20sep22/depot/r5-141/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '20sep22/depot/r5-141/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '20sep22/depot/r5-141/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '20sep22/depot/r5-141/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '20sep22/depot/r5-141/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '20sep22/depot/r5-141/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '20sep22/depot/r5-141/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '20sep22/depot/r5-141/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE          '20sep22/depot/r5-141/game/r2/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          '20sep22/depot/r5-141/game/r2/maps/mp_rr_olympus_mu1_night.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '20sep22/depot/r5-141/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '20sep22/depot/r5-141/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          '20sep22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '20sep22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '20sep22/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '20sep22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '20sep22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '20sep22/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '20sep22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '20sep22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE          '20sep22/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          '20sep22/maps/mp_rr_olympus_mu1_night.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '20sep22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '20sep22/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          '29sep22/depot/r5-140/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '29sep22/depot/r5-141/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '29sep22/depot/r5-141/game/r2/maps/mp_rr_olympus_mu1_night.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '29sep22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '29sep22/maps/mp_rr_olympus_mu1_night.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '9aug22/depot/r5-140/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '9aug22/depot/r5-140/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '9aug22/depot/r5-140/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '9aug22/depot/r5-140/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '9aug22/depot/r5-140/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '9aug22/depot/r5-140/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '9aug22/depot/r5-140/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '9aug22/depot/r5-140/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '9aug22/depot/r5-140/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '9aug22/depot/r5-140/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '9aug22/depot/r5-140/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          '9aug22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '9aug22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          '9aug22/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '9aug22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '9aug22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '9aug22/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '9aug22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '9aug22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          '9aug22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '9aug22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '9aug22/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  '20sep22/depot/r5-140/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-140/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-140/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-140/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-140/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-140/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-140/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-140/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-140/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-141/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-141/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-141/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-141/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-141/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-141/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-141/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-141/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-141/game/r2/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-141/game/r2/maps/mp_rr_olympus_mu1_night.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-141/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '20sep22/depot/r5-141/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  '20sep22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '20sep22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '20sep22/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '20sep22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '20sep22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '20sep22/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '20sep22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '20sep22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE         +  '20sep22/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  '20sep22/maps/mp_rr_olympus_mu1_night.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '20sep22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '20sep22/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  '29sep22/depot/r5-140/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '29sep22/depot/r5-141/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '29sep22/depot/r5-141/game/r2/maps/mp_rr_olympus_mu1_night.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '29sep22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '29sep22/maps/mp_rr_olympus_mu1_night.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '9aug22/depot/r5-140/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '9aug22/depot/r5-140/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '9aug22/depot/r5-140/game/r2/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '9aug22/depot/r5-140/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '9aug22/depot/r5-140/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '9aug22/depot/r5-140/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '9aug22/depot/r5-140/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '9aug22/depot/r5-140/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '9aug22/depot/r5-140/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '9aug22/depot/r5-140/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '9aug22/depot/r5-140/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  '9aug22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '9aug22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  '9aug22/maps/mp_rr_arena_composite.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '9aug22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '9aug22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '9aug22/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '9aug22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '9aug22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  '9aug22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '9aug22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '9aug22/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m___________ test_load_bsp[E:/Mod-ApexLegends/season15-map_dirs131] ____________[0m

group_path = 'E:/Mod', game_name = 'ApexLegends/season15'
map_dirs = ['1nov22/maps', '1nov22/depot/r5-150/game/r2/maps']

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 24 out of 24 .bsps failed[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', (51, 1))[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', (50, 1))[0m
[1m[31mE         external.GAME_LUMP.sprp v51[0m
[1m[31mE         external.GAME_LUMP.sprp v50[0m
[1m[31mE       assert {'1nov22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"), '1nov22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"), '1nov22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"), '1nov22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 16')})"), '1nov22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"), '1nov22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"), '1nov22/maps/mp_rr_desertlands_holiday.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"), '1nov22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"), '1nov22/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"), '1nov22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"), '1nov22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"), '1nov22/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"), '1nov22/depot/r5-150/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"), '1nov22/depot/r5-150/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"), '1nov22/depot/r5-150/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"), '1nov22/depot/r5-150/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 16')})"), '1nov22/depot/r5-150/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"), '1nov22/depot/r5-150/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"), '1nov22/depot/r5-150/game/r2/maps/mp_rr_desertlands_holiday.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"), '1nov22/depot/r5-150/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"), '1nov22/depot/r5-150/game/r2/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"), '1nov22/depot/r5-150/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"), '1nov22/depot/r5-150/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"), '1nov22/depot/r5-150/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})")} == {}[0m
[1m[31mE         Left contains 24 more items:[0m
[1m[31mE         {'1nov22/depot/r5-150/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          '1nov22/depot/r5-150/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '1nov22/depot/r5-150/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '1nov22/depot/r5-150/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE          '1nov22/depot/r5-150/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '1nov22/depot/r5-150/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '1nov22/depot/r5-150/game/r2/maps/mp_rr_desertlands_holiday.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          '1nov22/depot/r5-150/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE          '1nov22/depot/r5-150/game/r2/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '1nov22/depot/r5-150/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '1nov22/depot/r5-150/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '1nov22/depot/r5-150/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          '1nov22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          '1nov22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '1nov22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '1nov22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE          '1nov22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '1nov22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '1nov22/maps/mp_rr_desertlands_holiday.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          '1nov22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE          '1nov22/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '1nov22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '1nov22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          '1nov22/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  '1nov22/depot/r5-150/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  '1nov22/depot/r5-150/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '1nov22/depot/r5-150/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '1nov22/depot/r5-150/game/r2/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE         +  '1nov22/depot/r5-150/game/r2/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '1nov22/depot/r5-150/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '1nov22/depot/r5-150/game/r2/maps/mp_rr_desertlands_holiday.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  '1nov22/depot/r5-150/game/r2/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE         +  '1nov22/depot/r5-150/game/r2/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '1nov22/depot/r5-150/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '1nov22/depot/r5-150/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '1nov22/depot/r5-150/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  '1nov22/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  '1nov22/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '1nov22/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '1nov22/maps/mp_rr_arena_phase_runner.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 16')})"),[0m
[1m[31mE         +  '1nov22/maps/mp_rr_arena_skygarden.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '1nov22/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '1nov22/maps/mp_rr_desertlands_holiday.bsp': AssertionError("external.GAME_LUMP.sprp v50\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v50': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  '1nov22/maps/mp_rr_desertlands_mu3.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE         +  '1nov22/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '1nov22/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '1nov22/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  '1nov22/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m___________ test_load_bsp[E:/Mod-ApexLegends/season16-map_dirs132] ____________[0m

group_path = 'E:/Mod', game_name = 'ApexLegends/season16'
map_dirs = ['14feb23/maps', '14feb23/depot/r5-160/game/r2/maps', '28mar23/maps', '28mar23/depot/r5-160/game/r2/maps', '28mar23/depot/r5-161/game/r2/maps']

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 48 out of 48 .bsps failed[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', (51, 1))[0m
[1m[31mE         external.GAME_LUMP.sprp v51[0m
[1m[31mE       assert {'14feb23/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"), '14feb23/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"), '14feb23/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"), '14feb23/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"), '14feb23/maps/mp_rr_desertlands_mu4.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 4')})"), '14feb23/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"), '14feb23/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"), '14feb23/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"), '14feb23/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"), '14feb23/depot/r5-160/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"), '14feb23/depot/r5-160/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"), '14feb23/depot/r5-160/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"), '14feb23/depot/r5-160/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"), '14feb23/depot/r5-160/game/r2/maps/mp_rr_desertlands_mu4.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 4')})"), '14feb23/depot/r5-160/game/r2/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"), '14feb23/depot/r5-160/game/r2/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"), '14feb23/depot/r5-160/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"), '14feb23/depot/r5-160/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"), '28mar23/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"), '28mar23/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"), '28mar23/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"), '28mar23/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"), '28mar23/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"), '28mar23/maps/mp_rr_desertlands_mu4.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 8')})"), '28mar23/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"), '28mar23/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"), '28mar23/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"), '28mar23/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"), '28mar23/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"), '28mar23/depot/r5-160/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"), '28mar23/depot/r5-160/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"), '28mar23/depot/r5-160/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"), '28mar23/depot/r5-160/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"), '28mar23/depot/r5-160/game/r2/maps/mp_rr_desertlands_mu4.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 4')})"), '28mar23/depot/r5-160/game/r2/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"), '28mar23/depot/r5-160/game/r2/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"), '28mar23/depot/r5-160/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"), '28mar23/depot/r5-160/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"), '28mar23/depot/r5-161/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"), '28mar23/depot/r5-161/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"), '28mar23/depot/r5-161/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"), '28mar23/depot/r5-161/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"), '28mar23/depot/r5-161/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"), '28mar23/depot/r5-161/game/r2/maps/mp_rr_desertlands_mu4.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 8')})"), '28mar23/depot/r5-161/game/r2/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"), '28mar23/depot/r5-161/game/r2/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"), '28mar23/depot/r5-161/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"), '28mar23/depot/r5-161/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})")} == {}[0m
[1m[31mE         Left contains 48 more items:[0m
[1m[31mE         {'14feb23/depot/r5-160/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE          '14feb23/depot/r5-160/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '14feb23/depot/r5-160/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '14feb23/depot/r5-160/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          '14feb23/depot/r5-160/game/r2/maps/mp_rr_desertlands_mu4.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 4')})"),[0m
[1m[31mE          '14feb23/depot/r5-160/game/r2/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '14feb23/depot/r5-160/game/r2/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '14feb23/depot/r5-160/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '14feb23/depot/r5-160/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '14feb23/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE          '14feb23/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '14feb23/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '14feb23/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          '14feb23/maps/mp_rr_desertlands_mu4.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 4')})"),[0m
[1m[31mE          '14feb23/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '14feb23/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '14feb23/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '14feb23/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '28mar23/depot/r5-160/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE          '28mar23/depot/r5-160/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '28mar23/depot/r5-160/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '28mar23/depot/r5-160/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          '28mar23/depot/r5-160/game/r2/maps/mp_rr_desertlands_mu4.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 4')})"),[0m
[1m[31mE          '28mar23/depot/r5-160/game/r2/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '28mar23/depot/r5-160/game/r2/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '28mar23/depot/r5-160/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '28mar23/depot/r5-160/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          '28mar23/depot/r5-161/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE          '28mar23/depot/r5-161/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '28mar23/depot/r5-161/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '28mar23/depot/r5-161/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '28mar23/depot/r5-161/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          '28mar23/depot/r5-161/game/r2/maps/mp_rr_desertlands_mu4.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          '28mar23/depot/r5-161/game/r2/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '28mar23/depot/r5-161/game/r2/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '28mar23/depot/r5-161/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '28mar23/depot/r5-161/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          '28mar23/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE          '28mar23/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          '28mar23/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          '28mar23/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '28mar23/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          '28mar23/maps/mp_rr_desertlands_mu4.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          '28mar23/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE          '28mar23/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '28mar23/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          '28mar23/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          '28mar23/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  '14feb23/depot/r5-160/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE         +  '14feb23/depot/r5-160/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '14feb23/depot/r5-160/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '14feb23/depot/r5-160/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  '14feb23/depot/r5-160/game/r2/maps/mp_rr_desertlands_mu4.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 4')})"),[0m
[1m[31mE         +  '14feb23/depot/r5-160/game/r2/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '14feb23/depot/r5-160/game/r2/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '14feb23/depot/r5-160/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '14feb23/depot/r5-160/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '14feb23/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE         +  '14feb23/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '14feb23/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '14feb23/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  '14feb23/maps/mp_rr_desertlands_mu4.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 4')})"),[0m
[1m[31mE         +  '14feb23/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '14feb23/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '14feb23/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '14feb23/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-160/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-160/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-160/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-160/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-160/game/r2/maps/mp_rr_desertlands_mu4.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 4')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-160/game/r2/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-160/game/r2/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-160/game/r2/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-160/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-161/game/r2/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-161/game/r2/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-161/game/r2/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-161/game/r2/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-161/game/r2/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-161/game/r2/maps/mp_rr_desertlands_mu4.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-161/game/r2/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-161/game/r2/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-161/game/r2/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '28mar23/depot/r5-161/game/r2/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  '28mar23/maps/mp_lobby.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE         +  '28mar23/maps/mp_rr_aqueduct.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  '28mar23/maps/mp_rr_arena_habitat.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  '28mar23/maps/mp_rr_canyonlands_hu.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '28mar23/maps/mp_rr_canyonlands_staging.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  '28mar23/maps/mp_rr_desertlands_mu4.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  '28mar23/maps/mp_rr_divided_moon.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 12')})"),[0m
[1m[31mE         +  '28mar23/maps/mp_rr_freedm_skulltown.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '28mar23/maps/mp_rr_olympus_mu2.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  '28mar23/maps/mp_rr_party_crasher.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  '28mar23/maps/mp_rr_tropic_island_mu1.bsp': AssertionError("external.GAME_LUMP.sprp v51\nassert 1 == 0\n +  where 1 = len({'external.GAME_LUMP.sprp v51': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m____________ test_load_bsp[E:/Mod-ApexLegends/switch-map_dirs133] _____________[0m

group_path = 'E:/Mod', game_name = 'ApexLegends/switch'
map_dirs = ['season9/maps', 'season9/depot/r5-90/game/r2/maps']

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 14 out of 14 .bsps failed[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.apex_legends', 49)[0m
[1m[31mE         external.GAME_LUMP.sprp v49[0m
[1m[31mE         sprp v49[0m
[1m[31mE       assert {'season9/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'season9/maps/mp_rr_arena_phase_runner_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 60')})"), 'season9/maps/mp_rr_canyonlands_mu3_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'season9/maps/mp_rr_canyonlands_staging_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'season9/maps/mp_rr_desertlands_mu2_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), 'season9/maps/mp_rr_olympus_mu1_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), 'season9/maps/mp_rr_party_crasher_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 64')})"), 'season9/depot/r5-90/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'season9/depot/r5-90/game/r2/maps/mp_rr_arena_phase_runner_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 60')})"), 'season9/depot/r5-90/game/r2/maps/mp_rr_canyonlands_mu3_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'season9/depot/r5-90/game/r2/maps/mp_rr_canyonlands_staging_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'season9/depot/r5-90/game/r2/maps/mp_rr_desertlands_mu2_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), 'season9/depot/r5-90/game/r2/maps/mp_rr_olympus_mu1_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"), 'season9/depot/r5-90/game/r2/maps/mp_rr_party_crasher_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 64')})")} == {}[0m
[1m[31mE         Left contains 14 more items:[0m
[1m[31mE         {'season9/depot/r5-90/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'season9/depot/r5-90/game/r2/maps/mp_rr_arena_phase_runner_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          'season9/depot/r5-90/game/r2/maps/mp_rr_canyonlands_mu3_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'season9/depot/r5-90/game/r2/maps/mp_rr_canyonlands_staging_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'season9/depot/r5-90/game/r2/maps/mp_rr_desertlands_mu2_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          'season9/depot/r5-90/game/r2/maps/mp_rr_olympus_mu1_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          'season9/depot/r5-90/game/r2/maps/mp_rr_party_crasher_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          'season9/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'season9/maps/mp_rr_arena_phase_runner_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          'season9/maps/mp_rr_canyonlands_mu3_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'season9/maps/mp_rr_canyonlands_staging_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'season9/maps/mp_rr_desertlands_mu2_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          'season9/maps/mp_rr_olympus_mu1_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE          'season9/maps/mp_rr_party_crasher_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 64')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  'season9/depot/r5-90/game/r2/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'season9/depot/r5-90/game/r2/maps/mp_rr_arena_phase_runner_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  'season9/depot/r5-90/game/r2/maps/mp_rr_canyonlands_mu3_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'season9/depot/r5-90/game/r2/maps/mp_rr_canyonlands_staging_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'season9/depot/r5-90/game/r2/maps/mp_rr_desertlands_mu2_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  'season9/depot/r5-90/game/r2/maps/mp_rr_olympus_mu1_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  'season9/depot/r5-90/game/r2/maps/mp_rr_party_crasher_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  'season9/maps/mp_lobby.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'season9/maps/mp_rr_arena_phase_runner_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  'season9/maps/mp_rr_canyonlands_mu3_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'season9/maps/mp_rr_canyonlands_staging_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'season9/maps/mp_rr_desertlands_mu2_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  'season9/maps/mp_rr_olympus_mu1_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 24'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 24')})"),[0m
[1m[31mE         +  'season9/maps/mp_rr_party_crasher_gen3.bsp': AssertionError("sprp v49, external.GAME_LUMP.sprp v49\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v49': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v49': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m______________ test_load_bsp[E:/Mod/PS4-Titanfall2-map_dirs143] _______________[0m

group_path = 'E:/Mod/PS4', game_name = 'Titanfall2'
map_dirs = ['maps', 'depot/r2dlc3/game/r2/maps', 'depot/r2dlc4/game/r2/maps', 'depot/r2dlc5/game/r2/maps', 'depot/r2dlc6/game/r2/maps', 'depot/r2dlc7/game/r2/maps', ...]

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 65 out of 71 .bsps failed[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.titanfall2', 37)[0m
[1m[31mE         external.GAME_LUMP.sprp v13[0m
[1m[31mE         sprp v13[0m
[1m[31mE       assert {'maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'maps/mp_crashsite3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"), 'maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'maps/mp_eden.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})"), 'maps/mp_forwardbase_kodai.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"), 'maps/mp_grave.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"), 'maps/mp_homestead.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"), 'maps/mp_thaw.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'maps/sp_beacon.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"), 'maps/sp_beacon_spoke0.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"), 'maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'maps/sp_boomtown_start.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"), 'maps/sp_crashsite.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 40'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 40')})"), 'maps/sp_hub_timeshift.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"), 'maps/sp_sewers1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 20')})"), 'maps/sp_skyway_v1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'maps/sp_tday.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"), 'maps/sp_timeshift_spoke02.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})"), 'maps/sp_training.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})"), 'depot/r2dlc3/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc3/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'depot/r2dlc4/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc4/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'depot/r2dlc5/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc5/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'depot/r2dlc6/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc6/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'depot/r2dlc7/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc7/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'depot/r2dlc8/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc8/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'depot/r2dlc9/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc9/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'depot/r2dlc10/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc10/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'depot/r2dlc11/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"), 'depot/r2dlc11/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'depot/r2pcprecert/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'depot/r2ps4precert/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"), 'depot/r2ps4precert/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"), 'depot/r2ps4precert/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'depot/r2ps4precert/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'depot/r2ps4precert/game/r2/maps/mp_crashsite3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"), 'depot/r2ps4precert/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'depot/r2ps4precert/game/r2/maps/mp_eden.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})"), 'depot/r2ps4precert/game/r2/maps/mp_forwardbase_kodai.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"), 'depot/r2ps4precert/game/r2/maps/mp_grave.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"), 'depot/r2ps4precert/game/r2/maps/mp_homestead.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"), 'depot/r2ps4precert/game/r2/maps/mp_thaw.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'depot/r2ps4precert/game/r2/maps/sp_beacon.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"), 'depot/r2ps4precert/game/r2/maps/sp_beacon_spoke0.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"), 'depot/r2ps4precert/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'depot/r2ps4precert/game/r2/maps/sp_boomtown_start.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"), 'depot/r2ps4precert/game/r2/maps/sp_crashsite.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 40'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 40')})"), 'depot/r2ps4precert/game/r2/maps/sp_hub_timeshift.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"), 'depot/r2ps4precert/game/r2/maps/sp_sewers1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 20')})"), 'depot/r2ps4precert/game/r2/maps/sp_skyway_v1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"), 'depot/r2ps4precert/game/r2/maps/sp_tday.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"), 'depot/r2ps4precert/game/r2/maps/sp_timeshift_spoke02.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})"), 'depot/r2ps4precert/game/r2/maps/sp_training.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})"), 'depot/r2staging/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 0')})"), 'depot/r2staging/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})")} == {}[0m
[1m[31mE         Left contains 65 more items:[0m
[1m[31mE         {'depot/r2dlc10/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc10/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'depot/r2dlc11/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc11/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'depot/r2dlc3/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc3/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'depot/r2dlc4/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc4/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'depot/r2dlc5/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc5/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'depot/r2dlc6/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc6/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'depot/r2dlc7/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc7/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'depot/r2dlc8/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc8/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'depot/r2dlc9/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'depot/r2dlc9/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'depot/r2pcprecert/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/mp_crashsite3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/mp_eden.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/mp_forwardbase_kodai.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/mp_grave.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/mp_homestead.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/mp_thaw.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/sp_beacon.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/sp_beacon_spoke0.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/sp_boomtown_start.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/sp_crashsite.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 40'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/sp_hub_timeshift.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/sp_sewers1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/sp_skyway_v1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/sp_tday.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/sp_timeshift_spoke02.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          'depot/r2ps4precert/game/r2/maps/sp_training.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE          'depot/r2staging/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE          'depot/r2staging/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE          'maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE          'maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'maps/mp_crashsite3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          'maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'maps/mp_eden.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE          'maps/mp_forwardbase_kodai.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          'maps/mp_grave.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          'maps/mp_homestead.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          'maps/mp_thaw.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'maps/sp_beacon.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE          'maps/sp_beacon_spoke0.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE          'maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'maps/sp_boomtown_start.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE          'maps/sp_crashsite.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 40'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE          'maps/sp_hub_timeshift.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          'maps/sp_sewers1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE          'maps/sp_skyway_v1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE          'maps/sp_tday.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE          'maps/sp_timeshift_spoke02.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          'maps/sp_training.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  'depot/r2dlc10/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc10/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'depot/r2dlc11/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc11/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'depot/r2dlc3/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc3/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'depot/r2dlc4/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc4/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'depot/r2dlc5/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc5/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'depot/r2dlc6/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc6/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'depot/r2dlc7/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc7/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'depot/r2dlc8/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc8/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'depot/r2dlc9/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'depot/r2dlc9/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'depot/r2pcprecert/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/mp_crashsite3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/mp_eden.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/mp_forwardbase_kodai.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/mp_grave.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/mp_homestead.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/mp_thaw.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/sp_beacon.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/sp_beacon_spoke0.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/sp_boomtown_start.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/sp_crashsite.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 40'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/sp_hub_timeshift.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/sp_sewers1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/sp_skyway_v1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/sp_tday.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/sp_timeshift_spoke02.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  'depot/r2ps4precert/game/r2/maps/sp_training.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE         +  'depot/r2staging/game/r2/maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 0'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 0')})"),[0m
[1m[31mE         +  'depot/r2staging/game/r2/maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'maps/mp_angel_city.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 56'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 56')})"),[0m
[1m[31mE         +  'maps/mp_black_water_canal.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 72'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 72')})"),[0m
[1m[31mE         +  'maps/mp_coliseum.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'maps/mp_complex3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'maps/mp_crashsite3.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  'maps/mp_drydock.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'maps/mp_eden.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE         +  'maps/mp_forwardbase_kodai.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  'maps/mp_grave.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  'maps/mp_homestead.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  'maps/mp_thaw.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'maps/sp_beacon.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 60'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 60')})"),[0m
[1m[31mE         +  'maps/sp_beacon_spoke0.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 52'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 52')})"),[0m
[1m[31mE         +  'maps/sp_boomtown_end.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'maps/sp_boomtown_start.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 64'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 64')})"),[0m
[1m[31mE         +  'maps/sp_crashsite.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 40'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 40')})"),[0m
[1m[31mE         +  'maps/sp_hub_timeshift.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  'maps/sp_sewers1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 20'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 20')})"),[0m
[1m[31mE         +  'maps/sp_skyway_v1.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 48'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 48')})"),[0m
[1m[31mE         +  'maps/sp_tday.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 36'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 36')})"),[0m
[1m[31mE         +  'maps/sp_timeshift_spoke02.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  'maps/sp_training.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 32'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 32')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m_________ test_load_bsp[E:/Mod/PS4-Titanfall2_tech_test-map_dirs144] __________[0m

group_path = 'E:/Mod/PS4', game_name = 'Titanfall2_tech_test'
map_dirs = ['maps', 'depot/r2tt/game/r2/maps']

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 8 out of 10 .bsps failed[0m
[1m[31mE         ('RespawnBsp', 'bsp_tool.branches.respawn.titanfall2', 36)[0m
[1m[31mE         external.GAME_LUMP.sprp v13[0m
[1m[31mE         sprp v13[0m
[1m[31mE       assert {'maps/mp_forwardbase_kodai.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'maps/mp_grave.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'maps/mp_homestead.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'maps/sp_training.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})"), 'depot/r2tt/game/r2/maps/mp_forwardbase_kodai.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"), 'depot/r2tt/game/r2/maps/mp_grave.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"), 'depot/r2tt/game/r2/maps/mp_homestead.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"), 'depot/r2tt/game/r2/maps/sp_training.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})")} == {}[0m
[1m[31mE         Left contains 8 more items:[0m
[1m[31mE         {'depot/r2tt/game/r2/maps/mp_forwardbase_kodai.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'depot/r2tt/game/r2/maps/mp_grave.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'depot/r2tt/game/r2/maps/mp_homestead.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'depot/r2tt/game/r2/maps/sp_training.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE          'maps/mp_forwardbase_kodai.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE          'maps/mp_grave.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE          'maps/mp_homestead.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE          'maps/sp_training.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  'depot/r2tt/game/r2/maps/mp_forwardbase_kodai.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'depot/r2tt/game/r2/maps/mp_grave.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'depot/r2tt/game/r2/maps/mp_homestead.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'depot/r2tt/game/r2/maps/sp_training.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE         +  'maps/mp_forwardbase_kodai.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 8'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 8')})"),[0m
[1m[31mE         +  'maps/mp_grave.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 68'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 68')})"),[0m
[1m[31mE         +  'maps/mp_homestead.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 44'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 44')})"),[0m
[1m[31mE         +  'maps/sp_training.bsp': AssertionError("sprp v13, external.GAME_LUMP.sprp v13\nassert 2 == 0\n +  where 2 = len({'external.GAME_LUMP.sprp v13': AssertionError('Not enough bytes! Expected 76 got 28'), 'sprp v13': AssertionError('Not enough bytes! Expected 76 got 28')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m______________ test_load_bsp[E:/Mod/X360-Left4Dead-map_dirs145] _______________[0m

group_path = 'E:/Mod/X360', game_name = 'Left4Dead'
map_dirs = ['left4dead/maps']

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 43 out of 44 .bsps failed[0m
[1m[31mE         ('ValveBsp', 'bsp_tool.branches.valve.orange_box_x360', 20)[0m
[1m[31mE         sprp v7[0m
[1m[31mE       assert {'left4dead/maps/backgroundstreet.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 67')})"), 'left4dead/maps/background_lighthouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 30')})"), 'left4dead/maps/l4d_airport01_greenhouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 35')})"), 'left4dead/maps/l4d_airport02_offices.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 0')})"), 'left4dead/maps/l4d_airport03_garage.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 10')})"), 'left4dead/maps/l4d_airport04_terminal.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 17')})"), 'left4dead/maps/l4d_airport05_runway.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 46')})"), 'left4dead/maps/l4d_farm01_hilltop.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 12')})"), 'left4dead/maps/l4d_farm02_traintunnel.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 13')})"), 'left4dead/maps/l4d_farm03_bridge.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 54')})"), 'left4dead/maps/l4d_farm04_barn.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 3')})"), 'left4dead/maps/l4d_farm05_cornfield.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 47')})"), 'left4dead/maps/l4d_hospital01_apartment.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 66')})"), 'left4dead/maps/l4d_hospital02_subway.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 60')})"), 'left4dead/maps/l4d_hospital03_sewers.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 25')})"), 'left4dead/maps/l4d_hospital04_interior.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 32')})"), 'left4dead/maps/l4d_hospital05_rooftop.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 59')})"), 'left4dead/maps/l4d_smalltown01_caves.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 12')})"), 'left4dead/maps/l4d_smalltown02_drainage.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 26')})"), 'left4dead/maps/l4d_smalltown03_ranchhouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 4')})"), 'left4dead/maps/l4d_smalltown04_mainstreet.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 67')})"), 'left4dead/maps/l4d_smalltown05_houseboat.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 9')})"), 'left4dead/maps/l4d_vs_airport01_greenhouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 37')})"), 'left4dead/maps/l4d_vs_airport02_offices.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 68')})"), 'left4dead/maps/l4d_vs_airport03_garage.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 31')})"), 'left4dead/maps/l4d_vs_airport04_terminal.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 20')})"), 'left4dead/maps/l4d_vs_airport05_runway.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 25')})"), 'left4dead/maps/l4d_vs_farm01_hilltop.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 6')})"), 'left4dead/maps/l4d_vs_farm02_traintunnel.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 1')})"), 'left4dead/maps/l4d_vs_farm03_bridge.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 60')})"), 'left4dead/maps/l4d_vs_farm04_barn.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 68')})"), 'left4dead/maps/l4d_vs_farm05_cornfield.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 18')})"), 'left4dead/maps/l4d_vs_hospital01_apartment.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 10')})"), 'left4dead/maps/l4d_vs_hospital02_subway.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 36')})"), 'left4dead/maps/l4d_vs_hospital03_sewers.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 22')})"), 'left4dead/maps/l4d_vs_hospital04_interior.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 32')})"), 'left4dead/maps/l4d_vs_hospital05_rooftop.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 65')})"), 'left4dead/maps/l4d_vs_smalltown01_caves.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 44')})"), 'left4dead/maps/l4d_vs_smalltown02_drainage.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 28')})"), 'left4dead/maps/l4d_vs_smalltown03_ranchhouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 67')})"), 'left4dead/maps/l4d_vs_smalltown04_mainstreet.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 32')})"), 'left4dead/maps/l4d_vs_smalltown05_houseboat.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 68')})"), 'left4dead/maps/lighthouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 54')})")} == {}[0m
[1m[31mE         Left contains 43 more items:[0m
[1m[31mE         {'left4dead/maps/background_lighthouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 30')})"),[0m
[1m[31mE          'left4dead/maps/backgroundstreet.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 67')})"),[0m
[1m[31mE          'left4dead/maps/l4d_airport01_greenhouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 35')})"),[0m
[1m[31mE          'left4dead/maps/l4d_airport02_offices.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 0')})"),[0m
[1m[31mE          'left4dead/maps/l4d_airport03_garage.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 10')})"),[0m
[1m[31mE          'left4dead/maps/l4d_airport04_terminal.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 17')})"),[0m
[1m[31mE          'left4dead/maps/l4d_airport05_runway.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 46')})"),[0m
[1m[31mE          'left4dead/maps/l4d_farm01_hilltop.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 12')})"),[0m
[1m[31mE          'left4dead/maps/l4d_farm02_traintunnel.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 13')})"),[0m
[1m[31mE          'left4dead/maps/l4d_farm03_bridge.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 54')})"),[0m
[1m[31mE          'left4dead/maps/l4d_farm04_barn.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 3')})"),[0m
[1m[31mE          'left4dead/maps/l4d_farm05_cornfield.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 47')})"),[0m
[1m[31mE          'left4dead/maps/l4d_hospital01_apartment.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 66')})"),[0m
[1m[31mE          'left4dead/maps/l4d_hospital02_subway.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 60')})"),[0m
[1m[31mE          'left4dead/maps/l4d_hospital03_sewers.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 25')})"),[0m
[1m[31mE          'left4dead/maps/l4d_hospital04_interior.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 32')})"),[0m
[1m[31mE          'left4dead/maps/l4d_hospital05_rooftop.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 59')})"),[0m
[1m[31mE          'left4dead/maps/l4d_smalltown01_caves.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 12')})"),[0m
[1m[31mE          'left4dead/maps/l4d_smalltown02_drainage.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 26')})"),[0m
[1m[31mE          'left4dead/maps/l4d_smalltown03_ranchhouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 4')})"),[0m
[1m[31mE          'left4dead/maps/l4d_smalltown04_mainstreet.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 67')})"),[0m
[1m[31mE          'left4dead/maps/l4d_smalltown05_houseboat.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 9')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_airport01_greenhouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 37')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_airport02_offices.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 68')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_airport03_garage.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 31')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_airport04_terminal.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 20')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_airport05_runway.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 25')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_farm01_hilltop.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 6')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_farm02_traintunnel.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 1')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_farm03_bridge.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 60')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_farm04_barn.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 68')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_farm05_cornfield.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 18')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_hospital01_apartment.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 10')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_hospital02_subway.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 36')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_hospital03_sewers.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 22')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_hospital04_interior.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 32')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_hospital05_rooftop.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 65')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_smalltown01_caves.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 44')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_smalltown02_drainage.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 28')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_smalltown03_ranchhouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 67')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_smalltown04_mainstreet.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 32')})"),[0m
[1m[31mE          'left4dead/maps/l4d_vs_smalltown05_houseboat.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 68')})"),[0m
[1m[31mE          'left4dead/maps/lighthouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 54')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  'left4dead/maps/background_lighthouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 30')})"),[0m
[1m[31mE         +  'left4dead/maps/backgroundstreet.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 67')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_airport01_greenhouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 35')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_airport02_offices.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 0')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_airport03_garage.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 10')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_airport04_terminal.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 17')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_airport05_runway.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 46')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_farm01_hilltop.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 12')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_farm02_traintunnel.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 13')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_farm03_bridge.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 54')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_farm04_barn.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 3')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_farm05_cornfield.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 47')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_hospital01_apartment.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 66')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_hospital02_subway.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 60')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_hospital03_sewers.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 25')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_hospital04_interior.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 32')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_hospital05_rooftop.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 59')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_smalltown01_caves.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 12')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_smalltown02_drainage.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 26')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_smalltown03_ranchhouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 4')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_smalltown04_mainstreet.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 67')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_smalltown05_houseboat.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 9')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_airport01_greenhouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 37')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_airport02_offices.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 68')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_airport03_garage.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 31')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_airport04_terminal.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 20')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_airport05_runway.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 25')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_farm01_hilltop.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 6')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_farm02_traintunnel.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 1')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_farm03_bridge.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 60')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_farm04_barn.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 68')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_farm05_cornfield.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 18')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_hospital01_apartment.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 10')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_hospital02_subway.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 36')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_hospital03_sewers.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 22')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_hospital04_interior.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 32')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_hospital05_rooftop.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 65')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_smalltown01_caves.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 44')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_smalltown02_drainage.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 28')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_smalltown03_ranchhouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 67')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_smalltown04_mainstreet.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 32')})"),[0m
[1m[31mE         +  'left4dead/maps/l4d_vs_smalltown05_houseboat.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 68')})"),[0m
[1m[31mE         +  'left4dead/maps/lighthouse.360.bsp': AssertionError("sprp v7\nassert 1 == 0\n +  where 1 = len({'sprp v7': AssertionError('Not enough bytes! Expected 71 got 54')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[31m[1m_______________ test_load_bsp[E:/Mod/X360-Portal2-map_dirs148] ________________[0m

group_path = 'E:/Mod/X360', game_name = 'Portal2', map_dirs = ['portal2/maps']

    [37m@pytest[39;49;00m.mark.parametrize([33m"[39;49;00m[33mgroup_path,game_name,map_dirs[39;49;00m[33m"[39;49;00m, [(*gps, ms) [94mfor[39;49;00m gps, ms [95min[39;49;00m maplist.installed_games.items()])[90m[39;49;00m
    [94mdef[39;49;00m [92mtest_load_bsp[39;49;00m(group_path, game_name, map_dirs):[90m[39;49;00m
    [90m    [39;49;00m[33m"""MEGATEST: 69GB+ of .bsp files!"""[39;49;00m[90m[39;49;00m
        [90m# TODO: clean up all the edge case conditions elsewhere[39;49;00m[90m[39;49;00m
        branch_script = game_scripts.get(game_name)  [90m# forcing branch to test each branch_script[39;49;00m[90m[39;49;00m
        [90m# TODO: move branch_script tests to another test and test auto-detect here instead[39;49;00m[90m[39;49;00m
        [90m# -- e.g. test_list = [(BspClass, branch_script, ["mapdir", ...]), ...][39;49;00m[90m[39;49;00m
        errors = [96mdict[39;49;00m()[90m[39;49;00m
        [90m# ^ {"map_dir/map_name.bsp": ["Error"]}[39;49;00m[90m[39;49;00m
        types = [96mset[39;49;00m()  [90m# printed on failure to aid in debugging[39;49;00m[90m[39;49;00m
        [90m# ^ {(BspClass, branch, version)}[39;49;00m[90m[39;49;00m
        total = [94m0[39;49;00m[90m[39;49;00m
        [94mfor[39;49;00m map_dir [95min[39;49;00m map_dirs:[90m[39;49;00m
            full_path = os.path.join(group_path, game_name, map_dir)[90m[39;49;00m
            [94mif[39;49;00m os.path.exists(full_path):[90m[39;49;00m
                files = os.listdir(full_path)[90m[39;49;00m
                maps = fnmatch.filter(files, [33m"[39;49;00m[33m*[Bb][Ss][Pp][39;49;00m[33m"[39;49;00m)  [90m# .bsp, .BSP & CoD2 .d3dbsp[39;49;00m[90m[39;49;00m
                maps = [m [94mfor[39;49;00m m [95min[39;49;00m maps [94mif[39;49;00m [33m"[39;49;00m[33m.[39;49;00m[33m"[39;49;00m [95min[39;49;00m m]  [90m# DDayNormandy bomba2bsp edge case[39;49;00m[90m[39;49;00m
                total += [96mlen[39;49;00m(maps)[90m[39;49;00m
                [94massert[39;49;00m [96mlen[39;49;00m(maps) != [94m0[39;49;00m, [33mf[39;49;00m[33m"[39;49;00m[33mcouldn[39;49;00m[33m'[39;49;00m[33mt find any maps for [39;49;00m[33m{[39;49;00mgame_name[33m}[39;49;00m[33m in [39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m"[39;49;00m[90m[39;49;00m
                [94mfor[39;49;00m m [95min[39;49;00m maps:  [90m# load every .bsp[39;49;00m[90m[39;49;00m
                    [94mtry[39;49;00m:[90m[39;49;00m
                        bsp_filename = os.path.join(full_path, m)[90m[39;49;00m
                        [94mif[39;49;00m os.path.getsize(bsp_filename) == [94m0[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# hl2/maps/d2_coast_02 is 0 bytes, idk why it shipped[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/episodic[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m == [33m"[39;49;00m[33mep1_citadel_00_demo.bsp[39;49;00m[33m"[39;49;00m:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL2:EP1 map (game crashes on load)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mhalf-life 2/hl1[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m ([33m"[39;49;00m[33mc4a1y.bsp[39;49;00m[33m"[39;49;00m, [33m"[39;49;00m[33mc4a1z.bsp[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# broken HL:Source maps (y is v18 and won't run, z is v19 and has broken IO)[39;49;00m[90m[39;49;00m
                        [94melif[39;49;00m game_name == [33m"[39;49;00m[33mDDayNormandy[39;49;00m[33m"[39;49;00m [95mand[39;49;00m m [95min[39;49;00m dday_mappack_excludes:[90m[39;49;00m
                            [94mcontinue[39;49;00m  [90m# maps probably tweaked in a text editor, all null bytes are spaces[39;49;00m[90m[39;49;00m
                        bsp = load_bsp(bsp_filename, branch_script)[90m[39;49;00m
                        bsp.file.close()  [90m# avoid OSError "Too many open files"[39;49;00m[90m[39;49;00m
                        bsp_id = (bsp.[91m__class__[39;49;00m.[91m__name__[39;49;00m, bsp.branch.[91m__name__[39;49;00m, bsp.bsp_version)  [90m# debug info[39;49;00m[90m[39;49;00m
                        loading_errors = [96mdict[39;49;00m()[90m[39;49;00m
                        [94mfor[39;49;00m lump_name, error [95min[39;49;00m bsp.loading_errors.items():[90m[39;49;00m
                            lump_version = [96mgetattr[39;49;00m(bsp.headers[lump_name], [33m"[39;49;00m[33mversion[39;49;00m[33m"[39;49;00m, [94mNone[39;49;00m)[90m[39;49;00m
                            [94mif[39;49;00m lump_version [95mis[39;49;00m [95mnot[39;49;00m [94mNone[39;49;00m:[90m[39;49;00m
                                loading_errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mlump_name[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mlump_version[33m}[39;49;00m[33m"[39;49;00m] = error[90m[39;49;00m
                            [94melse[39;49;00m:[90m[39;49;00m
                                loading_errors[lump_name] = error[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                       [94mfor[39;49;00m k, v [95min[39;49;00m bsp.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mif[39;49;00m [96mhasattr[39;49;00m(bsp, [33m"[39;49;00m[33mexternal[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                            [90m# TODO: actually read external SpecialLumpClasses lumps for a thorough check[39;49;00m[90m[39;49;00m
                            [90m# TODO: close any external lump files this opens to avoid OSError[39;49;00m[90m[39;49;00m
                            [90m# NOTE: if collecting external lumps for a BspClass w/o versions this will break[39;49;00m[90m[39;49;00m
                            loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v[90m[39;49;00m
                                                   [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.loading_errors.items()})[90m[39;49;00m
                            [94mif[39;49;00m [96mhasattr[39;49;00m(bsp.external, [33m"[39;49;00m[33mGAME_LUMP[39;49;00m[33m"[39;49;00m):[90m[39;49;00m
                                [94mif[39;49;00m [95mnot[39;49;00m [96misinstance[39;49;00m(bsp.external.GAME_LUMP, lumps.RawBspLump):  [90m# skip unmapped game lumps[39;49;00m[90m[39;49;00m
                                    loading_errors.update({[33mf[39;49;00m[33m"[39;49;00m[33mexternal.GAME_LUMP.[39;49;00m[33m{[39;49;00mk[33m}[39;49;00m[33m v[39;49;00m[33m{[39;49;00mbsp.external.GAME_LUMP.headers[k].version[33m}[39;49;00m[33m"[39;49;00m: v  [90m# noqa E501[39;49;00m[90m[39;49;00m
                                                           [94mfor[39;49;00m k, v [95min[39;49;00m bsp.external.GAME_LUMP.loading_errors.items()})[90m[39;49;00m
                        [94mdel[39;49;00m bsp  [90m# close all open files before pytest freezes locals() on assert[39;49;00m[90m[39;49;00m
                        [94massert[39;49;00m [96mlen[39;49;00m(loading_errors) == [94m0[39;49;00m, [33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m.join(loading_errors.keys())  [90m# pass loading_errors out[39;49;00m[90m[39;49;00m
                    [94mexcept[39;49;00m [96mNotImplementedError[39;49;00m [94mas[39;49;00m nie:[90m[39;49;00m
                        [90m# "DarkPlaces/maps/b_*.bsp" files are Quake .mdl with the .bsp extension[39;49;00m[90m[39;49;00m
                        [90m# https://www.gamers.org/dEngine/quake/spec/quake-spec32.html#CMDLF[39;49;00m[90m[39;49;00m
                        [90m# Quake stores pickup models as .bsp and renders them in a nested fashion[39;49;00m[90m[39;49;00m
                        [90m# so this is probably fine in Quake, but they still aren't .bsp files[39;49;00m[90m[39;49;00m
                        [94mif[39;49;00m [95mnot[39;49;00m (game_name == [33m"[39;49;00m[33mDarkPlaces[39;49;00m[33m"[39;49;00m [95mand[39;49;00m nie.args == ([33m"[39;49;00m[33mUnknown file_magic: b[39;49;00m[33m'[39;49;00m[33mIDPO[39;49;00m[33m'[39;49;00m[33m"[39;49;00m,)):[90m[39;49;00m
                            errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = nie[90m[39;49;00m
                    [94mexcept[39;49;00m [96mAssertionError[39;49;00m [94mas[39;49;00m ae:  [90m# should catch the `assert len(loading_errors) == ...` above[39;49;00m[90m[39;49;00m
                        errors[[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00mmap_dir[33m}[39;49;00m[33m/[39;49;00m[33m{[39;49;00mm[33m}[39;49;00m[33m"[39;49;00m] = ae[90m[39;49;00m
                        types.add(bsp_id)[90m[39;49;00m
>       [94massert[39;49;00m errors == [96mdict[39;49;00m(), [33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m.join([[33mf[39;49;00m[33m"[39;49;00m[33m{[39;49;00m[96mlen[39;49;00m(errors)[33m}[39;49;00m[33m out of [39;49;00m[33m{[39;49;00mtotal[33m}[39;49;00m[33m .bsps failed[39;49;00m[33m"[39;49;00m,[90m[39;49;00m
                                            *[96mmap[39;49;00m([96mstr[39;49;00m, types),  [90m# BspClass, branch_script, bsp_version[39;49;00m[90m[39;49;00m
                                            *{ln [94mfor[39;49;00m ae [95min[39;49;00m errors.values() [94mfor[39;49;00m ln [95min[39;49;00m ae.args[[94m0[39;49;00m].split([33m"[39;49;00m[33m\n[39;49;00m[33m"[39;49;00m)[[94m0[39;49;00m].split([33m"[39;49;00m[33m, [39;49;00m[33m"[39;49;00m)}])[90m[39;49;00m
[1m[31mE       AssertionError: 105 out of 105 .bsps failed[0m
[1m[31mE         ('ValveBsp', 'bsp_tool.branches.valve.sdk_2013_x360', 21)[0m
[1m[31mE         sprp v9[0m
[1m[31mE       assert {'portal2/maps/mp_coop_catapult_1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xdb\\xd05\\x92\\x01wx\\x04\\xba\\x1c\\x13\\xb3\\x13\\x05f\\xd8DV\\x01\\x81\\x05\\xab0.i\\x01x\\x08\\x01\\x01\\x02\\x02\\x90\\x0c\\x02\\x04\\x106\\xdf\\x01\\x01\\x9a ', 1, 2, 'invalid continuation byte')})"), 'portal2/maps/mp_coop_catapult_2.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03xl(\\xe8\\xff\\xa8\\x03i\\xb0\\x0b\\x047y\\x03\\xed\\xf0\'L\\xcf@\\x04\\x15<(\\xb0\\x01&0\\x01\\x01\\x01H\\xb8\\x0c\\x02\\x04\\x10!Y\\x01\\xdc", 4, 5, \'invalid continuation byte\')})'), 'portal2/maps/mp_coop_catapult_wall_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03b\\x98,\\xa9\\xeb\\x98\\x03O\\xe4\\x0f\\x91Q\\xc7\\x03\\xe5L$E\\xae\\xe0\\x04\\t\\x94) \\x01#\\xa8\\x01\\x01\\x01A|\\x0c\\x02\\x04\\x10\\x1fE\\x01\\xb9`', 2, 3, 'invalid start byte')})"), 'portal2/maps/mp_coop_come_along.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x02\\xab,"a\\xc1\\\\\\x02\\x9f\\xec\\x08G)\\xbb\\x03\\x17l\\x1f!\\xa4\\x036\\x90\\x1b\\\\\\xb7\\xa8\\x01\\x01\\x01\\n\\x84\\x0c\\x02\\x04\\x10\\x1aZ\\x01\\xae\\xa0\', 1, 2, \'invalid start byte\')})'), 'portal2/maps/mp_coop_credits.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'E\\xec\\x04D%DD\\x18\\xf0\\x03@M\\x98\\x06\\xbd)@TX\\x02^\\x11p\\x01\\x01\\x1bD\\x0c\\x02\\x04\\x10\\x05\\x96\\x01. ', 1, 2, 'invalid continuation byte')})"), 'portal2/maps/mp_coop_doors.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\x1e\\xa0!\\x1d\\xac\\xb0\\x02\\x17\\xa8\\x04P\\x13\\x01\\x02\\x89@\\x14\\xb7b\\xa0\\x02\\x9d\\xf8\\x17\\xe1\\x98p\\x01\\x01\\x8d\\xe8\\x0c\\x02\\x04\\x10\\x12\\x87\\x01j ', 2, 3, 'invalid start byte')})"), 'portal2/maps/mp_coop_fan.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\x98@?t\\x016\\xe0\\x03\\x89\\x14\\x0b\\xa8`S\\x04,\\xac!\\xa0\\x9b\\xa0\\x04NL\\x1c\\x13\\xdc\\xc8\\x01\\x01\\x01]\\x18\\x0c\\x02\\x04\\x10 R\\x01\\xa4', 1, 2, 'invalid start byte')})"), 'portal2/maps/mp_coop_fling_1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02H@\\x1eQ\\x9a\\xbc\\x02Ad\\x04\\xff\\x17\\x05\\x02\\xa9t\\x14Y\\xc0\\x02\\xbdt\\x19\\xdf\\xab\\xd8\\x01\\x01\\xc4H\\x0c\\x02\\x04\\x10\\x12\\x1c\\x01^\\xc0', 5, 6, 'invalid start byte')})"), 'portal2/maps/mp_coop_fling_3.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03T\\xe4&\\xa9\\xeb\\x80\\x03GD\\n\\x808D\\x03\\xc0x"\\xbd\\xba\\xa0\\x03\\xe38 \\x05\\xe4\\xf0\\x01\\x01\\x01a\\x90\\x0c\\x02\\x04\\x10\\x1d\\x08\\x01\\xc6\\xc0\', 2, 3, \'invalid continuation byte\')})'), 'portal2/maps/mp_coop_fling_crushers.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x02\\xd7\\xf0"\\xfc\\xd9\\x08\\x02\\xcaT\\t\\xe35\\xa2\\x03=@#6\\xb3\\x03`x\\x1b\\xf1\\xc3\\xc0\\x01\\x01\\xe7\\xe0\\x0c\\x02\\x04\\x10\\x1e\\x1a\\x01\\xc0\', 1, 2, \'invalid continuation byte\')})'), 'portal2/maps/mp_coop_infinifling_train.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x027d\\x1e\\x1c\\xa3h\\x02,\\x90\\x08B$3\\x02\\x95|\\x19Ov\\x02\\xae\\xcc\\x19\\xee\\xa9\\xe0\\x01\\x01\\xb5@\\x0c\\x02\\x04\\x10\\x16\\x8c\\x01}`', 5, 6, 'invalid start byte')})"), 'portal2/maps/mp_coop_laser_2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\x06\\x0c$\\xe4\\xf6\\x18\\x02\\xf1\\xfc\\x10cZ\\t\\x03i\\x1c)[\\xe1@\\x03\\x92x\\x1c\\xdd\\xd5x\\x01\\x01\\x01\\x1f\\xd0\\x0c\\x02\\x04\\x10!\\xf5\\x01\\xf0`', 4, 5, 'invalid continuation byte')})"), 'portal2/maps/mp_coop_laser_crusher.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03\\x1e&\\x87\\xeax\\x03\\x0c(\\x0e\\xc6Jr\\x03\\x86|"\\xb0\\xaf\\xc0\\x03\\xa9,\\x1c(\\xd0 \\x01\\x01\\x017\\xc8\\x0c\\x02\\x04\\x10\\x1d\\xee\\x01\\xb9\\x80\', 3, 4, \'invalid start byte\')})'), 'portal2/maps/mp_coop_lobby_2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x08b`p\\xcc\\x03%,\\x08\\x178Cx\\x02\\xf5\\x92\\t\\x9f`U\\xd9\\x01\\xed\\xc0\\t\\xf5<G\\x07\\x02\\x8d\\x10\\x01\\x01\\x03\\xd2$\\x0c\\x02\\x04\\x10I+\\x01\\x02\\x11@', 4, 5, 'invalid continuation byte')})"), 'portal2/maps/mp_coop_multifling_1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05X\\xc4A\\x82\\x01\\x97\\xa0\\x054\\xb4\\x1fR\\xd1t\\x06\\x0ed>\\xac\\x01R\\xe0\\x06M\\x103s\\x01\\x908\\x01\\x01\\x02F\\xc0\\x0c\\x02\\x04\\x103\\xbd\\x01\\x01e\\xc0', 2, 3, 'invalid continuation byte')})"), 'portal2/maps/mp_coop_paint_bridge.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x04\\x07(-|\\xfb\\xdc\\x03\\xd7d-\\x1c\\x01#k\\x04x\\xac,"\\xc7`\\x04\\xa4\\xd0 \\xfd\\x013\\xf8\\x01\\x01\\x01\\xf1@\\x0c\\x02\\x04\\x10\\\'\\x16\\x01\\xcf\', 5, 6, \'invalid start byte\')})'), 'portal2/maps/mp_coop_paint_come_along.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xf0\\xe4!\\x9b\\xa6h\\x02\\xd10\\x1dt\\x93\\xa7\\x03[\\x94\\x1f\\x1e\\x8c\\xa0\\x03z\\xb4\\x1a\\x1f\\xcc\\xc0\\x01\\x01\\x01h\\x98\\x0c\\x02\\x04\\x10\\x1b\\xb2\\x01\\x92\\xe0', 1, 2, 'invalid continuation byte')})"), 'portal2/maps/mp_coop_paint_longjump_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06\\x86\\x8c>\\xe4\\x01~D\\x06\\x0b\\xd8v\\x97\\x03^0\\x06\\xfd\\xe8NL\\x01_\\xe0\\x07L41\\xb6\\x01\\xd7`\\x01\\x01\\x03\\x17\\xa8\\x0c\\x02\\x04\\x10F\\x92\\x01\\x01k', 1, 2, 'invalid start byte')})"), 'portal2/maps/mp_coop_paint_redirect.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03i\\x80-\\xe0\\xde\\xfc\\x03M\\xe0\\x18\\x9a\\x9by\\x03\\xf2l&\\x12\\xb0\\xe0\\x04\\x18\\x80!\\xf3\\x01!\\xf8\\x01\\x01\\x01\\x928\\x0c\\x02\\x04\\x10!\\xe0\\x01\\xb9', 2, 3, 'invalid start byte')})"), 'portal2/maps/mp_coop_paint_red_racer.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03T|(\\xe2\\xcc$\\x03<\\xe8\\x14\\xc4\\xa0q\\x03\\xd2L"\\x1c\\x96`\\x03\\xf4h \\xf6\\x01\\x0cP\\x01\\x01\\x01\\xb3\\xd8\\x0c\\x02\\x04\\x10\\x1f\\x1d\\x01\\x9d`\', 4, 5, \'invalid continuation byte\')})'), 'portal2/maps/mp_coop_paint_speed_catch.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xda\\x08%*\\xb9\\xf4\\x02\\xc3D\\x14)~\\xf7\\x03L, \\x0e\\x98@\\x03l<\\x1e\\x0f\\xfb\\xb8\\x01\\x01\\x01]\\xd8\\x0c\\x02\\x04\\x10\\x1c/\\x01\\xa0\\x80', 1, 2, 'invalid continuation byte')})"), 'portal2/maps/mp_coop_paint_speed_fling.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\x9381\\x15\\x01\\x15 \\x04TH<+\\x01\\x9e\\xae\\x05\\x0c\\x8038\\xed`\\x05?\\xb8#\\xcf\\x01F\\x88\\x01\\x01\\x02L\\xbc\\x0c\\x02\\x04\\x10-\\x05\\x01\\xf6\\xc0', 1, 2, 'invalid start byte')})"), 'portal2/maps/mp_coop_paint_walljumps.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xb1,,z\\xe9\\xc4\\x03\\x91 \\x1dC\\xbaM\\x045\\xa0$\\x91\\xa6 \\x04Z4%\\xfb\\x01>`\\x01\\x01\\x01\\xaf0\\x0c\\x02\\x04\\x10 \\x86\\x01\\xae ', 1, 2, 'invalid start byte')})"), 'portal2/maps/mp_coop_race_2.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03Ml\'\\xd9\\x01\\x08\\x038P\\x11\\xc8q\\xa0\\x03\\xb3\\x14+\\xbd\\xed \\x03\\xde\\xd4\\x1fW\\xf3\\x90\\x01\\x01\\x015t\\x0c\\x02\\x04\\x10#\\xea\\x01\\xfa\\xa0", 4, 5, \'invalid continuation byte\')})'), 'portal2/maps/mp_coop_rat_maze.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\x11\\xa0\\x1e\\xba\\xact\\x02\\x08\\x98\\x06\\xe2 \\x8a\\x02e\\x90\\x16\\xe3l\\x80\\x02|t\\x17\\xe9\\xb0X\\x01\\x01\\x9fh\\x0c\\x02\\x04\\x10\\x14o\\x01r\\x80', 2, 3, 'invalid start byte')})"), 'portal2/maps/mp_coop_start.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x08m\\xe4^6\\x03l\\x08\\x17\\x0cM\\xe6\\x026\\xa0\\tH\\x10w\\xdd\\x02\\xd2\\xe0\\t\\xbf\\xf0Fj\\x02\\xa2\\xb8\\x01\\x01\\x03ih\\x0c\\x02\\x04\\x10]A\\x01\\x03\\x06', 2, 3, 'invalid continuation byte')})"), 'portal2/maps/mp_coop_tbeam_catch_grind_1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03a\\x08*\\x95\\x01\\xb0\\x03C\\xdc\\x19\\xad\\x8d}\\x03\\xd1\\xc4)\\x13\\xcb@\\x03\\xfa\\xd8\\x1d\\xa4\\xcf\\xd8\\x01\\x01\\x01u4\\x0c\\x02\\x04\\x10#\\xac\\x01\\xd7\\xc0', 4, 5, 'invalid start byte')})"), 'portal2/maps/mp_coop_tbeam_drill.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03o<.7\\x015\\xf0\\x03U\\xa4\\x16\\xb0\\x8au\\x03\\xe5\\x84\'\\xdf\\xdd@\\x04\\rd\\x1e\\xba\\xe7x\\x01\\x01\\x01z\\\\\\x0c\\x02\\x04\\x10!R\\x01\\xe8\\xa0", 7, 8, \'invalid continuation byte\')})'), 'portal2/maps/mp_coop_tbeam_end.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xd1\\x180T\\x01mX\\x04\\xb1h\\x1b\\x8c\\xac4\\x05!\\xc08e\\x01&\\xc0\\x05Z(\\x1d\\x17\\x01\\x0b\\xc0\\x01\\x01\\x02P\\xf4\\x0c\\x02\\x04\\x10.\\x96\\x01\\x017\\xe0', 1, 2, 'invalid continuation byte')})"), 'portal2/maps/mp_coop_tbeam_laser_1.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03E\\xc8,?\\x01\\n\\x10\\x03+\\x10\\x17\\xc9\\x90\\xb9\\x03\\xb6\\xc4\\\'\\x93\\xbe\\x03\\xdeX#\\x14\\x01\\x01\\x10\\x01\\x01\\x01>\\xc8\\x0c\\x02\\x04\\x10"\\xf5\\x01\\xc7@\', 2, 3, \'invalid continuation byte\')})'), 'portal2/maps/mp_coop_tbeam_maze.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03\\x99\\xb4/\\xab\\x01\\x0b\\xa8\\x03l\\x04)x\\xfat\\x04\\x15\\xb4,\\xe6\\xcd@\\x04B\\x9c%\\x9e\\x013 \\x01\\x01\\x01}8\\x0c\\x02\\x04\\x10\'\\xc5\\x01\\xd8\\xa0", 1, 2, \'invalid start byte\')})'), 'portal2/maps/mp_coop_tbeam_polarity.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xa3l$k\\xdb\\xf0\\x02\\x96$\\nd1_\\x03\\x0f\\xb0!\\x8e\\xb0 \\x031@\\x1b[\\xc4\\x08\\x01\\x01\\xdc\\xa4\\x0c\\x02\\x04\\x10\\x1bv\\x01\\xba`', 1, 2, 'invalid start byte')})"), 'portal2/maps/mp_coop_tbeam_polarity2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\x96|%\\x10\\xccH\\x02\\x8a\\xac\\t\\\\-F\\x03\\x03|\\x1a\\x89x`\\x03\\x1e\\x08\\x1a\\x83\\xaf\\xc8\\x01\\x01\\xdd$\\x0c\\x02\\x04\\x10\\x17\\x86\\x01\\x7f', 1, 2, 'invalid start byte')})"), 'portal2/maps/mp_coop_tbeam_polarity3.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x038\\xc4$=\\xdc\\\\\\x03$\\xb0\\x10\\xc8]"\\x03\\xaa8&\\xb5\\xc5`\\x03\\xd0\\xf0\\x1d\\r\\xcd\\x98\\x01\\x01\\x01^\\xd8\\x0c\\x02\\x04\\x10 \\xec\\x01\\xd0\\xe0\', 2, 3, \'invalid continuation byte\')})'), 'portal2/maps/mp_coop_tbeam_redirect.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\xab$0\\xa9\\x01A\\xfc\\x05P@X\\x0e\\x02HS\\x06\\x1c\\x806\\xf0\\x01 \\x06Sp\\x1f\\xa1\\xf6`\\x01\\x01\\x035,\\x0c\\x02\\x04\\x101V\\x01\\x01+ ', 1, 2, 'invalid start byte')})"), 'portal2/maps/mp_coop_teambts.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\xf1\\xac\\x0b\\xf8B<\\xeb\\xe0\\x03\\xaa\\x10\\xfb\\x01\\r\\xbc\\x0f=@`\\x01\\x1c\\xfc\\x0bDT\\xa8\\x01\\x01`\\xac\\x0c\\x02\\x04\\x10\\r\\xc5\\x01E@', 0, 2, 'invalid continuation byte')})"), 'portal2/maps/mp_coop_turret_ball.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04U\\xb84\\xff\\x01D\\x9c\\x047d\\x1aW\\x9eq\\x04\\xd9P0V\\x01\\x03\\xa0\\x05\\t\\xa8-s\\x01K\\xe0\\x01\\x01\\x01\\xee\\xf4\\x0c\\x02\\x04\\x10)\\xa1\\x01\\x01\\x12\\xc0', 2, 3, 'invalid start byte')})"), 'portal2/maps/mp_coop_turret_walls.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03~ /\\x06\\x01?\\xc8\\x03k\\x08\\x0fbQ)\\x03\\xf5\\xb0.\\xae\\x01\\x0f \\x04$`(\\xe4\\x01BP\\x01\\x01\\x01/|\\x0c\\x02\\x04\\x10$\\xab\\x01\\x01  ', 7, 8, 'invalid continuation byte')})"), 'portal2/maps/mp_coop_wall_2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x01\\xc5\\xf0\\x1e\\xea\\x8e\\xd4\\x01\\xc0T\\x03\\xbf\\x0e\\xaa\\x02(\\x84\\x0f\\x81A`\\x028\\x08\\x1d\\x97\\xc0\\xa8\\x01\\x01w\\x14\\x0c\\x02\\x04\\x10\\x0ec\\x01E\\xe0', 1, 2, 'invalid continuation byte')})"), 'portal2/maps/mp_coop_wall_5.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xa2,(U\\xf9<\\x02\\x90\\x18\\r\\xfcc\\x83\\x02\\xe5\\x80%i\\xb4`\\x03\\n\\xec\\x19\\xbb\\xf0\\xc0\\x01\\x01\\xee\\x9c\\x0c\\x02\\x04\\x10 \\xa2\\x01\\xc2 ', 1, 2, 'invalid start byte')})"), 'portal2/maps/mp_coop_wall_block.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xc4\\xac6\\x86\\x01\\xae\\xb0\\x03\\xabx\\x14\\xf7m\\xd4\\x04HP;\\x1d\\x01\\x96\\x04\\x83p++\\x01G`\\x01\\x01\\x01\\x0f\\xf0\\x0c\\x02\\x04\\x10-\\x19\\x01\\x01\\xae\\xa0', 4, 5, 'invalid start byte')})"), 'portal2/maps/mp_coop_wall_intro.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03\\xb8h2h\\x01"p\\x03\\xa5\\x08\\x0f\\xd1J\\xfa\\x048T+\\x15\\xde`\\x04cl+*\\x01V\\xd8\\x01\\x01\\x01Q\\x98\\x0c\\x02\\x04\\x10#q\\x01\\xeb\\x80\', 1, 2, \'invalid start byte\')})'), 'portal2/maps/sp_a1_intro1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\xc9 p\\xb0\\x02,\\xd4\\x05\\xb1(\\x13\\xdd\\x9d\\x90\\x06\\xeb\\xd84\\xca\\xef@\\x07 \\xa4Z\\xb0\\x01\\xfe0\\x01\\x01\\x02\\x18\\xf4\\x0c\\x02\\x04\\x100c\\x01\\xf9@', 1, 2, 'invalid continuation byte')})"), 'portal2/maps/sp_a1_intro2.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03O84\\xca\\xc3\\xcc\\x03FX\\x06\\xb1%\\xb1\\x04\\x0f\\x08\\x18\\x13i \\x04\'\\x1c,p\\xe7\\xc0\\x01\\x01\\x01\\x12\\x0c\\x0c\\x02\\x04\\x10\\x16\\xea\\x01o", 4, 5, \'invalid continuation byte\')})'), 'portal2/maps/sp_a1_intro3.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x05\\xf7\\xd4W\\x14\\x01f8\\x05\\xd5\\xb4\\x1d\\xe5\\xde\\x7f\\x07\'X86\\xff\\xc0\\x07_\\x90?\\xef\\x01\\x8d\\xb0\\x01\\x01\\x01\\xff\\x94\\x0c\\x02\\x04\\x104&\\x01\\x01\\x0b", 1, 2, \'invalid start byte\')})'), 'portal2/maps/sp_a1_intro4.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05e\\xa4jr\\x01t$\\x05?\\xe4!\\\\\\x01\\x0f\\xeb\\x06\\x95<6n\\xf1\\xa0\\x06\\xcb\\xac5&\\x01B\\x08\\x01\\x01\\x01\\x9a\\xa8\\x0c\\x02\\x04\\x102\\xcd\\x01\\xfe', 2, 3, 'invalid start byte')})"), 'portal2/maps/sp_a1_intro5.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03\\xcc\\xfc5t\\xdf\\x98\\x03\\xb5|\\x14\\xb2\\x94\'\\x04\\x87\\xa4$d\\xa6 \\x04\\xac\\x08.b\\x01\\x01X\\x01\\x01\\x01\\x84\\x14\\x0c\\x02\\x04\\x10!\\x89\\x01\\xae\\xe0", 1, 2, \'invalid continuation byte\')})'), 'portal2/maps/sp_a1_intro6.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\x0e\\x14B;\\x01A\\xe4\\x04\\xf6x\\x14\\x0c|^\\x05\\xfd\\x18/,\\xee@\\x06,D.0\\x01\\x1b\\xc8\\x01\\x01\\x01\\xd9\\x8c\\x0c\\x02\\x04\\x10(\\x93\\x01\\xfb\\x80', 7, 8, 'invalid continuation byte')})"), 'portal2/maps/sp_a1_intro7.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04w\\xd4K\\xa8\\x01/\\xf0\\x04S\\x94 9\\xf6s\\x05`\\x90/;\\xd6\\xe0\\x05\\x8f\\xcc7F\\x014\\xd0\\x01\\x01\\x01\\x95L\\x0c\\x02\\x04\\x10+\\xdd\\x01\\xe1\\xc0', 2, 3, 'invalid continuation byte')})"), 'portal2/maps/sp_a1_wakeup.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xfb4I\\x88\\x01 `\\x03\\xe1\\xbc\\x14\\xff\\x9f*\\x04\\xbch*^\\xbe \\x04\\xe6\\xc84\\xb7\\x013 \\x01\\x01\\x01#\\xc4\\x0c\\x02\\x04\\x10+\\xa9\\x01\\xc7\\xc0', 1, 2, 'invalid start byte')})"), 'portal2/maps/sp_a2_bridge_intro.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x04r\\xcc:\\xb3\\x01\\x1b\\xc8\\x04Yp\\x15\\xc3\\x94\\xcd\\x05,\\xfc-\\xee\\xec\\x05Z\\xec.\\xb4\\x011\\xb8\\x01\\x01\\x01\\xb7\\\\\\x0c\\x02\\x04\\x10\'E\\x01\\xf9`", 2, 3, \'invalid continuation byte\')})'), 'portal2/maps/sp_a2_bridge_the_gap.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xa3d9F\\x01-\\x8c\\x04\\x8e\\x04\\x10\\xa5S\\x17\\x05PX/\\xd9\\xed\\xe0\\x05\\x804/]\\x01I\\xa0\\x01\\x01\\x01\\xce\\x88\\x0c\\x02\\x04\\x10(\\xc7\\x01\\xfd\\xa0', 1, 2, 'invalid start byte')})"), 'portal2/maps/sp_a2_bts1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x058\\xe0B\\xc3\\x01\\xd0\\xb8\\x05\\x02l/\\xcb\\x01\\r\\xc5\\x05\\xe6\\xfcT\\xaa\\x01\\xd2@\\x06;\\xa8\\x1f\\xf1\\x01\\x07\\x88\\x01\\x01\\x02+|\\x0c\\x02\\x04\\x10D\\xee\\x01\\x01\\xf3 ', 2, 3, 'invalid continuation byte')})"), 'portal2/maps/sp_a2_bts2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02e\\xc4\\x1c#\\xee\\xd4\\x02M\\x1c\\x13\\x07\\x7f@\\x02\\x91\\xac8w\\x01;\\xa0\\x02\\xca$\\x10W\\x98p\\x01\\x01\\x01/\\x1c\\x0c\\x02\\x04\\x100\\xaa\\x01\\x01V\\xc0', 2, 3, 'invalid continuation byte')})"), 'portal2/maps/sp_a2_bts3.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xe7\\x981W\\x01E \\x03\\xcb\\xc8\\x15\\x9c\\xa9\\x87\\x049\\xa4B\\xbb\\x014\\xa0\\x04|`\\x1c\\x8b\\x01&\\xc0\\x01\\x01\\x01\\x8c\\xec\\x0c\\x02\\x04\\x10:\\x1a\\x01\\x01F`', 1, 3, 'invalid continuation byte')})"), 'portal2/maps/sp_a2_bts4.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\x1f\\x800s\\x0138\\x03\\xfb\\xe0\\x1cv\\xb8\\\\\\x04\\x90\\x84?\\xaf\\x01\\x1b`\\x04\\xd04\\x1f\\xd3\\x01,\\xa8\\x01\\x01\\x01\\xc9\\x88\\x0c\\x02\\x04\\x109\\xf6\\x01\\x01/ ', 2, 3, 'invalid start byte')})"), 'portal2/maps/sp_a2_bts5.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02` \\x1dk\\xa2\\x84\\x02Jp\\x12\\x0cr\\x89\\x02\\x98\\xf4#\\x14\\x9b\\x80\\x02\\xbc\\x08\\x11\\x0e}\\xb8\\x01\\x01\\x01\\x1c\\xac\\x0c\\x02\\x04\\x10 \\x19\\x01\\xa5@', 5, 6, 'invalid start byte')})"), 'portal2/maps/sp_a2_bts6.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03Yh)\\x95\\x01$\\x80\\x037\\x9c!#\\xbb\\xf4\\x03\\x8bX \\x18\\x84 \\x03\\xabp\\r\\x8a\\x92@\\x01\\x01\\x01\\xd5\\\\\\x0c\\x02\\x04\\x10\\x1e\\x07\\x01\\x85@', 4, 5, 'invalid start byte')})"), 'portal2/maps/sp_a2_catapult_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xfd\\x90>h\\x01\\x1c4\\x03\\xe9\\xb4\\x0fVU\\xd7\\x04\\xc9\\x840s\\xfc\\xe0\\x04\\xf9\\xf82W\\x01A0\\x01\\x01\\x01d\\x1c\\x0c\\x02\\x04\\x10)\\xf1\\x01\\x01\\x11@', 1, 2, 'invalid start byte')})"), 'portal2/maps/sp_a2_column_blocker.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xba\\xc0B\\x94\\x01y\\xe8\\x04\\x9dl\\x19\\x0b\\xcb\\xd5\\x05c\\xbc<\\xe2\\x014\\x05\\xa0\\xa0/\\xcd\\x01U(\\x01\\x01\\x01\\xddP\\x0c\\x02\\x04\\x103W\\x01\\x01D ', 1, 2, 'invalid start byte')})"), 'portal2/maps/sp_a2_core.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06HZS\\x01\\x92\\x05\\xcc\\xec*\\x94\\x01L\\x99\\x07(\\x84Q\\t\\x01\\xa3 \\x07y\\x90!\\xa7\\x01\\x1cX\\x01\\x01\\x035\\xb4\\x0c\\x02\\x04\\x10H_\\x01\\x01\\xc7 ', 5, 6, 'invalid start byte')})"), 'portal2/maps/sp_a2_dual_lasers.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xeb\\xf8;i\\xe8\\xbc\\x03\\xd9\\x18\\x0fhP^\\x04\\xc5\\xb0&\\xb5\\xb1\\xc0\\x04\\xech3,\\x01&\\xc0\\x01\\x01\\x01k\\xcc\\x0c\\x02\\x04\\x10#z\\x01\\xbc\\xe0', 1, 2, 'invalid continuation byte')})"), 'portal2/maps/sp_a2_fizzler_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xb8\\xbc.\\xf3\\xc7D\\x02\\xae\\xa0\\x076%6\\x03_\\x9c\\x1d\\x87\\x8f@\\x03}$)\\x83\\xed`\\x01\\x01\\xbd\\xa4\\x0c\\x02\\x04\\x10\\x19\\xb0\\x01\\x99\\xa0', 1, 2, 'invalid start byte')})"), 'portal2/maps/sp_a2_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06\\xe2\\xa4X\\xbf\\x01\\x8a\\xb0\\x06\\xa1\\xf09\\xe3\\x01s\\xc0\\x07\\xc9\\x84S\\xff\\x01j \\x08\\x1d\\x84:\\x8a\\x01\\x9e\\xd8\\x01\\x01\\x02\\xe3,\\x0c\\x02\\x04\\x10N\\x1f\\x01\\x01y\\xe0', 1, 3, 'invalid continuation byte')})"), 'portal2/maps/sp_a2_laser_chaining.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03c\\xf83\\x13\\x01\\x1d$\\x03Tl\\x0b\\xd1G\\xa0\\x04\\x0bD*\\x8f\\xeb@\\x045\\xd4*\\x15\\x014@\\x01\\x01\\xed\\x04\\x0c\\x02\\x04\\x10#o\\x01\\xfb ', 2, 3, 'invalid start byte')})"), 'portal2/maps/sp_a2_laser_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\x05\\xe4;\\x95\\xd8\\xe4\\x03\\xf1\\x88\\x11\\x9ejz\\x04\\xd3\\x9c$\\xad\\xa1\\x80\\x04\\xf8L0A\\x01\\x08`\\x01\\x01\\x01\\xae\\x94\\x0c\\x02\\x04\\x10!\\xce\\x01\\xa8\\xc0', 2, 3, 'invalid continuation byte')})"), 'portal2/maps/sp_a2_laser_over_goo.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03u\\xdc1\\r\\xdd\\xb8\\x03h,\\t&/\\xc6\\x04.d&y\\xb9\\xc0\\x04T\\xe0.\\x07\\x01\\x15\\xe0\\x01\\x01\\x01$T\\x0c\\x02\\x04\\x10"\\xc7\\x01\\xc9@\', 2, 3, \'invalid continuation byte\')})'), 'portal2/maps/sp_a2_laser_relays.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xfe\\xb81}\\x01\\x05\\x90\\x02\\xeb4\\x0f\\\\f\\xc6\\x03\\x990*\\x9d\\xe3\\xc0\\x03\\xc3\\xd0$\\xa9\\xf5@\\x01\\x01\\xe8D\\x0c\\x02\\x04\\x10#\\x9e\\x01\\xf6\\xe0', 1, 2, 'invalid start byte')})"), 'portal2/maps/sp_a2_laser_stairs.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x04\\xb1\\xe0J"\\x01;\\x04\\x98\\x0c\\x15wsC\\x05\\x9d\\xc4-\\x82\\xd8\\x80\\x05\\xcbH:A\\x01\\x84h\\x01\\x01\\x01\\xd1\\\\\\x0c\\x02\\x04\\x10(\\xf5\\x01\\xe8@\', 1, 2, \'invalid start byte\')})'), 'portal2/maps/sp_a2_laser_vs_turret.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xc8\\xf80\\xeb\\xe2\\xc8\\x03\\xb6\\xdc\\x0e\\xefU\\xf9\\x04s\\x94$\\xad\\xac\\xa0\\x04\\x98D+\\xb8\\x01\\x12\\xc8\\x01\\x01\\x01\\x80(\\x0c\\x02\\x04\\x10 \\xad\\x01\\xb6`', 1, 2, 'invalid continuation byte')})"), 'portal2/maps/sp_a2_pit_flings.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05d0B\\x9b\\x011|\\x05OL\\x0e\\x81XJ\\x06B\\x986\\xe8\\x01\\x01@\\x06y\\x803W\\x01_\\x90\\x01\\x01\\x02hT\\x0c\\x02\\x04\\x100M\\x01\\x01\\x14\\xc0', 4, 5, 'invalid start byte')})"), 'portal2/maps/sp_a2_pull_the_rug.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04d\\x10N\\xe0\\x01;\\xcc\\x04N,\\x11bb_\\x05]T.`\\xf3\\x80\\x05\\x8b\\xb4B,\\x01x\\xe0\\x01\\x01\\x01\\x81L\\x0c\\x02\\x04\\x10)\\x85\\x01\\x01\\x05\\x80', 4, 5, 'invalid continuation byte')})"), 'portal2/maps/sp_a2_ricochet.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xd4DE\\x12\\x01M`\\x04\\xb2\\xb0\\x1b\\xff\\xca\\xaa\\x05\\xa8<5o\\xfd\\x05\\xdd\\xac5p\\x01c\\xc8\\x01\\x01\\x01\\xc9\\x14\\x0c\\x02\\x04\\x100O\\x01\\x01\\x0f', 1, 2, 'invalid continuation byte')})"), 'portal2/maps/sp_a2_sphere_peek.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\x8cD>\\xad\\x01C|\\x04q\\x04\\x16Wk\\xc5\\x05V\\xd07\\x95\\x01,@\\x05\\x8eh1 \\x01[\\xe8\\x01\\x01\\x01\\xb08\\x0c\\x02\\x04\\x10.\\xef\\x01\\x01@ ', 1, 2, 'invalid start byte')})"), 'portal2/maps/sp_a2_triple_laser.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x02*$"\\xf3\\xa3\\x98\\x02"\\xe0\\x05k\\x16s\\x02\\xc6\\xd8\\x15\\x17h\\x02\\xdb\\xf0\\x1d\\xf8\\xad@\\x01\\x01u\\xbc\\x0c\\x02\\x04\\x10\\x12\\xf4\\x01n`\', 4, 7, \'invalid continuation byte\')})'), 'portal2/maps/sp_a2_trust_fling.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\x8b\\xe4?*\\x01jX\\x05c\\x8c!\\xfd\\xf3\\xd6\\x06PdC\\xfb\\x01`\\x80\\x06\\x94`6I\\x01\\x83\\x90\\x01\\x01\\x02`@\\x0c\\x02\\x04\\x108\\x89\\x01\\x01{ ', 1, 2, 'invalid start byte')})"), 'portal2/maps/sp_a2_turret_blocker.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\x07\\xdc1\\xfb\\xf3<\\x03\\xf6\\x10\\x0e\\xa7SL\\x04\\xaed%Y\\xba`\\x04\\xd3\\xc0+{\\x01\\x07\\xd0\\x01\\x01\\x01\\xb8\\x1c\\x0c\\x02\\x04\\x10 \\x10\\x01\\xc5`', 2, 3, 'invalid continuation byte')})"), 'portal2/maps/sp_a2_turret_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03`\\xf86v\\xe8\\\\\\x03T\\x8c\\t\\xc6*\\xb6\\x04\\x18|\\x1e\\x80\\x97\\x046\\xfc/r\\x01#\\xf0\\x01\\x01\\x01\\t\\x88\\x0c\\x02\\x04\\x10\\x1b\\xa4\\x01\\xa0 ', 2, 3, 'invalid start byte')})"), 'portal2/maps/sp_a3_00.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xb6|)\\xdd', 1, 2, 'invalid start byte')})"), 'portal2/maps/sp_a3_01.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x08r4v\\xd9\\x01\\x99\\xe0\\x08\\x0b\\xc8`\\xe3\\x03\\r\\xbd\\t\\xb7\\xb0FC\\x01^\\xa0\\t\\xfd\\xf4V\\xbd\\x01\\xf8\\x90\\x01\\x01\\x04(|\\x0c\\x02\\x04\\x10B\\xe2\\x01\\x01o\\xe0', 4, 5, 'invalid continuation byte')})"), 'portal2/maps/sp_a3_03.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05}\\x8cL\\xcb\\x01\\x86\\xf0\\x05>t6e\\x02(\\xc7\\x06?\\x0cG\\x14\\x01P\\x80\\x06\\x86 ,\\xbc\\x01\\\\0\\x01\\x01\\x0208\\x0c\\x02\\x04\\x10?\\xbe\\x01\\x01f@', 2, 3, 'invalid start byte')})"), 'portal2/maps/sp_a3_bomb_flings.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\x19\\xf8/\\xaf\\xb6\\xa0\\x03\\x03\\x98\\x14\\x17\\x848\\x03\\x94\\xc0\\x1d\\x81~\\xc0\\x03\\xb2D$\\xa0\\x01%\\xe8\\x01\\x01\\x01O@\\x0c\\x02\\x04\\x10\\x1b\\xa0\\x01\\x84', 2, 3, 'invalid start byte')})"), 'portal2/maps/sp_a3_crazy_box.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04Q\\xd0(\\x17\\xd7p\\x044\\x84\\x17\\xba\\xa4\\x9c\\x04\\xa7\\x9c2L\\xe2\\x04\\xd9\\xe8\\x1bw\\xf8X\\x01\\x01\\x02{D\\x0c\\x02\\x04\\x10,D\\x01\\xf2`', 2, 3, 'invalid continuation byte')})"), 'portal2/maps/sp_a3_end.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x07;dm\\x93\\x01\\xe5X\\x07\\x13\\xa4 \\xfd\\x01V\\x16\\x08\\x85\\\\C\\xfa\\x01F\\xe0\\x08\\xc9X=\\xe1\\x01\\xd4\\x90\\x01\\x01\\x03\\x88\\x14\\x0c\\x02\\x04\\x10<\\x87\\x01\\x01Y\\xc0', 4, 5, 'invalid start byte')})"), 'portal2/maps/sp_a3_jump_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\x16\\x1876\\x01%4\\x04\\xd5\\xa4<7\\x01\\xa9_\\x05\\x8e\\x04=\\xf7\\x01\\x1d\\xe0\\x05\\xcb\\xfc,\\x13\\x01\\x89\\xc0\\x01\\x01\\x02\\x8c\\x10\\x0c\\x02\\x04\\x108\\x80\\x01\\x01(\\xc0', 14, 15, 'invalid start byte')})"), 'portal2/maps/sp_a3_portal_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\t\\xc4\\x04gc\\x02X\\x0c\\tY<b\\xe4\\x03\\x90\\x08\\n\\x968X\\x9e\\x01\\x93@\\n\\xee\\xd8NS\\x02\\x8b`\\x01\\x01\\x04\\xb9(\\x0c\\x02\\x04\\x10R\\x92\\x01\\x01\\xa9\\xe0', 1, 2, 'invalid continuation byte')})"), 'portal2/maps/sp_a3_speed_flings.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02!L#\\x98\\xbe\\xd4\\x02\\x1d`\\x01*\\x0b|\\x02q\\\\\\x11\\xd1N`\\x02\\x830\\x1a\\xc7\\xcb\\xe8\\x01\\x01\\xc0,\\x0c\\x02\\x04\\x10\\x10\\xa7\\x01T`', 4, 5, 'invalid start byte')})"), 'portal2/maps/sp_a3_speed_ramp.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04|\\x84.~\\xdf\\x98\\x04\\x1b\\xd4]>\\x02\\x83\\xe1\\x04\\xe8\\xb42O\\xe2\\xc0\\x05\\x1b\\x04,\\xf8\\x01q\\xd8\\x01\\x01\\x02=\\xec\\x0c\\x02\\x04\\x10/)\\x01\\xea\\xc0', 2, 3, 'invalid start byte')})"), 'portal2/maps/sp_a3_transition01.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x07\\xff8TD\\x01\\x89\\x07\\xba\\xc4=\\xe6\\x01\\xca\\x9b\\x08\\xd9\\xe8A\\xd9\\x013`\\t\\x1b\\xc4-q\\x01\\x81\\x08\\x01\\x01\\x04v\\x18\\x0c\\x02\\x04\\x10<\\xce\\x01\\x01C ', 1, 2, 'invalid start byte')})"), 'portal2/maps/sp_a4_finale1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xae\\x0cEd\\x01r\\\\\\x04\\x89\\xf4\\x1e@\\xce\\x92\\x05lLEZ\\x01Q\\xc0\\x05\\xb1\\xa84\\x1a\\x01Q\\xc8\\x01\\x01\\x01\\xf1X\\x0c\\x02\\x04\\x10;\\xd6\\x01\\x01c\\xc0', 1, 2, 'invalid start byte')})"), 'portal2/maps/sp_a4_finale2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06\\x05\\xd4>\\x9e\\x01\\x97p\\x05\\xdeD\\x1f\\xeb\\xba\\xa9\\x06\\x96V*\\x01\\xb4\\xc0\\x06\\xec,%\\xdb\\x01?\\xc8\\x01\\x01\\x0308\\x0c\\x02\\x04\\x10I\\xad\\x01\\x01\\xd0\\xe0', 2, 3, 'invalid continuation byte')})"), 'portal2/maps/sp_a4_finale3.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x05t\\xd4G\'\\x01\\xbaD\\x05=H1m\\x01\\xa9\\xcb\\x05\\xf2`O\\xbd\\x01x\\xc0\\x06B -\\x83\\x01\\x9cP\\x01\\x01\\x02al\\x0c\\x02\\x04\\x10Ed\\x01\\x01\\x8c@", 2, 3, \'invalid continuation byte\')})'), 'portal2/maps/sp_a4_finale4.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\xc2T\\x9c\\xf3\\x01\\xfap\\x05\\xac\\x90\\x10\\x16\\x98k\\x06\\xfd`@T\\x019 \\x07=\\xb4?\\x9e\\x01X\\x88\\x01\\x01\\x02l\\xfc\\x0c\\x02\\x04\\x1098\\x01\\x01M ', 1, 2, 'invalid continuation byte')})"), 'portal2/maps/sp_a4_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06\\x85\\x9c]Z\\x02%\\xfc\\x06M\\x942\\xf1\\x01\\x183\\x07lXF\\xec\\x01m\\x80\\x07\\xb3D1\\x18\\x01j\\xd0\\x01\\x01\\x02\\xb1\\x1c\\x0c\\x02\\x04\\x10:X\\x01\\x01\\x82 ', 1, 2, 'invalid start byte')})"), 'portal2/maps/sp_a4_jump_polarity.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x08\\xb9\\x8c_F\\x01\\xff\\xe0\\x08: {\\r\\x03[\\xf3\\t\\xb0\\x90Y}\\x01\\xb9`\\n\\n\\x1076\\x01i\\xb0\\x01\\x01\\x04e8\\x0c\\x02\\x04\\x10Ph\\x01\\x01\\xc8', 1, 2, 'invalid start byte')})"), 'portal2/maps/sp_a4_laser_catapult.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06l,mx\\x01\\xf4d\\x065\\xac2\\n\\xf6\\n\\x07\\x81\\x98@\\xad\\x01:@\\x07\\xc2H;\\xd9\\x01]\\xe0\\x01\\x01\\x02\\xe6t\\x0c\\x02\\x04\\x109\\\\\\x01\\x01I ', 6, 7, 'invalid continuation byte')})"), 'portal2/maps/sp_a4_laser_platform.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\x83@`\\xf2\\x02\\x16\\x90\\x05c\\x08\\x1b\\x11\\xa2\\x88\\x06`\\xb4C\\x17\\x01F\\x80\\x06\\xa3\\xcc.N\\x013\\xb0\\x01\\x01\\x02\\xa3(\\x0c\\x02\\x04\\x10;(\\x01\\x01W\\x80', 1, 2, 'invalid start byte')})"), 'portal2/maps/sp_a4_speed_tb_catch.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04h4<\\x9a\\x01`\\x98\\x04C\\x88 @\\xd2\\xe3\\x04\\xf8\\x18>\\xff\\x010\\xe0\\x057\\x18\\x1f/\\xf8X\\x01\\x01\\x01\\xa5\\xc8\\x0c\\x02\\x04\\x105s\\x01\\x01>\\xe0', 4, 5, 'invalid start byte')})"), 'portal2/maps/sp_a4_stop_the_box.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x04G\\x883#\\x01-\\\\\\x041,\\x11\\xbad)\\x04\\xe8,5T\\x01+\\xa0\\x05\\x1d\\x80\'t\\x01\\x07\\x88\\x01\\x01\\x01\\xced\\x0c\\x02\\x04\\x10*?\\x01\\x01>\\xa0", 2, 3, \'invalid start byte\')})'), 'portal2/maps/sp_a4_tb_catch.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xc2,@\\x84\\x01:d\\x04\\xaax\\x13\\xee\\x88\\xb1\\x05v\\x08/\\xc4\\xe3\\x05\\xa5\\xcc1d\\x01W \\x01\\x01\\x01\\xb8\\xd8\\x0c\\x02\\x04\\x10)S\\x01\\xee ', 1, 2, 'invalid continuation byte')})"), 'portal2/maps/sp_a4_tb_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xdd8,W\\xfb\\xb8\\x02\\xd4\\xdc\\x04\\x96\\x11\\xe1\\x03xH#\\xab\\xdb`\\x03\\x9b\\xf4#O\\xdb\\xa8\\x01\\x01\\xb34\\x0c\\x02\\x04\\x10\\x1c,\\x01\\xed', 1, 2, 'invalid continuation byte')})"), 'portal2/maps/sp_a4_tb_polarity.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\x08dB\\x9e\\x01b`\\x04\\xd5\\x88/9\\x01/G\\x05\\xb5\\xd468\\x01\\x14`\\x05\\xec\\x0c+D\\x01$\\x80\\x01\\x01\\x02Ht\\x0c\\x02\\x04\\x10/\\xfe\\x01\\x01 \\xa0', 4, 5, 'invalid start byte')})"), 'portal2/maps/sp_a4_tb_trust_drop.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x04\\xf4\\xe8=\\x97\\x01]\\x14\\x04\\xc2\\xa4.\\xa5\\x011\\xb2\\x05\\xa2x9\\xa7\\x015\\xe0\\x05\\xdc +\'\\x01BP\\x01\\x01\\x02A\\xbc\\x0c\\x02\\x04\\x100\\xd2\\x01\\x01D ", 1, 2, \'invalid continuation byte\')})'), 'portal2/maps/sp_a4_tb_wall_button.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x04\\x90\\xd4<\\x18\\x01,H\\x04~$\\r\\xd8V\\xdd\\x05ND<\\x05\\x01%\\xe0\\x05\\x8aL-\'\\x015`\\x01\\x01\\x01\\xdf\\x84\\x0c\\x02\\x04\\x102D\\x01\\x014\\xc0", 1, 2, \'invalid start byte\')})'), 'portal2/maps/sp_a5_credits.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x0b\\xf4R', 1, 2, 'invalid continuation byte')})")} == {}[0m
[1m[31mE         Left contains 105 more items:[0m
[1m[31mE         {'portal2/maps/mp_coop_catapult_1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xdb\\xd05\\x92\\x01wx\\x04\\xba\\x1c\\x13\\xb3\\x13\\x05f\\xd8DV\\x01\\x81\\x05\\xab0.i\\x01x\\x08\\x01\\x01\\x02\\x02\\x90\\x0c\\x02\\x04\\x106\\xdf\\x01\\x01\\x9a ', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_catapult_2.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03xl(\\xe8\\xff\\xa8\\x03i\\xb0\\x0b\\x047y\\x03\\xed\\xf0\'L\\xcf@\\x04\\x15<(\\xb0\\x01&0\\x01\\x01\\x01H\\xb8\\x0c\\x02\\x04\\x10!Y\\x01\\xdc", 4, 5, \'invalid continuation byte\')})'),[0m
[1m[31mE          'portal2/maps/mp_coop_catapult_wall_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03b\\x98,\\xa9\\xeb\\x98\\x03O\\xe4\\x0f\\x91Q\\xc7\\x03\\xe5L$E\\xae\\xe0\\x04\\t\\x94) \\x01#\\xa8\\x01\\x01\\x01A|\\x0c\\x02\\x04\\x10\\x1fE\\x01\\xb9`', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_come_along.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x02\\xab,"a\\xc1\\\\\\x02\\x9f\\xec\\x08G)\\xbb\\x03\\x17l\\x1f!\\xa4\\x036\\x90\\x1b\\\\\\xb7\\xa8\\x01\\x01\\x01\\n\\x84\\x0c\\x02\\x04\\x10\\x1aZ\\x01\\xae\\xa0\', 1, 2, \'invalid start byte\')})'),[0m
[1m[31mE          'portal2/maps/mp_coop_credits.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'E\\xec\\x04D%DD\\x18\\xf0\\x03@M\\x98\\x06\\xbd)@TX\\x02^\\x11p\\x01\\x01\\x1bD\\x0c\\x02\\x04\\x10\\x05\\x96\\x01. ', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_doors.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\x1e\\xa0!\\x1d\\xac\\xb0\\x02\\x17\\xa8\\x04P\\x13\\x01\\x02\\x89@\\x14\\xb7b\\xa0\\x02\\x9d\\xf8\\x17\\xe1\\x98p\\x01\\x01\\x8d\\xe8\\x0c\\x02\\x04\\x10\\x12\\x87\\x01j ', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_fan.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\x98@?t\\x016\\xe0\\x03\\x89\\x14\\x0b\\xa8`S\\x04,\\xac!\\xa0\\x9b\\xa0\\x04NL\\x1c\\x13\\xdc\\xc8\\x01\\x01\\x01]\\x18\\x0c\\x02\\x04\\x10 R\\x01\\xa4', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_fling_1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02H@\\x1eQ\\x9a\\xbc\\x02Ad\\x04\\xff\\x17\\x05\\x02\\xa9t\\x14Y\\xc0\\x02\\xbdt\\x19\\xdf\\xab\\xd8\\x01\\x01\\xc4H\\x0c\\x02\\x04\\x10\\x12\\x1c\\x01^\\xc0', 5, 6, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_fling_3.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03T\\xe4&\\xa9\\xeb\\x80\\x03GD\\n\\x808D\\x03\\xc0x"\\xbd\\xba\\xa0\\x03\\xe38 \\x05\\xe4\\xf0\\x01\\x01\\x01a\\x90\\x0c\\x02\\x04\\x10\\x1d\\x08\\x01\\xc6\\xc0\', 2, 3, \'invalid continuation byte\')})'),[0m
[1m[31mE          'portal2/maps/mp_coop_fling_crushers.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x02\\xd7\\xf0"\\xfc\\xd9\\x08\\x02\\xcaT\\t\\xe35\\xa2\\x03=@#6\\xb3\\x03`x\\x1b\\xf1\\xc3\\xc0\\x01\\x01\\xe7\\xe0\\x0c\\x02\\x04\\x10\\x1e\\x1a\\x01\\xc0\', 1, 2, \'invalid continuation byte\')})'),[0m
[1m[31mE          'portal2/maps/mp_coop_infinifling_train.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x027d\\x1e\\x1c\\xa3h\\x02,\\x90\\x08B$3\\x02\\x95|\\x19Ov\\x02\\xae\\xcc\\x19\\xee\\xa9\\xe0\\x01\\x01\\xb5@\\x0c\\x02\\x04\\x10\\x16\\x8c\\x01}`', 5, 6, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_laser_2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\x06\\x0c$\\xe4\\xf6\\x18\\x02\\xf1\\xfc\\x10cZ\\t\\x03i\\x1c)[\\xe1@\\x03\\x92x\\x1c\\xdd\\xd5x\\x01\\x01\\x01\\x1f\\xd0\\x0c\\x02\\x04\\x10!\\xf5\\x01\\xf0`', 4, 5, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_laser_crusher.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03\\x1e&\\x87\\xeax\\x03\\x0c(\\x0e\\xc6Jr\\x03\\x86|"\\xb0\\xaf\\xc0\\x03\\xa9,\\x1c(\\xd0 \\x01\\x01\\x017\\xc8\\x0c\\x02\\x04\\x10\\x1d\\xee\\x01\\xb9\\x80\', 3, 4, \'invalid start byte\')})'),[0m
[1m[31mE          'portal2/maps/mp_coop_lobby_2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x08b`p\\xcc\\x03%,\\x08\\x178Cx\\x02\\xf5\\x92\\t\\x9f`U\\xd9\\x01\\xed\\xc0\\t\\xf5<G\\x07\\x02\\x8d\\x10\\x01\\x01\\x03\\xd2$\\x0c\\x02\\x04\\x10I+\\x01\\x02\\x11@', 4, 5, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_multifling_1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05X\\xc4A\\x82\\x01\\x97\\xa0\\x054\\xb4\\x1fR\\xd1t\\x06\\x0ed>\\xac\\x01R\\xe0\\x06M\\x103s\\x01\\x908\\x01\\x01\\x02F\\xc0\\x0c\\x02\\x04\\x103\\xbd\\x01\\x01e\\xc0', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_paint_bridge.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x04\\x07(-|\\xfb\\xdc\\x03\\xd7d-\\x1c\\x01#k\\x04x\\xac,"\\xc7`\\x04\\xa4\\xd0 \\xfd\\x013\\xf8\\x01\\x01\\x01\\xf1@\\x0c\\x02\\x04\\x10\\\'\\x16\\x01\\xcf\', 5, 6, \'invalid start byte\')})'),[0m
[1m[31mE          'portal2/maps/mp_coop_paint_come_along.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xf0\\xe4!\\x9b\\xa6h\\x02\\xd10\\x1dt\\x93\\xa7\\x03[\\x94\\x1f\\x1e\\x8c\\xa0\\x03z\\xb4\\x1a\\x1f\\xcc\\xc0\\x01\\x01\\x01h\\x98\\x0c\\x02\\x04\\x10\\x1b\\xb2\\x01\\x92\\xe0', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_paint_longjump_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06\\x86\\x8c>\\xe4\\x01~D\\x06\\x0b\\xd8v\\x97\\x03^0\\x06\\xfd\\xe8NL\\x01_\\xe0\\x07L41\\xb6\\x01\\xd7`\\x01\\x01\\x03\\x17\\xa8\\x0c\\x02\\x04\\x10F\\x92\\x01\\x01k', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_paint_red_racer.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03T|(\\xe2\\xcc$\\x03<\\xe8\\x14\\xc4\\xa0q\\x03\\xd2L"\\x1c\\x96`\\x03\\xf4h \\xf6\\x01\\x0cP\\x01\\x01\\x01\\xb3\\xd8\\x0c\\x02\\x04\\x10\\x1f\\x1d\\x01\\x9d`\', 4, 5, \'invalid continuation byte\')})'),[0m
[1m[31mE          'portal2/maps/mp_coop_paint_redirect.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03i\\x80-\\xe0\\xde\\xfc\\x03M\\xe0\\x18\\x9a\\x9by\\x03\\xf2l&\\x12\\xb0\\xe0\\x04\\x18\\x80!\\xf3\\x01!\\xf8\\x01\\x01\\x01\\x928\\x0c\\x02\\x04\\x10!\\xe0\\x01\\xb9', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_paint_speed_catch.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xda\\x08%*\\xb9\\xf4\\x02\\xc3D\\x14)~\\xf7\\x03L, \\x0e\\x98@\\x03l<\\x1e\\x0f\\xfb\\xb8\\x01\\x01\\x01]\\xd8\\x0c\\x02\\x04\\x10\\x1c/\\x01\\xa0\\x80', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_paint_speed_fling.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\x9381\\x15\\x01\\x15 \\x04TH<+\\x01\\x9e\\xae\\x05\\x0c\\x8038\\xed`\\x05?\\xb8#\\xcf\\x01F\\x88\\x01\\x01\\x02L\\xbc\\x0c\\x02\\x04\\x10-\\x05\\x01\\xf6\\xc0', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_paint_walljumps.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xb1,,z\\xe9\\xc4\\x03\\x91 \\x1dC\\xbaM\\x045\\xa0$\\x91\\xa6 \\x04Z4%\\xfb\\x01>`\\x01\\x01\\x01\\xaf0\\x0c\\x02\\x04\\x10 \\x86\\x01\\xae ', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_race_2.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03Ml\'\\xd9\\x01\\x08\\x038P\\x11\\xc8q\\xa0\\x03\\xb3\\x14+\\xbd\\xed \\x03\\xde\\xd4\\x1fW\\xf3\\x90\\x01\\x01\\x015t\\x0c\\x02\\x04\\x10#\\xea\\x01\\xfa\\xa0", 4, 5, \'invalid continuation byte\')})'),[0m
[1m[31mE          'portal2/maps/mp_coop_rat_maze.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\x11\\xa0\\x1e\\xba\\xact\\x02\\x08\\x98\\x06\\xe2 \\x8a\\x02e\\x90\\x16\\xe3l\\x80\\x02|t\\x17\\xe9\\xb0X\\x01\\x01\\x9fh\\x0c\\x02\\x04\\x10\\x14o\\x01r\\x80', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_start.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x08m\\xe4^6\\x03l\\x08\\x17\\x0cM\\xe6\\x026\\xa0\\tH\\x10w\\xdd\\x02\\xd2\\xe0\\t\\xbf\\xf0Fj\\x02\\xa2\\xb8\\x01\\x01\\x03ih\\x0c\\x02\\x04\\x10]A\\x01\\x03\\x06', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_tbeam_catch_grind_1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03a\\x08*\\x95\\x01\\xb0\\x03C\\xdc\\x19\\xad\\x8d}\\x03\\xd1\\xc4)\\x13\\xcb@\\x03\\xfa\\xd8\\x1d\\xa4\\xcf\\xd8\\x01\\x01\\x01u4\\x0c\\x02\\x04\\x10#\\xac\\x01\\xd7\\xc0', 4, 5, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_tbeam_drill.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03o<.7\\x015\\xf0\\x03U\\xa4\\x16\\xb0\\x8au\\x03\\xe5\\x84\'\\xdf\\xdd@\\x04\\rd\\x1e\\xba\\xe7x\\x01\\x01\\x01z\\\\\\x0c\\x02\\x04\\x10!R\\x01\\xe8\\xa0", 7, 8, \'invalid continuation byte\')})'),[0m
[1m[31mE          'portal2/maps/mp_coop_tbeam_end.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xd1\\x180T\\x01mX\\x04\\xb1h\\x1b\\x8c\\xac4\\x05!\\xc08e\\x01&\\xc0\\x05Z(\\x1d\\x17\\x01\\x0b\\xc0\\x01\\x01\\x02P\\xf4\\x0c\\x02\\x04\\x10.\\x96\\x01\\x017\\xe0', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_tbeam_laser_1.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03E\\xc8,?\\x01\\n\\x10\\x03+\\x10\\x17\\xc9\\x90\\xb9\\x03\\xb6\\xc4\\\'\\x93\\xbe\\x03\\xdeX#\\x14\\x01\\x01\\x10\\x01\\x01\\x01>\\xc8\\x0c\\x02\\x04\\x10"\\xf5\\x01\\xc7@\', 2, 3, \'invalid continuation byte\')})'),[0m
[1m[31mE          'portal2/maps/mp_coop_tbeam_maze.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03\\x99\\xb4/\\xab\\x01\\x0b\\xa8\\x03l\\x04)x\\xfat\\x04\\x15\\xb4,\\xe6\\xcd@\\x04B\\x9c%\\x9e\\x013 \\x01\\x01\\x01}8\\x0c\\x02\\x04\\x10\'\\xc5\\x01\\xd8\\xa0", 1, 2, \'invalid start byte\')})'),[0m
[1m[31mE          'portal2/maps/mp_coop_tbeam_polarity.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xa3l$k\\xdb\\xf0\\x02\\x96$\\nd1_\\x03\\x0f\\xb0!\\x8e\\xb0 \\x031@\\x1b[\\xc4\\x08\\x01\\x01\\xdc\\xa4\\x0c\\x02\\x04\\x10\\x1bv\\x01\\xba`', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_tbeam_polarity2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\x96|%\\x10\\xccH\\x02\\x8a\\xac\\t\\\\-F\\x03\\x03|\\x1a\\x89x`\\x03\\x1e\\x08\\x1a\\x83\\xaf\\xc8\\x01\\x01\\xdd$\\x0c\\x02\\x04\\x10\\x17\\x86\\x01\\x7f', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_tbeam_polarity3.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x038\\xc4$=\\xdc\\\\\\x03$\\xb0\\x10\\xc8]"\\x03\\xaa8&\\xb5\\xc5`\\x03\\xd0\\xf0\\x1d\\r\\xcd\\x98\\x01\\x01\\x01^\\xd8\\x0c\\x02\\x04\\x10 \\xec\\x01\\xd0\\xe0\', 2, 3, \'invalid continuation byte\')})'),[0m
[1m[31mE          'portal2/maps/mp_coop_tbeam_redirect.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\xab$0\\xa9\\x01A\\xfc\\x05P@X\\x0e\\x02HS\\x06\\x1c\\x806\\xf0\\x01 \\x06Sp\\x1f\\xa1\\xf6`\\x01\\x01\\x035,\\x0c\\x02\\x04\\x101V\\x01\\x01+ ', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_teambts.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\xf1\\xac\\x0b\\xf8B<\\xeb\\xe0\\x03\\xaa\\x10\\xfb\\x01\\r\\xbc\\x0f=@`\\x01\\x1c\\xfc\\x0bDT\\xa8\\x01\\x01`\\xac\\x0c\\x02\\x04\\x10\\r\\xc5\\x01E@', 0, 2, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_turret_ball.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04U\\xb84\\xff\\x01D\\x9c\\x047d\\x1aW\\x9eq\\x04\\xd9P0V\\x01\\x03\\xa0\\x05\\t\\xa8-s\\x01K\\xe0\\x01\\x01\\x01\\xee\\xf4\\x0c\\x02\\x04\\x10)\\xa1\\x01\\x01\\x12\\xc0', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_turret_walls.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03~ /\\x06\\x01?\\xc8\\x03k\\x08\\x0fbQ)\\x03\\xf5\\xb0.\\xae\\x01\\x0f \\x04$`(\\xe4\\x01BP\\x01\\x01\\x01/|\\x0c\\x02\\x04\\x10$\\xab\\x01\\x01  ', 7, 8, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_wall_2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x01\\xc5\\xf0\\x1e\\xea\\x8e\\xd4\\x01\\xc0T\\x03\\xbf\\x0e\\xaa\\x02(\\x84\\x0f\\x81A`\\x028\\x08\\x1d\\x97\\xc0\\xa8\\x01\\x01w\\x14\\x0c\\x02\\x04\\x10\\x0ec\\x01E\\xe0', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_wall_5.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xa2,(U\\xf9<\\x02\\x90\\x18\\r\\xfcc\\x83\\x02\\xe5\\x80%i\\xb4`\\x03\\n\\xec\\x19\\xbb\\xf0\\xc0\\x01\\x01\\xee\\x9c\\x0c\\x02\\x04\\x10 \\xa2\\x01\\xc2 ', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_wall_block.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xc4\\xac6\\x86\\x01\\xae\\xb0\\x03\\xabx\\x14\\xf7m\\xd4\\x04HP;\\x1d\\x01\\x96\\x04\\x83p++\\x01G`\\x01\\x01\\x01\\x0f\\xf0\\x0c\\x02\\x04\\x10-\\x19\\x01\\x01\\xae\\xa0', 4, 5, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/mp_coop_wall_intro.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03\\xb8h2h\\x01"p\\x03\\xa5\\x08\\x0f\\xd1J\\xfa\\x048T+\\x15\\xde`\\x04cl+*\\x01V\\xd8\\x01\\x01\\x01Q\\x98\\x0c\\x02\\x04\\x10#q\\x01\\xeb\\x80\', 1, 2, \'invalid start byte\')})'),[0m
[1m[31mE          'portal2/maps/sp_a1_intro1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\xc9 p\\xb0\\x02,\\xd4\\x05\\xb1(\\x13\\xdd\\x9d\\x90\\x06\\xeb\\xd84\\xca\\xef@\\x07 \\xa4Z\\xb0\\x01\\xfe0\\x01\\x01\\x02\\x18\\xf4\\x0c\\x02\\x04\\x100c\\x01\\xf9@', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a1_intro2.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03O84\\xca\\xc3\\xcc\\x03FX\\x06\\xb1%\\xb1\\x04\\x0f\\x08\\x18\\x13i \\x04\'\\x1c,p\\xe7\\xc0\\x01\\x01\\x01\\x12\\x0c\\x0c\\x02\\x04\\x10\\x16\\xea\\x01o", 4, 5, \'invalid continuation byte\')})'),[0m
[1m[31mE          'portal2/maps/sp_a1_intro3.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x05\\xf7\\xd4W\\x14\\x01f8\\x05\\xd5\\xb4\\x1d\\xe5\\xde\\x7f\\x07\'X86\\xff\\xc0\\x07_\\x90?\\xef\\x01\\x8d\\xb0\\x01\\x01\\x01\\xff\\x94\\x0c\\x02\\x04\\x104&\\x01\\x01\\x0b", 1, 2, \'invalid start byte\')})'),[0m
[1m[31mE          'portal2/maps/sp_a1_intro4.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05e\\xa4jr\\x01t$\\x05?\\xe4!\\\\\\x01\\x0f\\xeb\\x06\\x95<6n\\xf1\\xa0\\x06\\xcb\\xac5&\\x01B\\x08\\x01\\x01\\x01\\x9a\\xa8\\x0c\\x02\\x04\\x102\\xcd\\x01\\xfe', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a1_intro5.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03\\xcc\\xfc5t\\xdf\\x98\\x03\\xb5|\\x14\\xb2\\x94\'\\x04\\x87\\xa4$d\\xa6 \\x04\\xac\\x08.b\\x01\\x01X\\x01\\x01\\x01\\x84\\x14\\x0c\\x02\\x04\\x10!\\x89\\x01\\xae\\xe0", 1, 2, \'invalid continuation byte\')})'),[0m
[1m[31mE          'portal2/maps/sp_a1_intro6.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\x0e\\x14B;\\x01A\\xe4\\x04\\xf6x\\x14\\x0c|^\\x05\\xfd\\x18/,\\xee@\\x06,D.0\\x01\\x1b\\xc8\\x01\\x01\\x01\\xd9\\x8c\\x0c\\x02\\x04\\x10(\\x93\\x01\\xfb\\x80', 7, 8, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a1_intro7.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04w\\xd4K\\xa8\\x01/\\xf0\\x04S\\x94 9\\xf6s\\x05`\\x90/;\\xd6\\xe0\\x05\\x8f\\xcc7F\\x014\\xd0\\x01\\x01\\x01\\x95L\\x0c\\x02\\x04\\x10+\\xdd\\x01\\xe1\\xc0', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a1_wakeup.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xfb4I\\x88\\x01 `\\x03\\xe1\\xbc\\x14\\xff\\x9f*\\x04\\xbch*^\\xbe \\x04\\xe6\\xc84\\xb7\\x013 \\x01\\x01\\x01#\\xc4\\x0c\\x02\\x04\\x10+\\xa9\\x01\\xc7\\xc0', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_bridge_intro.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x04r\\xcc:\\xb3\\x01\\x1b\\xc8\\x04Yp\\x15\\xc3\\x94\\xcd\\x05,\\xfc-\\xee\\xec\\x05Z\\xec.\\xb4\\x011\\xb8\\x01\\x01\\x01\\xb7\\\\\\x0c\\x02\\x04\\x10\'E\\x01\\xf9`", 2, 3, \'invalid continuation byte\')})'),[0m
[1m[31mE          'portal2/maps/sp_a2_bridge_the_gap.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xa3d9F\\x01-\\x8c\\x04\\x8e\\x04\\x10\\xa5S\\x17\\x05PX/\\xd9\\xed\\xe0\\x05\\x804/]\\x01I\\xa0\\x01\\x01\\x01\\xce\\x88\\x0c\\x02\\x04\\x10(\\xc7\\x01\\xfd\\xa0', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_bts1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x058\\xe0B\\xc3\\x01\\xd0\\xb8\\x05\\x02l/\\xcb\\x01\\r\\xc5\\x05\\xe6\\xfcT\\xaa\\x01\\xd2@\\x06;\\xa8\\x1f\\xf1\\x01\\x07\\x88\\x01\\x01\\x02+|\\x0c\\x02\\x04\\x10D\\xee\\x01\\x01\\xf3 ', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_bts2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02e\\xc4\\x1c#\\xee\\xd4\\x02M\\x1c\\x13\\x07\\x7f@\\x02\\x91\\xac8w\\x01;\\xa0\\x02\\xca$\\x10W\\x98p\\x01\\x01\\x01/\\x1c\\x0c\\x02\\x04\\x100\\xaa\\x01\\x01V\\xc0', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_bts3.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xe7\\x981W\\x01E \\x03\\xcb\\xc8\\x15\\x9c\\xa9\\x87\\x049\\xa4B\\xbb\\x014\\xa0\\x04|`\\x1c\\x8b\\x01&\\xc0\\x01\\x01\\x01\\x8c\\xec\\x0c\\x02\\x04\\x10:\\x1a\\x01\\x01F`', 1, 3, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_bts4.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\x1f\\x800s\\x0138\\x03\\xfb\\xe0\\x1cv\\xb8\\\\\\x04\\x90\\x84?\\xaf\\x01\\x1b`\\x04\\xd04\\x1f\\xd3\\x01,\\xa8\\x01\\x01\\x01\\xc9\\x88\\x0c\\x02\\x04\\x109\\xf6\\x01\\x01/ ', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_bts5.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02` \\x1dk\\xa2\\x84\\x02Jp\\x12\\x0cr\\x89\\x02\\x98\\xf4#\\x14\\x9b\\x80\\x02\\xbc\\x08\\x11\\x0e}\\xb8\\x01\\x01\\x01\\x1c\\xac\\x0c\\x02\\x04\\x10 \\x19\\x01\\xa5@', 5, 6, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_bts6.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03Yh)\\x95\\x01$\\x80\\x037\\x9c!#\\xbb\\xf4\\x03\\x8bX \\x18\\x84 \\x03\\xabp\\r\\x8a\\x92@\\x01\\x01\\x01\\xd5\\\\\\x0c\\x02\\x04\\x10\\x1e\\x07\\x01\\x85@', 4, 5, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_catapult_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xfd\\x90>h\\x01\\x1c4\\x03\\xe9\\xb4\\x0fVU\\xd7\\x04\\xc9\\x840s\\xfc\\xe0\\x04\\xf9\\xf82W\\x01A0\\x01\\x01\\x01d\\x1c\\x0c\\x02\\x04\\x10)\\xf1\\x01\\x01\\x11@', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_column_blocker.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xba\\xc0B\\x94\\x01y\\xe8\\x04\\x9dl\\x19\\x0b\\xcb\\xd5\\x05c\\xbc<\\xe2\\x014\\x05\\xa0\\xa0/\\xcd\\x01U(\\x01\\x01\\x01\\xddP\\x0c\\x02\\x04\\x103W\\x01\\x01D ', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_core.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06HZS\\x01\\x92\\x05\\xcc\\xec*\\x94\\x01L\\x99\\x07(\\x84Q\\t\\x01\\xa3 \\x07y\\x90!\\xa7\\x01\\x1cX\\x01\\x01\\x035\\xb4\\x0c\\x02\\x04\\x10H_\\x01\\x01\\xc7 ', 5, 6, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_dual_lasers.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xeb\\xf8;i\\xe8\\xbc\\x03\\xd9\\x18\\x0fhP^\\x04\\xc5\\xb0&\\xb5\\xb1\\xc0\\x04\\xech3,\\x01&\\xc0\\x01\\x01\\x01k\\xcc\\x0c\\x02\\x04\\x10#z\\x01\\xbc\\xe0', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_fizzler_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xb8\\xbc.\\xf3\\xc7D\\x02\\xae\\xa0\\x076%6\\x03_\\x9c\\x1d\\x87\\x8f@\\x03}$)\\x83\\xed`\\x01\\x01\\xbd\\xa4\\x0c\\x02\\x04\\x10\\x19\\xb0\\x01\\x99\\xa0', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06\\xe2\\xa4X\\xbf\\x01\\x8a\\xb0\\x06\\xa1\\xf09\\xe3\\x01s\\xc0\\x07\\xc9\\x84S\\xff\\x01j \\x08\\x1d\\x84:\\x8a\\x01\\x9e\\xd8\\x01\\x01\\x02\\xe3,\\x0c\\x02\\x04\\x10N\\x1f\\x01\\x01y\\xe0', 1, 3, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_laser_chaining.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03c\\xf83\\x13\\x01\\x1d$\\x03Tl\\x0b\\xd1G\\xa0\\x04\\x0bD*\\x8f\\xeb@\\x045\\xd4*\\x15\\x014@\\x01\\x01\\xed\\x04\\x0c\\x02\\x04\\x10#o\\x01\\xfb ', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_laser_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\x05\\xe4;\\x95\\xd8\\xe4\\x03\\xf1\\x88\\x11\\x9ejz\\x04\\xd3\\x9c$\\xad\\xa1\\x80\\x04\\xf8L0A\\x01\\x08`\\x01\\x01\\x01\\xae\\x94\\x0c\\x02\\x04\\x10!\\xce\\x01\\xa8\\xc0', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_laser_over_goo.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03u\\xdc1\\r\\xdd\\xb8\\x03h,\\t&/\\xc6\\x04.d&y\\xb9\\xc0\\x04T\\xe0.\\x07\\x01\\x15\\xe0\\x01\\x01\\x01$T\\x0c\\x02\\x04\\x10"\\xc7\\x01\\xc9@\', 2, 3, \'invalid continuation byte\')})'),[0m
[1m[31mE          'portal2/maps/sp_a2_laser_relays.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xfe\\xb81}\\x01\\x05\\x90\\x02\\xeb4\\x0f\\\\f\\xc6\\x03\\x990*\\x9d\\xe3\\xc0\\x03\\xc3\\xd0$\\xa9\\xf5@\\x01\\x01\\xe8D\\x0c\\x02\\x04\\x10#\\x9e\\x01\\xf6\\xe0', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_laser_stairs.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x04\\xb1\\xe0J"\\x01;\\x04\\x98\\x0c\\x15wsC\\x05\\x9d\\xc4-\\x82\\xd8\\x80\\x05\\xcbH:A\\x01\\x84h\\x01\\x01\\x01\\xd1\\\\\\x0c\\x02\\x04\\x10(\\xf5\\x01\\xe8@\', 1, 2, \'invalid start byte\')})'),[0m
[1m[31mE          'portal2/maps/sp_a2_laser_vs_turret.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xc8\\xf80\\xeb\\xe2\\xc8\\x03\\xb6\\xdc\\x0e\\xefU\\xf9\\x04s\\x94$\\xad\\xac\\xa0\\x04\\x98D+\\xb8\\x01\\x12\\xc8\\x01\\x01\\x01\\x80(\\x0c\\x02\\x04\\x10 \\xad\\x01\\xb6`', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_pit_flings.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05d0B\\x9b\\x011|\\x05OL\\x0e\\x81XJ\\x06B\\x986\\xe8\\x01\\x01@\\x06y\\x803W\\x01_\\x90\\x01\\x01\\x02hT\\x0c\\x02\\x04\\x100M\\x01\\x01\\x14\\xc0', 4, 5, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_pull_the_rug.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04d\\x10N\\xe0\\x01;\\xcc\\x04N,\\x11bb_\\x05]T.`\\xf3\\x80\\x05\\x8b\\xb4B,\\x01x\\xe0\\x01\\x01\\x01\\x81L\\x0c\\x02\\x04\\x10)\\x85\\x01\\x01\\x05\\x80', 4, 5, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_ricochet.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xd4DE\\x12\\x01M`\\x04\\xb2\\xb0\\x1b\\xff\\xca\\xaa\\x05\\xa8<5o\\xfd\\x05\\xdd\\xac5p\\x01c\\xc8\\x01\\x01\\x01\\xc9\\x14\\x0c\\x02\\x04\\x100O\\x01\\x01\\x0f', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_sphere_peek.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\x8cD>\\xad\\x01C|\\x04q\\x04\\x16Wk\\xc5\\x05V\\xd07\\x95\\x01,@\\x05\\x8eh1 \\x01[\\xe8\\x01\\x01\\x01\\xb08\\x0c\\x02\\x04\\x10.\\xef\\x01\\x01@ ', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_triple_laser.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x02*$"\\xf3\\xa3\\x98\\x02"\\xe0\\x05k\\x16s\\x02\\xc6\\xd8\\x15\\x17h\\x02\\xdb\\xf0\\x1d\\xf8\\xad@\\x01\\x01u\\xbc\\x0c\\x02\\x04\\x10\\x12\\xf4\\x01n`\', 4, 7, \'invalid continuation byte\')})'),[0m
[1m[31mE          'portal2/maps/sp_a2_trust_fling.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\x8b\\xe4?*\\x01jX\\x05c\\x8c!\\xfd\\xf3\\xd6\\x06PdC\\xfb\\x01`\\x80\\x06\\x94`6I\\x01\\x83\\x90\\x01\\x01\\x02`@\\x0c\\x02\\x04\\x108\\x89\\x01\\x01{ ', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_turret_blocker.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\x07\\xdc1\\xfb\\xf3<\\x03\\xf6\\x10\\x0e\\xa7SL\\x04\\xaed%Y\\xba`\\x04\\xd3\\xc0+{\\x01\\x07\\xd0\\x01\\x01\\x01\\xb8\\x1c\\x0c\\x02\\x04\\x10 \\x10\\x01\\xc5`', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a2_turret_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03`\\xf86v\\xe8\\\\\\x03T\\x8c\\t\\xc6*\\xb6\\x04\\x18|\\x1e\\x80\\x97\\x046\\xfc/r\\x01#\\xf0\\x01\\x01\\x01\\t\\x88\\x0c\\x02\\x04\\x10\\x1b\\xa4\\x01\\xa0 ', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a3_00.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xb6|)\\xdd', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a3_01.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x08r4v\\xd9\\x01\\x99\\xe0\\x08\\x0b\\xc8`\\xe3\\x03\\r\\xbd\\t\\xb7\\xb0FC\\x01^\\xa0\\t\\xfd\\xf4V\\xbd\\x01\\xf8\\x90\\x01\\x01\\x04(|\\x0c\\x02\\x04\\x10B\\xe2\\x01\\x01o\\xe0', 4, 5, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a3_03.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05}\\x8cL\\xcb\\x01\\x86\\xf0\\x05>t6e\\x02(\\xc7\\x06?\\x0cG\\x14\\x01P\\x80\\x06\\x86 ,\\xbc\\x01\\\\0\\x01\\x01\\x0208\\x0c\\x02\\x04\\x10?\\xbe\\x01\\x01f@', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a3_bomb_flings.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\x19\\xf8/\\xaf\\xb6\\xa0\\x03\\x03\\x98\\x14\\x17\\x848\\x03\\x94\\xc0\\x1d\\x81~\\xc0\\x03\\xb2D$\\xa0\\x01%\\xe8\\x01\\x01\\x01O@\\x0c\\x02\\x04\\x10\\x1b\\xa0\\x01\\x84', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a3_crazy_box.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04Q\\xd0(\\x17\\xd7p\\x044\\x84\\x17\\xba\\xa4\\x9c\\x04\\xa7\\x9c2L\\xe2\\x04\\xd9\\xe8\\x1bw\\xf8X\\x01\\x01\\x02{D\\x0c\\x02\\x04\\x10,D\\x01\\xf2`', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a3_end.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x07;dm\\x93\\x01\\xe5X\\x07\\x13\\xa4 \\xfd\\x01V\\x16\\x08\\x85\\\\C\\xfa\\x01F\\xe0\\x08\\xc9X=\\xe1\\x01\\xd4\\x90\\x01\\x01\\x03\\x88\\x14\\x0c\\x02\\x04\\x10<\\x87\\x01\\x01Y\\xc0', 4, 5, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a3_jump_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\x16\\x1876\\x01%4\\x04\\xd5\\xa4<7\\x01\\xa9_\\x05\\x8e\\x04=\\xf7\\x01\\x1d\\xe0\\x05\\xcb\\xfc,\\x13\\x01\\x89\\xc0\\x01\\x01\\x02\\x8c\\x10\\x0c\\x02\\x04\\x108\\x80\\x01\\x01(\\xc0', 14, 15, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a3_portal_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\t\\xc4\\x04gc\\x02X\\x0c\\tY<b\\xe4\\x03\\x90\\x08\\n\\x968X\\x9e\\x01\\x93@\\n\\xee\\xd8NS\\x02\\x8b`\\x01\\x01\\x04\\xb9(\\x0c\\x02\\x04\\x10R\\x92\\x01\\x01\\xa9\\xe0', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a3_speed_flings.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02!L#\\x98\\xbe\\xd4\\x02\\x1d`\\x01*\\x0b|\\x02q\\\\\\x11\\xd1N`\\x02\\x830\\x1a\\xc7\\xcb\\xe8\\x01\\x01\\xc0,\\x0c\\x02\\x04\\x10\\x10\\xa7\\x01T`', 4, 5, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a3_speed_ramp.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04|\\x84.~\\xdf\\x98\\x04\\x1b\\xd4]>\\x02\\x83\\xe1\\x04\\xe8\\xb42O\\xe2\\xc0\\x05\\x1b\\x04,\\xf8\\x01q\\xd8\\x01\\x01\\x02=\\xec\\x0c\\x02\\x04\\x10/)\\x01\\xea\\xc0', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a3_transition01.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x07\\xff8TD\\x01\\x89\\x07\\xba\\xc4=\\xe6\\x01\\xca\\x9b\\x08\\xd9\\xe8A\\xd9\\x013`\\t\\x1b\\xc4-q\\x01\\x81\\x08\\x01\\x01\\x04v\\x18\\x0c\\x02\\x04\\x10<\\xce\\x01\\x01C ', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a4_finale1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xae\\x0cEd\\x01r\\\\\\x04\\x89\\xf4\\x1e@\\xce\\x92\\x05lLEZ\\x01Q\\xc0\\x05\\xb1\\xa84\\x1a\\x01Q\\xc8\\x01\\x01\\x01\\xf1X\\x0c\\x02\\x04\\x10;\\xd6\\x01\\x01c\\xc0', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a4_finale2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06\\x05\\xd4>\\x9e\\x01\\x97p\\x05\\xdeD\\x1f\\xeb\\xba\\xa9\\x06\\x96V*\\x01\\xb4\\xc0\\x06\\xec,%\\xdb\\x01?\\xc8\\x01\\x01\\x0308\\x0c\\x02\\x04\\x10I\\xad\\x01\\x01\\xd0\\xe0', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a4_finale3.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x05t\\xd4G\'\\x01\\xbaD\\x05=H1m\\x01\\xa9\\xcb\\x05\\xf2`O\\xbd\\x01x\\xc0\\x06B -\\x83\\x01\\x9cP\\x01\\x01\\x02al\\x0c\\x02\\x04\\x10Ed\\x01\\x01\\x8c@", 2, 3, \'invalid continuation byte\')})'),[0m
[1m[31mE          'portal2/maps/sp_a4_finale4.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\xc2T\\x9c\\xf3\\x01\\xfap\\x05\\xac\\x90\\x10\\x16\\x98k\\x06\\xfd`@T\\x019 \\x07=\\xb4?\\x9e\\x01X\\x88\\x01\\x01\\x02l\\xfc\\x0c\\x02\\x04\\x1098\\x01\\x01M ', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a4_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06\\x85\\x9c]Z\\x02%\\xfc\\x06M\\x942\\xf1\\x01\\x183\\x07lXF\\xec\\x01m\\x80\\x07\\xb3D1\\x18\\x01j\\xd0\\x01\\x01\\x02\\xb1\\x1c\\x0c\\x02\\x04\\x10:X\\x01\\x01\\x82 ', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a4_jump_polarity.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x08\\xb9\\x8c_F\\x01\\xff\\xe0\\x08: {\\r\\x03[\\xf3\\t\\xb0\\x90Y}\\x01\\xb9`\\n\\n\\x1076\\x01i\\xb0\\x01\\x01\\x04e8\\x0c\\x02\\x04\\x10Ph\\x01\\x01\\xc8', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a4_laser_catapult.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06l,mx\\x01\\xf4d\\x065\\xac2\\n\\xf6\\n\\x07\\x81\\x98@\\xad\\x01:@\\x07\\xc2H;\\xd9\\x01]\\xe0\\x01\\x01\\x02\\xe6t\\x0c\\x02\\x04\\x109\\\\\\x01\\x01I ', 6, 7, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a4_laser_platform.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\x83@`\\xf2\\x02\\x16\\x90\\x05c\\x08\\x1b\\x11\\xa2\\x88\\x06`\\xb4C\\x17\\x01F\\x80\\x06\\xa3\\xcc.N\\x013\\xb0\\x01\\x01\\x02\\xa3(\\x0c\\x02\\x04\\x10;(\\x01\\x01W\\x80', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a4_speed_tb_catch.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04h4<\\x9a\\x01`\\x98\\x04C\\x88 @\\xd2\\xe3\\x04\\xf8\\x18>\\xff\\x010\\xe0\\x057\\x18\\x1f/\\xf8X\\x01\\x01\\x01\\xa5\\xc8\\x0c\\x02\\x04\\x105s\\x01\\x01>\\xe0', 4, 5, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a4_stop_the_box.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x04G\\x883#\\x01-\\\\\\x041,\\x11\\xbad)\\x04\\xe8,5T\\x01+\\xa0\\x05\\x1d\\x80\'t\\x01\\x07\\x88\\x01\\x01\\x01\\xced\\x0c\\x02\\x04\\x10*?\\x01\\x01>\\xa0", 2, 3, \'invalid start byte\')})'),[0m
[1m[31mE          'portal2/maps/sp_a4_tb_catch.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xc2,@\\x84\\x01:d\\x04\\xaax\\x13\\xee\\x88\\xb1\\x05v\\x08/\\xc4\\xe3\\x05\\xa5\\xcc1d\\x01W \\x01\\x01\\x01\\xb8\\xd8\\x0c\\x02\\x04\\x10)S\\x01\\xee ', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a4_tb_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xdd8,W\\xfb\\xb8\\x02\\xd4\\xdc\\x04\\x96\\x11\\xe1\\x03xH#\\xab\\xdb`\\x03\\x9b\\xf4#O\\xdb\\xa8\\x01\\x01\\xb34\\x0c\\x02\\x04\\x10\\x1c,\\x01\\xed', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a4_tb_polarity.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\x08dB\\x9e\\x01b`\\x04\\xd5\\x88/9\\x01/G\\x05\\xb5\\xd468\\x01\\x14`\\x05\\xec\\x0c+D\\x01$\\x80\\x01\\x01\\x02Ht\\x0c\\x02\\x04\\x10/\\xfe\\x01\\x01 \\xa0', 4, 5, 'invalid start byte')})"),[0m
[1m[31mE          'portal2/maps/sp_a4_tb_trust_drop.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x04\\xf4\\xe8=\\x97\\x01]\\x14\\x04\\xc2\\xa4.\\xa5\\x011\\xb2\\x05\\xa2x9\\xa7\\x015\\xe0\\x05\\xdc +\'\\x01BP\\x01\\x01\\x02A\\xbc\\x0c\\x02\\x04\\x100\\xd2\\x01\\x01D ", 1, 2, \'invalid continuation byte\')})'),[0m
[1m[31mE          'portal2/maps/sp_a4_tb_wall_button.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x04\\x90\\xd4<\\x18\\x01,H\\x04~$\\r\\xd8V\\xdd\\x05ND<\\x05\\x01%\\xe0\\x05\\x8aL-\'\\x015`\\x01\\x01\\x01\\xdf\\x84\\x0c\\x02\\x04\\x102D\\x01\\x014\\xc0", 1, 2, \'invalid start byte\')})'),[0m
[1m[31mE          'portal2/maps/sp_a5_credits.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x0b\\xf4R', 1, 2, 'invalid continuation byte')})")}[0m
[1m[31mE         Full diff:[0m
[1m[31mE           {[0m
[1m[31mE         -  ,[0m
[1m[31mE         +  'portal2/maps/mp_coop_catapult_1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xdb\\xd05\\x92\\x01wx\\x04\\xba\\x1c\\x13\\xb3\\x13\\x05f\\xd8DV\\x01\\x81\\x05\\xab0.i\\x01x\\x08\\x01\\x01\\x02\\x02\\x90\\x0c\\x02\\x04\\x106\\xdf\\x01\\x01\\x9a ', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_catapult_2.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03xl(\\xe8\\xff\\xa8\\x03i\\xb0\\x0b\\x047y\\x03\\xed\\xf0\'L\\xcf@\\x04\\x15<(\\xb0\\x01&0\\x01\\x01\\x01H\\xb8\\x0c\\x02\\x04\\x10!Y\\x01\\xdc", 4, 5, \'invalid continuation byte\')})'),[0m
[1m[31mE         +  'portal2/maps/mp_coop_catapult_wall_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03b\\x98,\\xa9\\xeb\\x98\\x03O\\xe4\\x0f\\x91Q\\xc7\\x03\\xe5L$E\\xae\\xe0\\x04\\t\\x94) \\x01#\\xa8\\x01\\x01\\x01A|\\x0c\\x02\\x04\\x10\\x1fE\\x01\\xb9`', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_come_along.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x02\\xab,"a\\xc1\\\\\\x02\\x9f\\xec\\x08G)\\xbb\\x03\\x17l\\x1f!\\xa4\\x036\\x90\\x1b\\\\\\xb7\\xa8\\x01\\x01\\x01\\n\\x84\\x0c\\x02\\x04\\x10\\x1aZ\\x01\\xae\\xa0\', 1, 2, \'invalid start byte\')})'),[0m
[1m[31mE         +  'portal2/maps/mp_coop_credits.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'E\\xec\\x04D%DD\\x18\\xf0\\x03@M\\x98\\x06\\xbd)@TX\\x02^\\x11p\\x01\\x01\\x1bD\\x0c\\x02\\x04\\x10\\x05\\x96\\x01. ', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_doors.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\x1e\\xa0!\\x1d\\xac\\xb0\\x02\\x17\\xa8\\x04P\\x13\\x01\\x02\\x89@\\x14\\xb7b\\xa0\\x02\\x9d\\xf8\\x17\\xe1\\x98p\\x01\\x01\\x8d\\xe8\\x0c\\x02\\x04\\x10\\x12\\x87\\x01j ', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_fan.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\x98@?t\\x016\\xe0\\x03\\x89\\x14\\x0b\\xa8`S\\x04,\\xac!\\xa0\\x9b\\xa0\\x04NL\\x1c\\x13\\xdc\\xc8\\x01\\x01\\x01]\\x18\\x0c\\x02\\x04\\x10 R\\x01\\xa4', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_fling_1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02H@\\x1eQ\\x9a\\xbc\\x02Ad\\x04\\xff\\x17\\x05\\x02\\xa9t\\x14Y\\xc0\\x02\\xbdt\\x19\\xdf\\xab\\xd8\\x01\\x01\\xc4H\\x0c\\x02\\x04\\x10\\x12\\x1c\\x01^\\xc0', 5, 6, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_fling_3.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03T\\xe4&\\xa9\\xeb\\x80\\x03GD\\n\\x808D\\x03\\xc0x"\\xbd\\xba\\xa0\\x03\\xe38 \\x05\\xe4\\xf0\\x01\\x01\\x01a\\x90\\x0c\\x02\\x04\\x10\\x1d\\x08\\x01\\xc6\\xc0\', 2, 3, \'invalid continuation byte\')})'),[0m
[1m[31mE         +  'portal2/maps/mp_coop_fling_crushers.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x02\\xd7\\xf0"\\xfc\\xd9\\x08\\x02\\xcaT\\t\\xe35\\xa2\\x03=@#6\\xb3\\x03`x\\x1b\\xf1\\xc3\\xc0\\x01\\x01\\xe7\\xe0\\x0c\\x02\\x04\\x10\\x1e\\x1a\\x01\\xc0\', 1, 2, \'invalid continuation byte\')})'),[0m
[1m[31mE         +  'portal2/maps/mp_coop_infinifling_train.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x027d\\x1e\\x1c\\xa3h\\x02,\\x90\\x08B$3\\x02\\x95|\\x19Ov\\x02\\xae\\xcc\\x19\\xee\\xa9\\xe0\\x01\\x01\\xb5@\\x0c\\x02\\x04\\x10\\x16\\x8c\\x01}`', 5, 6, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_laser_2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\x06\\x0c$\\xe4\\xf6\\x18\\x02\\xf1\\xfc\\x10cZ\\t\\x03i\\x1c)[\\xe1@\\x03\\x92x\\x1c\\xdd\\xd5x\\x01\\x01\\x01\\x1f\\xd0\\x0c\\x02\\x04\\x10!\\xf5\\x01\\xf0`', 4, 5, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_laser_crusher.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03\\x1e&\\x87\\xeax\\x03\\x0c(\\x0e\\xc6Jr\\x03\\x86|"\\xb0\\xaf\\xc0\\x03\\xa9,\\x1c(\\xd0 \\x01\\x01\\x017\\xc8\\x0c\\x02\\x04\\x10\\x1d\\xee\\x01\\xb9\\x80\', 3, 4, \'invalid start byte\')})'),[0m
[1m[31mE         +  'portal2/maps/mp_coop_lobby_2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x08b`p\\xcc\\x03%,\\x08\\x178Cx\\x02\\xf5\\x92\\t\\x9f`U\\xd9\\x01\\xed\\xc0\\t\\xf5<G\\x07\\x02\\x8d\\x10\\x01\\x01\\x03\\xd2$\\x0c\\x02\\x04\\x10I+\\x01\\x02\\x11@', 4, 5, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_multifling_1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05X\\xc4A\\x82\\x01\\x97\\xa0\\x054\\xb4\\x1fR\\xd1t\\x06\\x0ed>\\xac\\x01R\\xe0\\x06M\\x103s\\x01\\x908\\x01\\x01\\x02F\\xc0\\x0c\\x02\\x04\\x103\\xbd\\x01\\x01e\\xc0', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_paint_bridge.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x04\\x07(-|\\xfb\\xdc\\x03\\xd7d-\\x1c\\x01#k\\x04x\\xac,"\\xc7`\\x04\\xa4\\xd0 \\xfd\\x013\\xf8\\x01\\x01\\x01\\xf1@\\x0c\\x02\\x04\\x10\\\'\\x16\\x01\\xcf\', 5, 6, \'invalid start byte\')})'),[0m
[1m[31mE         +  'portal2/maps/mp_coop_paint_come_along.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xf0\\xe4!\\x9b\\xa6h\\x02\\xd10\\x1dt\\x93\\xa7\\x03[\\x94\\x1f\\x1e\\x8c\\xa0\\x03z\\xb4\\x1a\\x1f\\xcc\\xc0\\x01\\x01\\x01h\\x98\\x0c\\x02\\x04\\x10\\x1b\\xb2\\x01\\x92\\xe0', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_paint_longjump_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06\\x86\\x8c>\\xe4\\x01~D\\x06\\x0b\\xd8v\\x97\\x03^0\\x06\\xfd\\xe8NL\\x01_\\xe0\\x07L41\\xb6\\x01\\xd7`\\x01\\x01\\x03\\x17\\xa8\\x0c\\x02\\x04\\x10F\\x92\\x01\\x01k', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_paint_red_racer.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03T|(\\xe2\\xcc$\\x03<\\xe8\\x14\\xc4\\xa0q\\x03\\xd2L"\\x1c\\x96`\\x03\\xf4h \\xf6\\x01\\x0cP\\x01\\x01\\x01\\xb3\\xd8\\x0c\\x02\\x04\\x10\\x1f\\x1d\\x01\\x9d`\', 4, 5, \'invalid continuation byte\')})'),[0m
[1m[31mE         +  'portal2/maps/mp_coop_paint_redirect.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03i\\x80-\\xe0\\xde\\xfc\\x03M\\xe0\\x18\\x9a\\x9by\\x03\\xf2l&\\x12\\xb0\\xe0\\x04\\x18\\x80!\\xf3\\x01!\\xf8\\x01\\x01\\x01\\x928\\x0c\\x02\\x04\\x10!\\xe0\\x01\\xb9', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_paint_speed_catch.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xda\\x08%*\\xb9\\xf4\\x02\\xc3D\\x14)~\\xf7\\x03L, \\x0e\\x98@\\x03l<\\x1e\\x0f\\xfb\\xb8\\x01\\x01\\x01]\\xd8\\x0c\\x02\\x04\\x10\\x1c/\\x01\\xa0\\x80', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_paint_speed_fling.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\x9381\\x15\\x01\\x15 \\x04TH<+\\x01\\x9e\\xae\\x05\\x0c\\x8038\\xed`\\x05?\\xb8#\\xcf\\x01F\\x88\\x01\\x01\\x02L\\xbc\\x0c\\x02\\x04\\x10-\\x05\\x01\\xf6\\xc0', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_paint_walljumps.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xb1,,z\\xe9\\xc4\\x03\\x91 \\x1dC\\xbaM\\x045\\xa0$\\x91\\xa6 \\x04Z4%\\xfb\\x01>`\\x01\\x01\\x01\\xaf0\\x0c\\x02\\x04\\x10 \\x86\\x01\\xae ', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_race_2.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03Ml\'\\xd9\\x01\\x08\\x038P\\x11\\xc8q\\xa0\\x03\\xb3\\x14+\\xbd\\xed \\x03\\xde\\xd4\\x1fW\\xf3\\x90\\x01\\x01\\x015t\\x0c\\x02\\x04\\x10#\\xea\\x01\\xfa\\xa0", 4, 5, \'invalid continuation byte\')})'),[0m
[1m[31mE         +  'portal2/maps/mp_coop_rat_maze.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\x11\\xa0\\x1e\\xba\\xact\\x02\\x08\\x98\\x06\\xe2 \\x8a\\x02e\\x90\\x16\\xe3l\\x80\\x02|t\\x17\\xe9\\xb0X\\x01\\x01\\x9fh\\x0c\\x02\\x04\\x10\\x14o\\x01r\\x80', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_start.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x08m\\xe4^6\\x03l\\x08\\x17\\x0cM\\xe6\\x026\\xa0\\tH\\x10w\\xdd\\x02\\xd2\\xe0\\t\\xbf\\xf0Fj\\x02\\xa2\\xb8\\x01\\x01\\x03ih\\x0c\\x02\\x04\\x10]A\\x01\\x03\\x06', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_tbeam_catch_grind_1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03a\\x08*\\x95\\x01\\xb0\\x03C\\xdc\\x19\\xad\\x8d}\\x03\\xd1\\xc4)\\x13\\xcb@\\x03\\xfa\\xd8\\x1d\\xa4\\xcf\\xd8\\x01\\x01\\x01u4\\x0c\\x02\\x04\\x10#\\xac\\x01\\xd7\\xc0', 4, 5, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_tbeam_drill.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03o<.7\\x015\\xf0\\x03U\\xa4\\x16\\xb0\\x8au\\x03\\xe5\\x84\'\\xdf\\xdd@\\x04\\rd\\x1e\\xba\\xe7x\\x01\\x01\\x01z\\\\\\x0c\\x02\\x04\\x10!R\\x01\\xe8\\xa0", 7, 8, \'invalid continuation byte\')})'),[0m
[1m[31mE         +  'portal2/maps/mp_coop_tbeam_end.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xd1\\x180T\\x01mX\\x04\\xb1h\\x1b\\x8c\\xac4\\x05!\\xc08e\\x01&\\xc0\\x05Z(\\x1d\\x17\\x01\\x0b\\xc0\\x01\\x01\\x02P\\xf4\\x0c\\x02\\x04\\x10.\\x96\\x01\\x017\\xe0', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_tbeam_laser_1.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03E\\xc8,?\\x01\\n\\x10\\x03+\\x10\\x17\\xc9\\x90\\xb9\\x03\\xb6\\xc4\\\'\\x93\\xbe\\x03\\xdeX#\\x14\\x01\\x01\\x10\\x01\\x01\\x01>\\xc8\\x0c\\x02\\x04\\x10"\\xf5\\x01\\xc7@\', 2, 3, \'invalid continuation byte\')})'),[0m
[1m[31mE         +  'portal2/maps/mp_coop_tbeam_maze.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03\\x99\\xb4/\\xab\\x01\\x0b\\xa8\\x03l\\x04)x\\xfat\\x04\\x15\\xb4,\\xe6\\xcd@\\x04B\\x9c%\\x9e\\x013 \\x01\\x01\\x01}8\\x0c\\x02\\x04\\x10\'\\xc5\\x01\\xd8\\xa0", 1, 2, \'invalid start byte\')})'),[0m
[1m[31mE         +  'portal2/maps/mp_coop_tbeam_polarity.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xa3l$k\\xdb\\xf0\\x02\\x96$\\nd1_\\x03\\x0f\\xb0!\\x8e\\xb0 \\x031@\\x1b[\\xc4\\x08\\x01\\x01\\xdc\\xa4\\x0c\\x02\\x04\\x10\\x1bv\\x01\\xba`', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_tbeam_polarity2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\x96|%\\x10\\xccH\\x02\\x8a\\xac\\t\\\\-F\\x03\\x03|\\x1a\\x89x`\\x03\\x1e\\x08\\x1a\\x83\\xaf\\xc8\\x01\\x01\\xdd$\\x0c\\x02\\x04\\x10\\x17\\x86\\x01\\x7f', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_tbeam_polarity3.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x038\\xc4$=\\xdc\\\\\\x03$\\xb0\\x10\\xc8]"\\x03\\xaa8&\\xb5\\xc5`\\x03\\xd0\\xf0\\x1d\\r\\xcd\\x98\\x01\\x01\\x01^\\xd8\\x0c\\x02\\x04\\x10 \\xec\\x01\\xd0\\xe0\', 2, 3, \'invalid continuation byte\')})'),[0m
[1m[31mE         +  'portal2/maps/mp_coop_tbeam_redirect.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\xab$0\\xa9\\x01A\\xfc\\x05P@X\\x0e\\x02HS\\x06\\x1c\\x806\\xf0\\x01 \\x06Sp\\x1f\\xa1\\xf6`\\x01\\x01\\x035,\\x0c\\x02\\x04\\x101V\\x01\\x01+ ', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_teambts.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\xf1\\xac\\x0b\\xf8B<\\xeb\\xe0\\x03\\xaa\\x10\\xfb\\x01\\r\\xbc\\x0f=@`\\x01\\x1c\\xfc\\x0bDT\\xa8\\x01\\x01`\\xac\\x0c\\x02\\x04\\x10\\r\\xc5\\x01E@', 0, 2, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_turret_ball.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04U\\xb84\\xff\\x01D\\x9c\\x047d\\x1aW\\x9eq\\x04\\xd9P0V\\x01\\x03\\xa0\\x05\\t\\xa8-s\\x01K\\xe0\\x01\\x01\\x01\\xee\\xf4\\x0c\\x02\\x04\\x10)\\xa1\\x01\\x01\\x12\\xc0', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_turret_walls.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03~ /\\x06\\x01?\\xc8\\x03k\\x08\\x0fbQ)\\x03\\xf5\\xb0.\\xae\\x01\\x0f \\x04$`(\\xe4\\x01BP\\x01\\x01\\x01/|\\x0c\\x02\\x04\\x10$\\xab\\x01\\x01  ', 7, 8, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_wall_2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x01\\xc5\\xf0\\x1e\\xea\\x8e\\xd4\\x01\\xc0T\\x03\\xbf\\x0e\\xaa\\x02(\\x84\\x0f\\x81A`\\x028\\x08\\x1d\\x97\\xc0\\xa8\\x01\\x01w\\x14\\x0c\\x02\\x04\\x10\\x0ec\\x01E\\xe0', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_wall_5.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xa2,(U\\xf9<\\x02\\x90\\x18\\r\\xfcc\\x83\\x02\\xe5\\x80%i\\xb4`\\x03\\n\\xec\\x19\\xbb\\xf0\\xc0\\x01\\x01\\xee\\x9c\\x0c\\x02\\x04\\x10 \\xa2\\x01\\xc2 ', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_wall_block.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xc4\\xac6\\x86\\x01\\xae\\xb0\\x03\\xabx\\x14\\xf7m\\xd4\\x04HP;\\x1d\\x01\\x96\\x04\\x83p++\\x01G`\\x01\\x01\\x01\\x0f\\xf0\\x0c\\x02\\x04\\x10-\\x19\\x01\\x01\\xae\\xa0', 4, 5, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/mp_coop_wall_intro.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03\\xb8h2h\\x01"p\\x03\\xa5\\x08\\x0f\\xd1J\\xfa\\x048T+\\x15\\xde`\\x04cl+*\\x01V\\xd8\\x01\\x01\\x01Q\\x98\\x0c\\x02\\x04\\x10#q\\x01\\xeb\\x80\', 1, 2, \'invalid start byte\')})'),[0m
[1m[31mE         +  'portal2/maps/sp_a1_intro1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\xc9 p\\xb0\\x02,\\xd4\\x05\\xb1(\\x13\\xdd\\x9d\\x90\\x06\\xeb\\xd84\\xca\\xef@\\x07 \\xa4Z\\xb0\\x01\\xfe0\\x01\\x01\\x02\\x18\\xf4\\x0c\\x02\\x04\\x100c\\x01\\xf9@', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a1_intro2.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03O84\\xca\\xc3\\xcc\\x03FX\\x06\\xb1%\\xb1\\x04\\x0f\\x08\\x18\\x13i \\x04\'\\x1c,p\\xe7\\xc0\\x01\\x01\\x01\\x12\\x0c\\x0c\\x02\\x04\\x10\\x16\\xea\\x01o", 4, 5, \'invalid continuation byte\')})'),[0m
[1m[31mE         +  'portal2/maps/sp_a1_intro3.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x05\\xf7\\xd4W\\x14\\x01f8\\x05\\xd5\\xb4\\x1d\\xe5\\xde\\x7f\\x07\'X86\\xff\\xc0\\x07_\\x90?\\xef\\x01\\x8d\\xb0\\x01\\x01\\x01\\xff\\x94\\x0c\\x02\\x04\\x104&\\x01\\x01\\x0b", 1, 2, \'invalid start byte\')})'),[0m
[1m[31mE         +  'portal2/maps/sp_a1_intro4.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05e\\xa4jr\\x01t$\\x05?\\xe4!\\\\\\x01\\x0f\\xeb\\x06\\x95<6n\\xf1\\xa0\\x06\\xcb\\xac5&\\x01B\\x08\\x01\\x01\\x01\\x9a\\xa8\\x0c\\x02\\x04\\x102\\xcd\\x01\\xfe', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a1_intro5.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x03\\xcc\\xfc5t\\xdf\\x98\\x03\\xb5|\\x14\\xb2\\x94\'\\x04\\x87\\xa4$d\\xa6 \\x04\\xac\\x08.b\\x01\\x01X\\x01\\x01\\x01\\x84\\x14\\x0c\\x02\\x04\\x10!\\x89\\x01\\xae\\xe0", 1, 2, \'invalid continuation byte\')})'),[0m
[1m[31mE         +  'portal2/maps/sp_a1_intro6.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\x0e\\x14B;\\x01A\\xe4\\x04\\xf6x\\x14\\x0c|^\\x05\\xfd\\x18/,\\xee@\\x06,D.0\\x01\\x1b\\xc8\\x01\\x01\\x01\\xd9\\x8c\\x0c\\x02\\x04\\x10(\\x93\\x01\\xfb\\x80', 7, 8, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a1_intro7.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04w\\xd4K\\xa8\\x01/\\xf0\\x04S\\x94 9\\xf6s\\x05`\\x90/;\\xd6\\xe0\\x05\\x8f\\xcc7F\\x014\\xd0\\x01\\x01\\x01\\x95L\\x0c\\x02\\x04\\x10+\\xdd\\x01\\xe1\\xc0', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a1_wakeup.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xfb4I\\x88\\x01 `\\x03\\xe1\\xbc\\x14\\xff\\x9f*\\x04\\xbch*^\\xbe \\x04\\xe6\\xc84\\xb7\\x013 \\x01\\x01\\x01#\\xc4\\x0c\\x02\\x04\\x10+\\xa9\\x01\\xc7\\xc0', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_bridge_intro.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x04r\\xcc:\\xb3\\x01\\x1b\\xc8\\x04Yp\\x15\\xc3\\x94\\xcd\\x05,\\xfc-\\xee\\xec\\x05Z\\xec.\\xb4\\x011\\xb8\\x01\\x01\\x01\\xb7\\\\\\x0c\\x02\\x04\\x10\'E\\x01\\xf9`", 2, 3, \'invalid continuation byte\')})'),[0m
[1m[31mE         +  'portal2/maps/sp_a2_bridge_the_gap.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xa3d9F\\x01-\\x8c\\x04\\x8e\\x04\\x10\\xa5S\\x17\\x05PX/\\xd9\\xed\\xe0\\x05\\x804/]\\x01I\\xa0\\x01\\x01\\x01\\xce\\x88\\x0c\\x02\\x04\\x10(\\xc7\\x01\\xfd\\xa0', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_bts1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x058\\xe0B\\xc3\\x01\\xd0\\xb8\\x05\\x02l/\\xcb\\x01\\r\\xc5\\x05\\xe6\\xfcT\\xaa\\x01\\xd2@\\x06;\\xa8\\x1f\\xf1\\x01\\x07\\x88\\x01\\x01\\x02+|\\x0c\\x02\\x04\\x10D\\xee\\x01\\x01\\xf3 ', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_bts2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02e\\xc4\\x1c#\\xee\\xd4\\x02M\\x1c\\x13\\x07\\x7f@\\x02\\x91\\xac8w\\x01;\\xa0\\x02\\xca$\\x10W\\x98p\\x01\\x01\\x01/\\x1c\\x0c\\x02\\x04\\x100\\xaa\\x01\\x01V\\xc0', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_bts3.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xe7\\x981W\\x01E \\x03\\xcb\\xc8\\x15\\x9c\\xa9\\x87\\x049\\xa4B\\xbb\\x014\\xa0\\x04|`\\x1c\\x8b\\x01&\\xc0\\x01\\x01\\x01\\x8c\\xec\\x0c\\x02\\x04\\x10:\\x1a\\x01\\x01F`', 1, 3, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_bts4.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\x1f\\x800s\\x0138\\x03\\xfb\\xe0\\x1cv\\xb8\\\\\\x04\\x90\\x84?\\xaf\\x01\\x1b`\\x04\\xd04\\x1f\\xd3\\x01,\\xa8\\x01\\x01\\x01\\xc9\\x88\\x0c\\x02\\x04\\x109\\xf6\\x01\\x01/ ', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_bts5.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02` \\x1dk\\xa2\\x84\\x02Jp\\x12\\x0cr\\x89\\x02\\x98\\xf4#\\x14\\x9b\\x80\\x02\\xbc\\x08\\x11\\x0e}\\xb8\\x01\\x01\\x01\\x1c\\xac\\x0c\\x02\\x04\\x10 \\x19\\x01\\xa5@', 5, 6, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_bts6.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03Yh)\\x95\\x01$\\x80\\x037\\x9c!#\\xbb\\xf4\\x03\\x8bX \\x18\\x84 \\x03\\xabp\\r\\x8a\\x92@\\x01\\x01\\x01\\xd5\\\\\\x0c\\x02\\x04\\x10\\x1e\\x07\\x01\\x85@', 4, 5, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_catapult_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xfd\\x90>h\\x01\\x1c4\\x03\\xe9\\xb4\\x0fVU\\xd7\\x04\\xc9\\x840s\\xfc\\xe0\\x04\\xf9\\xf82W\\x01A0\\x01\\x01\\x01d\\x1c\\x0c\\x02\\x04\\x10)\\xf1\\x01\\x01\\x11@', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_column_blocker.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xba\\xc0B\\x94\\x01y\\xe8\\x04\\x9dl\\x19\\x0b\\xcb\\xd5\\x05c\\xbc<\\xe2\\x014\\x05\\xa0\\xa0/\\xcd\\x01U(\\x01\\x01\\x01\\xddP\\x0c\\x02\\x04\\x103W\\x01\\x01D ', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_core.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06HZS\\x01\\x92\\x05\\xcc\\xec*\\x94\\x01L\\x99\\x07(\\x84Q\\t\\x01\\xa3 \\x07y\\x90!\\xa7\\x01\\x1cX\\x01\\x01\\x035\\xb4\\x0c\\x02\\x04\\x10H_\\x01\\x01\\xc7 ', 5, 6, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_dual_lasers.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xeb\\xf8;i\\xe8\\xbc\\x03\\xd9\\x18\\x0fhP^\\x04\\xc5\\xb0&\\xb5\\xb1\\xc0\\x04\\xech3,\\x01&\\xc0\\x01\\x01\\x01k\\xcc\\x0c\\x02\\x04\\x10#z\\x01\\xbc\\xe0', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_fizzler_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xb8\\xbc.\\xf3\\xc7D\\x02\\xae\\xa0\\x076%6\\x03_\\x9c\\x1d\\x87\\x8f@\\x03}$)\\x83\\xed`\\x01\\x01\\xbd\\xa4\\x0c\\x02\\x04\\x10\\x19\\xb0\\x01\\x99\\xa0', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06\\xe2\\xa4X\\xbf\\x01\\x8a\\xb0\\x06\\xa1\\xf09\\xe3\\x01s\\xc0\\x07\\xc9\\x84S\\xff\\x01j \\x08\\x1d\\x84:\\x8a\\x01\\x9e\\xd8\\x01\\x01\\x02\\xe3,\\x0c\\x02\\x04\\x10N\\x1f\\x01\\x01y\\xe0', 1, 3, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_laser_chaining.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03c\\xf83\\x13\\x01\\x1d$\\x03Tl\\x0b\\xd1G\\xa0\\x04\\x0bD*\\x8f\\xeb@\\x045\\xd4*\\x15\\x014@\\x01\\x01\\xed\\x04\\x0c\\x02\\x04\\x10#o\\x01\\xfb ', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_laser_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\x05\\xe4;\\x95\\xd8\\xe4\\x03\\xf1\\x88\\x11\\x9ejz\\x04\\xd3\\x9c$\\xad\\xa1\\x80\\x04\\xf8L0A\\x01\\x08`\\x01\\x01\\x01\\xae\\x94\\x0c\\x02\\x04\\x10!\\xce\\x01\\xa8\\xc0', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_laser_over_goo.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x03u\\xdc1\\r\\xdd\\xb8\\x03h,\\t&/\\xc6\\x04.d&y\\xb9\\xc0\\x04T\\xe0.\\x07\\x01\\x15\\xe0\\x01\\x01\\x01$T\\x0c\\x02\\x04\\x10"\\xc7\\x01\\xc9@\', 2, 3, \'invalid continuation byte\')})'),[0m
[1m[31mE         +  'portal2/maps/sp_a2_laser_relays.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xfe\\xb81}\\x01\\x05\\x90\\x02\\xeb4\\x0f\\\\f\\xc6\\x03\\x990*\\x9d\\xe3\\xc0\\x03\\xc3\\xd0$\\xa9\\xf5@\\x01\\x01\\xe8D\\x0c\\x02\\x04\\x10#\\x9e\\x01\\xf6\\xe0', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_laser_stairs.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x04\\xb1\\xe0J"\\x01;\\x04\\x98\\x0c\\x15wsC\\x05\\x9d\\xc4-\\x82\\xd8\\x80\\x05\\xcbH:A\\x01\\x84h\\x01\\x01\\x01\\xd1\\\\\\x0c\\x02\\x04\\x10(\\xf5\\x01\\xe8@\', 1, 2, \'invalid start byte\')})'),[0m
[1m[31mE         +  'portal2/maps/sp_a2_laser_vs_turret.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xc8\\xf80\\xeb\\xe2\\xc8\\x03\\xb6\\xdc\\x0e\\xefU\\xf9\\x04s\\x94$\\xad\\xac\\xa0\\x04\\x98D+\\xb8\\x01\\x12\\xc8\\x01\\x01\\x01\\x80(\\x0c\\x02\\x04\\x10 \\xad\\x01\\xb6`', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_pit_flings.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05d0B\\x9b\\x011|\\x05OL\\x0e\\x81XJ\\x06B\\x986\\xe8\\x01\\x01@\\x06y\\x803W\\x01_\\x90\\x01\\x01\\x02hT\\x0c\\x02\\x04\\x100M\\x01\\x01\\x14\\xc0', 4, 5, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_pull_the_rug.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04d\\x10N\\xe0\\x01;\\xcc\\x04N,\\x11bb_\\x05]T.`\\xf3\\x80\\x05\\x8b\\xb4B,\\x01x\\xe0\\x01\\x01\\x01\\x81L\\x0c\\x02\\x04\\x10)\\x85\\x01\\x01\\x05\\x80', 4, 5, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_ricochet.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xd4DE\\x12\\x01M`\\x04\\xb2\\xb0\\x1b\\xff\\xca\\xaa\\x05\\xa8<5o\\xfd\\x05\\xdd\\xac5p\\x01c\\xc8\\x01\\x01\\x01\\xc9\\x14\\x0c\\x02\\x04\\x100O\\x01\\x01\\x0f', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_sphere_peek.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\x8cD>\\xad\\x01C|\\x04q\\x04\\x16Wk\\xc5\\x05V\\xd07\\x95\\x01,@\\x05\\x8eh1 \\x01[\\xe8\\x01\\x01\\x01\\xb08\\x0c\\x02\\x04\\x10.\\xef\\x01\\x01@ ', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_triple_laser.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b\'\\x02*$"\\xf3\\xa3\\x98\\x02"\\xe0\\x05k\\x16s\\x02\\xc6\\xd8\\x15\\x17h\\x02\\xdb\\xf0\\x1d\\xf8\\xad@\\x01\\x01u\\xbc\\x0c\\x02\\x04\\x10\\x12\\xf4\\x01n`\', 4, 7, \'invalid continuation byte\')})'),[0m
[1m[31mE         +  'portal2/maps/sp_a2_trust_fling.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\x8b\\xe4?*\\x01jX\\x05c\\x8c!\\xfd\\xf3\\xd6\\x06PdC\\xfb\\x01`\\x80\\x06\\x94`6I\\x01\\x83\\x90\\x01\\x01\\x02`@\\x0c\\x02\\x04\\x108\\x89\\x01\\x01{ ', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_turret_blocker.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\x07\\xdc1\\xfb\\xf3<\\x03\\xf6\\x10\\x0e\\xa7SL\\x04\\xaed%Y\\xba`\\x04\\xd3\\xc0+{\\x01\\x07\\xd0\\x01\\x01\\x01\\xb8\\x1c\\x0c\\x02\\x04\\x10 \\x10\\x01\\xc5`', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a2_turret_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03`\\xf86v\\xe8\\\\\\x03T\\x8c\\t\\xc6*\\xb6\\x04\\x18|\\x1e\\x80\\x97\\x046\\xfc/r\\x01#\\xf0\\x01\\x01\\x01\\t\\x88\\x0c\\x02\\x04\\x10\\x1b\\xa4\\x01\\xa0 ', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a3_00.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\xb6|)\\xdd', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a3_01.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x08r4v\\xd9\\x01\\x99\\xe0\\x08\\x0b\\xc8`\\xe3\\x03\\r\\xbd\\t\\xb7\\xb0FC\\x01^\\xa0\\t\\xfd\\xf4V\\xbd\\x01\\xf8\\x90\\x01\\x01\\x04(|\\x0c\\x02\\x04\\x10B\\xe2\\x01\\x01o\\xe0', 4, 5, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a3_03.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05}\\x8cL\\xcb\\x01\\x86\\xf0\\x05>t6e\\x02(\\xc7\\x06?\\x0cG\\x14\\x01P\\x80\\x06\\x86 ,\\xbc\\x01\\\\0\\x01\\x01\\x0208\\x0c\\x02\\x04\\x10?\\xbe\\x01\\x01f@', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a3_bomb_flings.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x03\\x19\\xf8/\\xaf\\xb6\\xa0\\x03\\x03\\x98\\x14\\x17\\x848\\x03\\x94\\xc0\\x1d\\x81~\\xc0\\x03\\xb2D$\\xa0\\x01%\\xe8\\x01\\x01\\x01O@\\x0c\\x02\\x04\\x10\\x1b\\xa0\\x01\\x84', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a3_crazy_box.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04Q\\xd0(\\x17\\xd7p\\x044\\x84\\x17\\xba\\xa4\\x9c\\x04\\xa7\\x9c2L\\xe2\\x04\\xd9\\xe8\\x1bw\\xf8X\\x01\\x01\\x02{D\\x0c\\x02\\x04\\x10,D\\x01\\xf2`', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a3_end.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x07;dm\\x93\\x01\\xe5X\\x07\\x13\\xa4 \\xfd\\x01V\\x16\\x08\\x85\\\\C\\xfa\\x01F\\xe0\\x08\\xc9X=\\xe1\\x01\\xd4\\x90\\x01\\x01\\x03\\x88\\x14\\x0c\\x02\\x04\\x10<\\x87\\x01\\x01Y\\xc0', 4, 5, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a3_jump_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\x16\\x1876\\x01%4\\x04\\xd5\\xa4<7\\x01\\xa9_\\x05\\x8e\\x04=\\xf7\\x01\\x1d\\xe0\\x05\\xcb\\xfc,\\x13\\x01\\x89\\xc0\\x01\\x01\\x02\\x8c\\x10\\x0c\\x02\\x04\\x108\\x80\\x01\\x01(\\xc0', 14, 15, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a3_portal_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\t\\xc4\\x04gc\\x02X\\x0c\\tY<b\\xe4\\x03\\x90\\x08\\n\\x968X\\x9e\\x01\\x93@\\n\\xee\\xd8NS\\x02\\x8b`\\x01\\x01\\x04\\xb9(\\x0c\\x02\\x04\\x10R\\x92\\x01\\x01\\xa9\\xe0', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a3_speed_flings.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02!L#\\x98\\xbe\\xd4\\x02\\x1d`\\x01*\\x0b|\\x02q\\\\\\x11\\xd1N`\\x02\\x830\\x1a\\xc7\\xcb\\xe8\\x01\\x01\\xc0,\\x0c\\x02\\x04\\x10\\x10\\xa7\\x01T`', 4, 5, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a3_speed_ramp.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04|\\x84.~\\xdf\\x98\\x04\\x1b\\xd4]>\\x02\\x83\\xe1\\x04\\xe8\\xb42O\\xe2\\xc0\\x05\\x1b\\x04,\\xf8\\x01q\\xd8\\x01\\x01\\x02=\\xec\\x0c\\x02\\x04\\x10/)\\x01\\xea\\xc0', 2, 3, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a3_transition01.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x07\\xff8TD\\x01\\x89\\x07\\xba\\xc4=\\xe6\\x01\\xca\\x9b\\x08\\xd9\\xe8A\\xd9\\x013`\\t\\x1b\\xc4-q\\x01\\x81\\x08\\x01\\x01\\x04v\\x18\\x0c\\x02\\x04\\x10<\\xce\\x01\\x01C ', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a4_finale1.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xae\\x0cEd\\x01r\\\\\\x04\\x89\\xf4\\x1e@\\xce\\x92\\x05lLEZ\\x01Q\\xc0\\x05\\xb1\\xa84\\x1a\\x01Q\\xc8\\x01\\x01\\x01\\xf1X\\x0c\\x02\\x04\\x10;\\xd6\\x01\\x01c\\xc0', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a4_finale2.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06\\x05\\xd4>\\x9e\\x01\\x97p\\x05\\xdeD\\x1f\\xeb\\xba\\xa9\\x06\\x96V*\\x01\\xb4\\xc0\\x06\\xec,%\\xdb\\x01?\\xc8\\x01\\x01\\x0308\\x0c\\x02\\x04\\x10I\\xad\\x01\\x01\\xd0\\xe0', 2, 3, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a4_finale3.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x05t\\xd4G\'\\x01\\xbaD\\x05=H1m\\x01\\xa9\\xcb\\x05\\xf2`O\\xbd\\x01x\\xc0\\x06B -\\x83\\x01\\x9cP\\x01\\x01\\x02al\\x0c\\x02\\x04\\x10Ed\\x01\\x01\\x8c@", 2, 3, \'invalid continuation byte\')})'),[0m
[1m[31mE         +  'portal2/maps/sp_a4_finale4.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\xc2T\\x9c\\xf3\\x01\\xfap\\x05\\xac\\x90\\x10\\x16\\x98k\\x06\\xfd`@T\\x019 \\x07=\\xb4?\\x9e\\x01X\\x88\\x01\\x01\\x02l\\xfc\\x0c\\x02\\x04\\x1098\\x01\\x01M ', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a4_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06\\x85\\x9c]Z\\x02%\\xfc\\x06M\\x942\\xf1\\x01\\x183\\x07lXF\\xec\\x01m\\x80\\x07\\xb3D1\\x18\\x01j\\xd0\\x01\\x01\\x02\\xb1\\x1c\\x0c\\x02\\x04\\x10:X\\x01\\x01\\x82 ', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a4_jump_polarity.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x08\\xb9\\x8c_F\\x01\\xff\\xe0\\x08: {\\r\\x03[\\xf3\\t\\xb0\\x90Y}\\x01\\xb9`\\n\\n\\x1076\\x01i\\xb0\\x01\\x01\\x04e8\\x0c\\x02\\x04\\x10Ph\\x01\\x01\\xc8', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a4_laser_catapult.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x06l,mx\\x01\\xf4d\\x065\\xac2\\n\\xf6\\n\\x07\\x81\\x98@\\xad\\x01:@\\x07\\xc2H;\\xd9\\x01]\\xe0\\x01\\x01\\x02\\xe6t\\x0c\\x02\\x04\\x109\\\\\\x01\\x01I ', 6, 7, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a4_laser_platform.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\x83@`\\xf2\\x02\\x16\\x90\\x05c\\x08\\x1b\\x11\\xa2\\x88\\x06`\\xb4C\\x17\\x01F\\x80\\x06\\xa3\\xcc.N\\x013\\xb0\\x01\\x01\\x02\\xa3(\\x0c\\x02\\x04\\x10;(\\x01\\x01W\\x80', 1, 2, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a4_speed_tb_catch.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04h4<\\x9a\\x01`\\x98\\x04C\\x88 @\\xd2\\xe3\\x04\\xf8\\x18>\\xff\\x010\\xe0\\x057\\x18\\x1f/\\xf8X\\x01\\x01\\x01\\xa5\\xc8\\x0c\\x02\\x04\\x105s\\x01\\x01>\\xe0', 4, 5, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a4_stop_the_box.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x04G\\x883#\\x01-\\\\\\x041,\\x11\\xbad)\\x04\\xe8,5T\\x01+\\xa0\\x05\\x1d\\x80\'t\\x01\\x07\\x88\\x01\\x01\\x01\\xced\\x0c\\x02\\x04\\x10*?\\x01\\x01>\\xa0", 2, 3, \'invalid start byte\')})'),[0m
[1m[31mE         +  'portal2/maps/sp_a4_tb_catch.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x04\\xc2,@\\x84\\x01:d\\x04\\xaax\\x13\\xee\\x88\\xb1\\x05v\\x08/\\xc4\\xe3\\x05\\xa5\\xcc1d\\x01W \\x01\\x01\\x01\\xb8\\xd8\\x0c\\x02\\x04\\x10)S\\x01\\xee ', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a4_tb_intro.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x02\\xdd8,W\\xfb\\xb8\\x02\\xd4\\xdc\\x04\\x96\\x11\\xe1\\x03xH#\\xab\\xdb`\\x03\\x9b\\xf4#O\\xdb\\xa8\\x01\\x01\\xb34\\x0c\\x02\\x04\\x10\\x1c,\\x01\\xed', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a4_tb_polarity.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x05\\x08dB\\x9e\\x01b`\\x04\\xd5\\x88/9\\x01/G\\x05\\xb5\\xd468\\x01\\x14`\\x05\\xec\\x0c+D\\x01$\\x80\\x01\\x01\\x02Ht\\x0c\\x02\\x04\\x10/\\xfe\\x01\\x01 \\xa0', 4, 5, 'invalid start byte')})"),[0m
[1m[31mE         +  'portal2/maps/sp_a4_tb_trust_drop.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x04\\xf4\\xe8=\\x97\\x01]\\x14\\x04\\xc2\\xa4.\\xa5\\x011\\xb2\\x05\\xa2x9\\xa7\\x015\\xe0\\x05\\xdc +\'\\x01BP\\x01\\x01\\x02A\\xbc\\x0c\\x02\\x04\\x100\\xd2\\x01\\x01D ", 1, 2, \'invalid continuation byte\')})'),[0m
[1m[31mE         +  'portal2/maps/sp_a4_tb_wall_button.360.bsp': AssertionError('sprp v9\nassert 1 == 0\n +  where 1 = len({\'sprp v9\': UnicodeDecodeError(\'utf-8\', b"\\x04\\x90\\xd4<\\x18\\x01,H\\x04~$\\r\\xd8V\\xdd\\x05ND<\\x05\\x01%\\xe0\\x05\\x8aL-\'\\x015`\\x01\\x01\\x01\\xdf\\x84\\x0c\\x02\\x04\\x102D\\x01\\x014\\xc0", 1, 2, \'invalid start byte\')})'),[0m
[1m[31mE         +  'portal2/maps/sp_a5_credits.360.bsp': AssertionError("sprp v9\nassert 1 == 0\n +  where 1 = len({'sprp v9': UnicodeDecodeError('utf-8', b'\\x0b\\xf4R', 1, 2, 'invalid continuation byte')})"),[0m
[1m[31mE           }[0m

[1m[31mtests\test_bsp.py[0m:109: AssertionError
[33m============================== warnings summary ===============================[0m
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Blade Symphony-map_dirs33]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3468 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Blade Symphony-map_dirs33]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 584 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Blade Symphony-map_dirs33]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2684 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Blade Symphony-map_dirs33]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 244 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Blade Symphony-map_dirs33]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 8868 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Blade Symphony-map_dirs33]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2020 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Blade Symphony-map_dirs33]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2576 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2232 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1308 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 7020 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3048 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3180 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 12108 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 15544 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2872 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3140 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 16452 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 9560 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4960 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3516 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 12632 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 27896 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 7000 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 27564 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 8136 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 25364 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 13924 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 12288 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 15440 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 36752 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 30704 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 40340 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 41500 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4996 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2584 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Counter-Strike Global Offensive-map_dirs35]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3008 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1916 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2300 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 428 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 408 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 36 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1984 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 648 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 684 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 364 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4308 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 576 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1332 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 92 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1400 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 288 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 124 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3700 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2544 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 5032 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1728 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 24 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1288 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 88 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 8 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 12 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 512 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3000 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 196 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2076 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 368 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 504 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1244 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 20 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 828 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1464 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1420 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1824 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2156 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 140 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 580 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 776 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 156 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2360 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 704 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 16 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 660 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 868 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3660 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Jabroni Brawl Episode 3-map_dirs57]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 904 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Momentum Mod Playtest-map_dirs61]
tests/test_bsp.py::test_load_bsp[D:/SteamLibrary/steamapps/common-Team Fortress 2-map_dirs69]
tests/test_bsp.py::test_load_bsp[E:/Mod-CSS/Bocuma747_SurfMaps-map_dirs106]
tests/test_bsp.py::test_load_bsp[E:/Mod-CSS/OiuSURF_SurfMaps-map_dirs107]
tests/test_bsp.py::test_load_bsp[E:/Mod-MomentumMod-map_dirs114]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\lumps\__init__.py:393: UserWarning: compressed empty sprp game lump
    warnings.warn(UserWarning(f"compressed empty {child_name} game lump"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 628 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 180 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 256 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
tests/test_bsp.py::test_load_bsp[E:/Mod-MomentumMod-map_dirs114]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 80 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1164 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 668 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 260 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 272 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 916 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 468 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1732 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 564 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 176 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1004 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1176 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 60 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3896 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4612 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2612 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3748 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4796 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3628 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3976 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 5672 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3044 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4848 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2624 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4980 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 5424 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 5956 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2764 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 6136 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 8636 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 8248 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 5220 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2196 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 5688 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4124 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 6012 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 6568 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4412 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 5896 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3440 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4652 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 6712 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3432 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3040 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3808 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3988 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1920 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2404 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4116 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2972 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3296 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2432 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 5576 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 8012 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 10188 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 10052 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 5224 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 5084 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4864 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 5248 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2844 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2112 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2588 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2240 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2160 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 5384 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2800 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2044 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3476 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3736 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4852 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 5952 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2900 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3684 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 8504 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 6556 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 5416 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4332 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3408 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4824 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3972 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1892 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 7908 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2716 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 344 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 1904 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2120 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 5788 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2420 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 8772 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 14012 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3448 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3176 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2336 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 3720 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 4976 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BlackMesa-map_dirs102]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 5488 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BloodyGoodTime-map_dirs103]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 222464 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BloodyGoodTime-map_dirs103]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 225280 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-BloodyGoodTime-map_dirs103]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 196480 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 54792 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 32616 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 43128 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 42696 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 29880 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 16200 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 44568 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 45648 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 32040 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 25704 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 19800 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 47376 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 32112 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 18864 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 38448 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 33120 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 17280 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 39816 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 16416 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 18072 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 84240 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 16920 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 59184 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 44136 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 40176 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 49968 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 63648 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 34992 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 28872 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 32400 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 48024 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/singleplayer-map_dirs109]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 25632 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/multiplayer-map_dirs110]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2304 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/multiplayer-map_dirs110]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 8712 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/multiplayer-map_dirs110]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 9576 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/multiplayer-map_dirs110]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 25920 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/multiplayer-map_dirs110]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 9864 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/multiplayer-map_dirs110]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 17496 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/multiplayer-map_dirs110]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 45864 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/multiplayer-map_dirs110]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 42192 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/multiplayer-map_dirs110]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 19584 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/multiplayer-map_dirs110]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 60264 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-DarkMessiah/multiplayer-map_dirs110]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 37440 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TheShip-map_dirs118]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 161280 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TheShip-map_dirs118]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 61952 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TheShip-map_dirs118]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 108032 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TheShip-map_dirs118]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 113408 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TheShip-map_dirs118]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 173312 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TheShip-map_dirs118]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 264832 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TheShip-map_dirs118]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 256640 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TheShip-map_dirs118]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 180224 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TheShip-map_dirs118]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 148992 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TheShip-map_dirs118]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 67072 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TheShip-map_dirs118]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 184704 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TheShip-map_dirs118]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 251648 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TheShip-map_dirs118]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 16128 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TheShip-map_dirs118]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 2944 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TheShip-map_dirs118]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\valve\source.py:819: UserWarning: sprp lump has a tail of 6528 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 119792 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 146912 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 118368 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 76048 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 135128 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 134480 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 181352 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 81224 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 111456 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 160512 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 284776 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 48904 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 248880 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 112896 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 176104 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 161352 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 157072 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 78312 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 75680 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 90648 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 163112 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 128808 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 192480 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 71520 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-Titanfall-map_dirs121]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 195840 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 76040 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 616 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 96 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 40584 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 89744 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 284744 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 88032 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 80 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 40608 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 90592 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/test_bsp.py::test_load_bsp[E:/Mod-TitanfallOnline-map_dirs122]
  C:\Users\Jared\Documents\GitHub\bsp_tool\bsp_tool\branches\respawn\titanfall.py:988: UserWarning: sprp lump has a tail of 113120 bytes
    warnings.warn(UserWarning(f"sprp lump has a tail of {len(tail)} bytes"))

tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.id_software.quake]
  C:\Users\Jared\Documents\GitHub\bsp_tool\tests\branches\test_branch_scripts.py:99: UserWarning: Unused LumpClasses in branch script:
  MipTexture
    warnings.warn(UserWarning(warning_text))

tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.infinity_ward.call_of_duty1]
  C:\Users\Jared\Documents\GitHub\bsp_tool\tests\branches\test_branch_scripts.py:99: UserWarning: Unused LumpClasses in branch script:
  Vertex
  Cell
  Model
  CullGroup
  Brush
  Occluder
  PatchCollision
  AxisAlignedBoundingBox
    warnings.warn(UserWarning(warning_text))

tests/branches/test_branch_scripts.py::test_basic_branch_script[bsp_tool.branches.infinity_ward.call_of_duty2]
  C:\Users\Jared\Documents\GitHub\bsp_tool\tests\branches\test_branch_scripts.py:99: UserWarning: Unused LumpClasses in branch script:
  CollisionEdge
  CollisionTriangle
  Model
    warnings.warn(UserWarning(warning_text))

tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.arkane.dark_messiah_sp]
  C:\Users\Jared\Documents\GitHub\bsp_tool\tests\branches\test_branch_scripts.py:136: UserWarning: Unused LumpClasses in branch script:
  Model
  TextureInfo
    warnings.warn(UserWarning(warning_text))

tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.respawn.apex_legends]
  C:\Users\Jared\Documents\GitHub\bsp_tool\tests\branches\test_branch_scripts.py:136: UserWarning: Unused LumpClasses in branch script:
  LevelInfo
    warnings.warn(UserWarning(warning_text))

tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.respawn.titanfall]
  C:\Users\Jared\Documents\GitHub\bsp_tool\tests\branches\test_branch_scripts.py:136: UserWarning: Unused LumpClasses in branch script:
  Grid
  LevelInfo
    warnings.warn(UserWarning(warning_text))

tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.respawn.titanfall_x360]
  C:\Users\Jared\Documents\GitHub\bsp_tool\tests\branches\test_branch_scripts.py:136: UserWarning: Unused LumpClasses in branch script:
  Grid_x360
  LevelInfo_x360
    warnings.warn(UserWarning(warning_text))

tests/branches/test_branch_scripts.py::test_branch_script[bsp_tool.branches.valve.source]
  C:\Users\Jared\Documents\GitHub\bsp_tool\tests\branches\test_branch_scripts.py:136: UserWarning: Unused LumpClasses in branch script:
  CornerNeighbour
  SubNeighbour
    warnings.warn(UserWarning(warning_text))

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html

---------- coverage: platform win32, python 3.10.0-final-0 -----------
Name                                                 Stmts   Miss  Cover
------------------------------------------------------------------------
bsp_tool\__init__.py                                    53      3    94%
bsp_tool\base.py                                        79     35    56%
bsp_tool\branches\__init__.py                           33      0   100%
bsp_tool\branches\arkane\__init__.py                     3      0   100%
bsp_tool\branches\arkane\dark_messiah_mp.py             16      0   100%
bsp_tool\branches\arkane\dark_messiah_sp.py             48      0   100%
bsp_tool\branches\base.py                              419     45    89%
bsp_tool\branches\gearbox\__init__.py                    3      0   100%
bsp_tool\branches\gearbox\blue_shift.py                 28      0   100%
bsp_tool\branches\gearbox\nightfire.py                  90      0   100%
bsp_tool\branches\id_software\__init__.py                7      0   100%
bsp_tool\branches\id_software\qfusion.py               114      6    95%
bsp_tool\branches\id_software\quake2.py                197     27    86%
bsp_tool\branches\id_software\quake3.py                237     23    90%
bsp_tool\branches\id_software\quake.py                 298     54    82%
bsp_tool\branches\id_software\remake_quake.py           20      0   100%
bsp_tool\branches\id_software\remake_quake_old.py       25      0   100%
bsp_tool\branches\infinity_ward\__init__.py              4      0   100%
bsp_tool\branches\infinity_ward\call_of_duty1.py       168      6    96%
bsp_tool\branches\infinity_ward\call_of_duty2.py       134      1    99%
bsp_tool\branches\infinity_ward\modern_warfare.py       63      0   100%
bsp_tool\branches\ion_storm\__init__.py                  2      0   100%
bsp_tool\branches\ion_storm\daikatana.py                13      0   100%
bsp_tool\branches\loiste\__init__.py                     2      0   100%
bsp_tool\branches\loiste\infra.py                       80      0   100%
bsp_tool\branches\nexon\__init__.py                      4      0   100%
bsp_tool\branches\nexon\cso2.py                        109      6    94%
bsp_tool\branches\nexon\cso2_2018.py                    18      0   100%
bsp_tool\branches\nexon\vindictus.py                   261      3    99%
bsp_tool\branches\raven\__init__.py                      4      0   100%
bsp_tool\branches\raven\hexen2.py                       50      0   100%
bsp_tool\branches\raven\soldier_of_fortune2.py          32      0   100%
bsp_tool\branches\raven\soldier_of_fortune.py           14      0   100%
bsp_tool\branches\respawn\__init__.py                    5      0   100%
bsp_tool\branches\respawn\apex_legends.py              357     41    89%
bsp_tool\branches\respawn\titanfall2.py                246      3    99%
bsp_tool\branches\respawn\titanfall.py                 794    131    84%
bsp_tool\branches\respawn\titanfall_x360.py             27      0   100%
bsp_tool\branches\ritual\__init__.py                     7      0   100%
bsp_tool\branches\ritual\fakk2.py                       60      0   100%
bsp_tool\branches\ritual\mohaa.py                       42      0   100%
bsp_tool\branches\ritual\mohaa_bt.py                    12      0   100%
bsp_tool\branches\ritual\mohaa_demo.py                  89      0   100%
bsp_tool\branches\ritual\sin.py                         14      0   100%
bsp_tool\branches\ritual\star_trek_elite_force2.py      77      0   100%
bsp_tool\branches\shared.py                            105     23    78%
bsp_tool\branches\strata\__init__.py                     2      0   100%
bsp_tool\branches\strata\strata.py                     239      0   100%
bsp_tool\branches\troika\__init__.py                     2      0   100%
bsp_tool\branches\troika\vampire.py                     37      0   100%
bsp_tool\branches\utoplanet\__init__.py                  2      0   100%
bsp_tool\branches\utoplanet\merubasu.py                 80      0   100%
bsp_tool\branches\valve\__init__.py                     10      0   100%
bsp_tool\branches\valve\alien_swarm.py                  81      0   100%
bsp_tool\branches\valve\goldsrc.py                      88      3    97%
bsp_tool\branches\valve\left4dead2.py                  109      0   100%
bsp_tool\branches\valve\left4dead.py                   106      0   100%
bsp_tool\branches\valve\orange_box.py                  122      0   100%
bsp_tool\branches\valve\orange_box_x360.py              85      0   100%
bsp_tool\branches\valve\sdk_2013.py                    131      0   100%
bsp_tool\branches\valve\sdk_2013_x360.py                36      0   100%
bsp_tool\branches\valve\source.py                      750     48    94%
bsp_tool\branches\valve_physics.py                     179     50    72%
bsp_tool\branches\vector.py                            193    103    47%
bsp_tool\branches\x360.py                               21      0   100%
bsp_tool\extensions\__init__.py                          0      0   100%
bsp_tool\extensions\archive.py                          70     70     0%
bsp_tool\extensions\decompile_rbsp.py                  102    102     0%
bsp_tool\extensions\decrypt_xor.py                      11     11     0%
bsp_tool\extensions\diff.py                            113    113     0%
bsp_tool\extensions\lightmaps.py                       235    235     0%
bsp_tool\extensions\mprt.py                             15     15     0%
bsp_tool\extensions\to_cpp.py                           24     24     0%
bsp_tool\extensions\upgrade.py                          44     44     0%
bsp_tool\id_software.py                                 76      7    91%
bsp_tool\infinity_ward.py                               52      7    87%
bsp_tool\lumps\__init__.py                             358     93    74%
bsp_tool\raven.py                                        3      0   100%
bsp_tool\respawn.py                                    224    128    43%
bsp_tool\ritual.py                                      22      0   100%
bsp_tool\valve.py                                      142     77    46%
------------------------------------------------------------------------
TOTAL                                                 8227   1537    81%

[36m[1m=========================== short test summary info ===========================[0m
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[D:/SteamLibrary/steamapps/common-SourceFilmmaker-map_dirs67][0m - AssertionError: 7 out of 71 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod-DDayNormandy-map_dirs80][0m - AssertionError: 2 out of 719 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod-Vindictus-map_dirs119][0m - AssertionError: 300 out of 474 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod-Titanfall2-map_dirs123][0m - AssertionError: 99 out of 102 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod-ApexLegends-map_dirs124][0m - AssertionError: 40 out of 40 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod-ApexLegends/season3-map_dirs125][0m - AssertionError: 40 out of 40 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod-ApexLegends/season10-map_dirs126][0m - AssertionError: 23 out of 23 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod-ApexLegends/season11-map_dirs127][0m - AssertionError: 32 out of 32 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod-ApexLegends/season12-map_dirs128][0m - AssertionError: 54 out of 54 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod-ApexLegends/season13-map_dirs129][0m - AssertionError: 54 out of 54 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod-ApexLegends/season14-map_dirs130][0m - AssertionError: 60 out of 60 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod-ApexLegends/season15-map_dirs131][0m - AssertionError: 24 out of 24 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod-ApexLegends/season16-map_dirs132][0m - AssertionError: 48 out of 48 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod-ApexLegends/switch-map_dirs133][0m - AssertionError: 14 out of 14 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod/PS4-Titanfall2-map_dirs143][0m - AssertionError: 65 out of 71 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod/PS4-Titanfall2_tech_test-map_dirs144][0m - AssertionError: 8 out of 10 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod/X360-Left4Dead-map_dirs145][0m - AssertionError: 43 out of 44 .bsps failed
[31mFAILED[0m tests/test_bsp.py::[1mtest_load_bsp[E:/Mod/X360-Portal2-map_dirs148][0m - AssertionError: 105 out of 105 .bsps failed
[31m========= [31m[1m18 failed[0m, [32m215 passed[0m, [33m313 warnings[0m[31m in 44293.20s (12:18:13)[0m[31m =========[0m
